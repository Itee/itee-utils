{"version":3,"file":"itee-utils.esm.js","sources":["../sources/cores/arrays.js","../sources/cores/booleans.js","../sources/cores/functions.js","../sources/cores/numbers.js","../node_modules/itee-validators/builds/itee-validators.esm.js","../sources/cores/objects.js","../sources/cores/strings.js","../sources/cores/symbols.js","../sources/cores/voids.js","../sources/cores/_cores.js","../node_modules/rollup-plugin-node-builtins/src/es6/empty.js","../node_modules/rollup-plugin-node-builtins/src/es6/path.js","../sources/fs/files.js","../sources/fs/_fs.js","../sources/geomathics/trigonometries.js","../sources/geomathics/_geomathics.js","../sources/physics/temperatures.js","../sources/physics/_physics.js","../sources/testings/_testings.js","../sources/itee-utils.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/arrays\r\n * @description Export the utilities methods about Arrays\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/booleans\r\n * @description Export the utilities methods about booleans\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/functions\r\n * @description Export the utilities methods about functions\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/numbers\r\n * @description Export the utilities methods about numbers\r\n *\r\n */\r\n\r\n/**\r\n * Returns a random number between min (inclusive) and max (exclusive)\r\n */\r\nexport function getRandomArbitrary ( min = 0, max = 1 ) {\r\n    return Math.random() * ( max - min ) + min\r\n}\r\n\r\n/**\r\n * Returns a random integer between min (inclusive) and max (inclusive)\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nexport function getRandomInt ( min = 0, max = 1 ) {\r\n    return ( Math.floor( Math.random() * ( max - min + 1 ) ) + min )\r\n}\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array or not\r\n * @example\r\n *\r\n * import { isArray } from 'itee-validators'\r\n *\r\n * if( isArray( value ) ) {\r\n *     //...\r\n * } else {\r\n *     //...\r\n * }\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array\r\n *\r\n * @param data {*} The data to check against the array type\r\n * @returns {boolean} true if data is array, false otherwise\r\n */\r\nfunction isArray ( data ) {\r\n    return Array.isArray( data )\r\n}\r\n\r\n\r\n\r\n////////////////////\r\n\r\n/**\r\n * Check if given data is not an array\r\n *\r\n * @param data {*} The data to check against the array type\r\n * @returns {boolean} true if data is not array, false otherwise\r\n */\r\nfunction isNotArray ( data ) {\r\n    return !Array.isArray( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an empty array\r\n *\r\n * @param data {*} The data to check against the empty array\r\n * @returns {boolean} true if data is an empty array, false otherwise\r\n */\r\nfunction isEmptyArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    return (data.length === 0)\r\n\r\n}\r\n\r\n///////\r\n\r\n/**\r\n * Check if given data is not an empty array\r\n *\r\n * @param data {*} The data to check against the empty array\r\n * @returns {boolean} true if data is not an empty array, false otherwise\r\n */\r\nfunction isNotEmptyArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n\r\n    return (data.length > 0)\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array of array\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is an array of array, false otherwise\r\n */\r\nfunction isArrayOfArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is not an array of array\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an array of array, false otherwise\r\n */\r\nfunction isNotArrayOfArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array with multiples values\r\n *\r\n * @param data {*} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with multiples values, false otherwise\r\n */\r\nfunction isArrayOfMultiElement ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    return (data.length > 1)\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is null\r\n *\r\n * @param data {*} The data to check against the nullity\r\n * @returns {boolean} true if data is null, false otherwise.\r\n */\r\nfunction isNull ( data ) {\r\n    return (data === null)\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is not null\r\n *\r\n * @param data {*} The data to check against the nullity\r\n * @returns {boolean} true if data is not null, false otherwise.\r\n */\r\nfunction isNotNull ( data ) {\r\n    return (data !== null)\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are null\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are null, false otherwise\r\n */\r\nfunction isArrayOfNull ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotNull( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not null\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are not null, false otherwise\r\n */\r\nfunction isNotArrayOfNull ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotNull( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n\r\n/**\r\n * Check if given data is not null and not undefined\r\n *\r\n * @param data {*} The data to check against the existence\r\n * @returns {boolean} true if data is not null and not undefined, false otherwise.\r\n */\r\nfunction isDefined ( data ) {\r\n    return ((data !== null) && (typeof data !== 'undefined'))\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is null or undefined\r\n *\r\n * @param data {*} The data to check against the existence\r\n * @returns {boolean} true if data is null or undefined, false otherwise.\r\n */\r\nfunction isNotDefined ( data ) {\r\n    return ((data === null) || (typeof data === 'undefined'))\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/objects\r\n * @desc Export function to validate if a value is an object\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an object\r\n *\r\n * @param data {*} The data to check against the object type\r\n * @returns {boolean} true if data is object, false otherwise\r\n */\r\nfunction isObject ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n\r\n    return (data.constructor === Object)\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an object\r\n *\r\n * @param data {*} The data to check against the object type\r\n * @returns {boolean} true if data is not an object, false otherwise\r\n */\r\nfunction isNotObject ( data ) {\r\n    return !isObject( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array where all values are of object type\r\n *\r\n * @param data {*} The data to check against the array of object type\r\n * @returns {boolean} true if data is an array where all values are of object type, false otherwise\r\n */\r\nfunction isArrayOfObject ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotObject( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an array where all values are of object type\r\n *\r\n * @param data {*} The data to check against the array of object type\r\n * @returns {boolean} true if data is not an array where all values are of object type, false otherwise\r\n */\r\nfunction isNotArrayOfObject ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotObject( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array with a single value\r\n *\r\n * @param data {*} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with a single value, false otherwise\r\n */\r\nfunction isArrayOfSingleElement ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    if ( data.length !== 1 ) {\r\n        return false\r\n    }\r\n\r\n    return true\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a string\r\n *\r\n * @param data {*} The data to check against the string type\r\n * @returns {boolean} true if data is a string, false otherwise.\r\n */\r\nfunction isString ( data ) {\r\n    return (typeof data === 'string' || data instanceof String)\r\n}\r\n\r\n\r\n\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a string\r\n *\r\n * @param data {*} The data to check against the string type\r\n * @returns {boolean} true if data is not a string, false otherwise.\r\n */\r\nfunction isNotString ( data ) {\r\n    return !isString( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are string\r\n *\r\n * @param data {*} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are string, false otherwise\r\n */\r\nfunction isArrayOfString ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotString( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not string\r\n *\r\n * @param data {*} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are not string, false otherwise\r\n */\r\nfunction isNotArrayOfString ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotString( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is undefined\r\n *\r\n * @param data {*} The data to check against the undefiness\r\n * @returns {boolean} true if data is undefined, false otherwise.\r\n */\r\nfunction isUndefined ( data ) {\r\n    return (typeof data === 'undefined')\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is defined\r\n *\r\n * @param data {*} The data to check against the undefiness\r\n * @returns {boolean} true if data is defined, false otherwise.\r\n */\r\nfunction isNotUndefined ( data ) {\r\n    return (typeof data !== 'undefined')\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are undefined\r\n *\r\n * @param data {*} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are undefined, false otherwise\r\n */\r\nfunction isArrayOfUndefined ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotUndefined( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are defined\r\n *\r\n * @param data {*} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are defined, false otherwise\r\n */\r\nfunction isNotArrayOfUndefined ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotUndefined( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_arrays\r\n * @description Export the validation methods about Arrays\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/booleans\r\n * @desc Export function to validate if a value is a boolean or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a boolean\r\n *\r\n * @param data {*} The data to check against the booleaness\r\n * @returns {boolean} true if data is a boolean, false otherwise.\r\n */\r\nfunction isBoolean ( data ) {\r\n    return (typeof data === 'boolean')\r\n}\r\n\r\n\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a boolean\r\n *\r\n * @param data {*} The data to check against the booleaness\r\n * @returns {boolean} true if data is not a boolean, false otherwise.\r\n */\r\nfunction isNotBoolean ( data ) {\r\n    return (typeof data !== 'boolean')\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_booleans\r\n * @description Export the validation methods about booleans\r\n *\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/objects\r\n * @desc Export function to validate if a value is an object\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an empty object\r\n *\r\n * @param data {*} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is an empty object, false otherwise\r\n */\r\nfunction isEmptyObject ( data ) {\r\n\r\n    if ( isNotObject( data ) ) { return false }\r\n\r\n    if ( data.length === 0 ) {\r\n        return true\r\n    }\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    for ( let key in data ) {\r\n        if ( Object.prototype.hasOwnProperty.call( data, key ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty object\r\n *\r\n * @param data {*} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is not an empty object, false otherwise\r\n */\r\nfunction isNotEmptyObject ( data ) {\r\n    return !(isEmptyObject( data ))\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an empty string\r\n *\r\n * @param data {*} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is an empty string, false otherwise.\r\n */\r\nfunction isEmptyString ( data ) {\r\n\r\n    if ( isNotString( data ) ) {\r\n        return false\r\n    }\r\n\r\n    return (data.length === 0)\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty string\r\n *\r\n * @param data {*} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is not an empty string, false otherwise.\r\n */\r\nfunction isNotEmptyString ( data ) {\r\n\r\n    return !(isEmptyString(data))\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check emptiness of given data\r\n *\r\n * See: https://stackoverflow.com/questions/4346186/how-to-determine-if-a-function-is-empty\r\n *\r\n * @param data {*} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as empty, false otherwise.\r\n */\r\nfunction isEmpty ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n    if ( isEmptyString( data ) ) { return true}\r\n    if ( isEmptyArray( data ) ) { return true }\r\n    if ( isEmptyObject( data ) ) { return true }\r\n\r\n    return false\r\n\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check fullness of given data\r\n *\r\n * @param data {*} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as not empty, false otherwise.\r\n */\r\nfunction isNotEmpty ( data ) {\r\n    return !isEmpty( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_voids\r\n * @description Export the validation methods about voids notions like null or undefined\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/functions\r\n * @desc Export function to validate if a value is a function or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a function\r\n *\r\n * @param data {*} The data to check against the functionality\r\n * @returns {boolean} true if data is a function, false otherwise.\r\n */\r\nfunction isFunction ( data ) {\r\n    return (typeof data === 'function')\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is not a function\r\n *\r\n * @param data {*} The data to check against the functionality\r\n * @returns {boolean} true if data is not a function, false otherwise.\r\n */\r\nfunction isNotFunction ( data ) {\r\n    return (typeof data !== 'function')\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_functions\r\n * @description Export the validation methods about functions\r\n *\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isZero\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is zero\r\n *\r\n * @param data {*} The data to check against the zero value\r\n * @returns {boolean} true if data is zero, false otherwise\r\n */\r\nfunction isZero ( data ) {\r\n    return (data === 0)\r\n}\r\n\r\n/**\r\n * Check if the given data is a positive zero\r\n *\r\n * @param data {*} The data to check against the positive zero value\r\n * @returns {boolean} true if data is a positive zero, false otherwise\r\n */\r\nfunction isZeroPositive ( data ) {\r\n    return (data === 0 && (1 / data) === Number.POSITIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * Check if the given data is a negative zero\r\n *\r\n * @param data {*} The data to check against the negative zero value\r\n * @returns {boolean} true if data is a negative zero, false otherwise\r\n */\r\nfunction isZeroNegative ( data ) {\r\n    return (data === 0 && (1 / data) === Number.NEGATIVE_INFINITY)\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isNumber\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a number, false otherwise.\r\n */\r\nfunction isNumber ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n\r\n    return (data.constructor === Number)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Check if the data is a positive number\r\n *\r\n * @param data {*} The data to check against the positivity\r\n * @returns {boolean} true if data is a positive number, false otherwise.\r\n */\r\nfunction isNumberPositive ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n\r\n    return (data > 0 || isZeroPositive( data ) || isInfinitePositive( data ))\r\n\r\n}\r\n\r\n/**\r\n * Check if the data is a negative number\r\n *\r\n * @param data {*} The data to check against the negativity\r\n * @returns {boolean} true if data is a negative number, false otherwise.\r\n */\r\nfunction isNumberNegative ( data ) {\r\n    return (isNumber( data ) && data < 0)\r\n}\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {*} The data to check against the number type\r\n * @returns {boolean} true if data is not of type number or not a number, false otherwise.\r\n */\r\nfunction isNotNumber ( data ) {\r\n    return !(isNumber( data ))\r\n}\r\n\r\n\r\n/////////\r\n\r\n/**\r\n * Check if the given data is an integer number\r\n *\r\n * @param data {*} The data to check against the integer state\r\n * @returns {boolean} true if data is an integer, false otherwise\r\n */\r\nfunction isInteger ( data ) {\r\n    return Number.isInteger(data)\r\n}\r\n\r\n\r\n\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is a floating point number\r\n *\r\n * @param data {*} The data to check against the floating point\r\n * @returns {boolean} true if data is a float, false otherwise\r\n */\r\nfunction isFloat ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n    if ( Number.isNaN( data ) ) { return false }\r\n    if ( isInfinite( data ) ) { return false}\r\n\r\n    return data % 1 !== 0\r\n\r\n}\r\n\r\n\r\n\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is not a number, false otherwise.\r\n */\r\nfunction isNaN ( data ) {\r\n    return Number.isNaN( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isInfinite\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is an infinite number\r\n *\r\n * @param data {*} The data to check against the infinite state\r\n * @returns {boolean} true if data is infinite, false otherwise\r\n */\r\nfunction isInfinite ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n    if ( Number.isNaN( data ) ) { return false }\r\n\r\n    return !Number.isFinite( data )\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite negative number\r\n *\r\n * @param data {*} The data to check against the negative infinite state\r\n * @returns {boolean} true if data is negative infinite, false otherwise\r\n */\r\nfunction isInfiniteNegative ( data ) {\r\n    return (data === Number.NEGATIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite positive number\r\n *\r\n * @param data {*} The data to check against the positive infinite state\r\n * @returns {boolean} true if data is positive infinite, false otherwise\r\n */\r\nfunction isInfinitePositive ( data ) {\r\n    return (data === Number.POSITIVE_INFINITY)\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if the given data is a finite number\r\n *\r\n * @param data {*} The data to check against the finite state\r\n * @returns {boolean} true if data is finite, false otherwise\r\n */\r\nfunction isFinite ( data ) {\r\n    return Number.isFinite( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isMax\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a maximum positive number\r\n *\r\n * @param data {*} The data to check against the positive maximum state\r\n * @returns {boolean} true if data is positive maximum, false otherwise\r\n */\r\nfunction isMaxPositive ( data ) {\r\n    return (data === Number.MAX_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a maximum negative number\r\n *\r\n * @param data {*} The data to check against the maximum infinite state\r\n * @returns {boolean} true if data is negative maximum, false otherwise\r\n */\r\nfunction isMaxNegative ( data ) {\r\n    return (data === -Number.MAX_VALUE)\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isSafeInteger\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a maximum safe integer number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a maximum safe integer, false otherwise\r\n */\r\nfunction isMaxSafeInteger ( data ) {\r\n    return (data === Number.MAX_SAFE_INTEGER)\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum safe integer number\r\n *\r\n * @param data {*} The data to check against the minimum safe integer state\r\n * @returns {boolean} true if data is a minimum safe integer, false otherwise\r\n */\r\nfunction isMinSafeInteger ( data ) {\r\n    return (data === Number.MIN_SAFE_INTEGER)\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isMin\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a minimum positive number\r\n *\r\n * @param data {*} The data to check against the positive minimum state\r\n * @returns {boolean} true if data is positive minimum, false otherwise\r\n */\r\nfunction isMinPositive ( data ) {\r\n    return (data === Number.MIN_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum negative number\r\n *\r\n * @param data {*} The data to check against the minimum infinite state\r\n * @returns {boolean} true if data is negative minimum, false otherwise\r\n */\r\nfunction isMinNegative ( data ) {\r\n    return (data === -Number.MIN_VALUE)\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_numbers\r\n * @description Export the validation methods about numbers\r\n *\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/symbols\r\n * @desc Export function to validate if a value is a symbol\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a symbol\r\n *\r\n * @param data {*} The data to check against the symbol type\r\n * @returns {boolean} true if data is a symbol, false otherwise.\r\n */\r\nfunction isSymbol ( data ) {\r\n    return (typeof data === 'symbol')\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not a symbol\r\n *\r\n * @param data {*} The data to check against the symbol type\r\n * @returns {boolean} true if data is not a symbol, false otherwise.\r\n */\r\nfunction isNotSymbol ( data ) {\r\n    return (typeof data !== 'symbol')\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_symbols\r\n * @description Export the validation methods about symbols\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a blank string\r\n *\r\n * @param data {*} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is a blank string, false otherwise.\r\n */\r\nfunction isBlankString ( data ) {\r\n\r\n    if ( isNotString( data ) ) { return false }\r\n    if ( isEmptyString( data ) ) { return false }\r\n\r\n    return (!/\\S/.test( data ))\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if the given data is not a blank string\r\n *\r\n * @param data {*} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is not a blank string, false otherwise.\r\n */\r\nfunction isNotBlankString ( data ) {\r\n\r\n    return !(isBlankString( data ))\r\n\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_strings\r\n * @description Export the validation methods about strings\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_objects\r\n * @description Export the validation methods about objects\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/cores\r\n * @description Export the Validator singleton instance that allow to validate complex data structure\r\n * @example\r\n *\r\n const validator = Itee.Validators.Validator\r\n\r\n // Using unique function for One registered type\r\n // Usefull when a simple data structure is used multiple times\r\n validator.add( 'ColorType', color => {\r\n\r\n                const r = color.r\r\n                if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\r\n                    return false\r\n                }\r\n\r\n                const g = color.g\r\n                if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\r\n                    return false\r\n                }\r\n\r\n                const b = color.b\r\n                if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            } )\r\n\r\n // Using schema composition\r\n // Usefull for design validation schema faster and based on previous declared validation types\r\n validator.add( 'Range_0_255', ( value ) => {\r\n\r\n                if ( Itee.Validators.isNotNumber( value ) ) {\r\n                    return false\r\n                }\r\n\r\n                return !(value < 0 || value > 255)\r\n\r\n            } )\r\n\r\n validator.add( 'ColorSchema', {\r\n                r: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                },\r\n                g: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                },\r\n                b: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                }\r\n            } )\r\n\r\n validator.add( 'ColorStructure', {\r\n                color_from_type: {\r\n                    type: 'ColorType'\r\n                },\r\n                col_from_schema: {\r\n                    type: 'ColorSchema'\r\n                },\r\n                col_from_fn:     {\r\n                    // Inner function\r\n\t                // Usefull for specific validation requirement that cannot match other previous validation schema or type\r\n                    fn: function ColorValidator ( color ) {\r\n\r\n                        const r = color.r\r\n                        if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        const g = color.g\r\n                        if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        const b = color.b\r\n                        if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        return true\r\n                    }\r\n                }\r\n            } )\r\n\r\n // The data to validate\r\n const colorStruct = {\r\n                color_from_type: {\r\n                    r: 0,\r\n                    g: 1,\r\n                    b: 2\r\n                },\r\n                col_from_schema: {\r\n                    r: 10,\r\n                    g: 20,\r\n                    b: 30\r\n                },\r\n                col_from_fn:     {\r\n                    r: 0,\r\n                    g: 127,\r\n                    b: 255\r\n                }\r\n            }\r\n\r\n // Execute\r\n\r\n try {\r\n\r\n    if ( validator.check( colorStruct, 'ColorStructure' ) ) {\r\n        alert( 'ColorStructure is valid !' )\r\n    } else {\r\n        alert( validator.errors )\r\n    }\r\n\r\n} catch ( err ) {\r\n    alert( err )\r\n}\r\n *\r\n */\r\n\r\nclass Validator {\r\n\r\n    constructor () {\r\n\r\n        /**\r\n         * The validators store, by default it contains validators for Boolean, Number, Integer, Float, Array, String, Object, Symbol and Function\r\n         *\r\n         * @type {(function|object)}\r\n         */\r\n        this.validators = {\r\n            Boolean:  isBoolean,\r\n            Number:   isNumber,\r\n            Integer:  isInteger,\r\n            Float:    isFloat,\r\n            Array:    isArray,\r\n            String:   isString,\r\n            Object:   isObject,\r\n            Symbol:   isSymbol,\r\n            Function: isFunction\r\n        };\r\n\r\n        /**\r\n         * The list of errors occured during the check\r\n         *\r\n         * @type {Array.<string>}\r\n         */\r\n        this.errors = [];\r\n\r\n    }\r\n\r\n    /**\r\n     * Add a new validator schema to the validator instance\r\n     *\r\n     * @param type {string} - A string that represent the type of data to validate\r\n     * @param validator {(function|object)} - A function or validation schema that represent the type of data to validate\r\n     */\r\n    add ( type, validator ) {\r\n\r\n        if ( isNotString( type ) ) { throw new TypeError( `Validator: Expect type to be a string` ) }\r\n        if ( isNotFunction( validator ) && isNotObject( validator ) ) { throw new TypeError( `Validator: Expect validator to be an object or a function` ) }\r\n        if ( isDefined( this.validators[ type ] ) ) { throw new TypeError( `Validator: a validator is already defined for type '${type}'` ) }\r\n\r\n        this.validators[ type ] = validator;\r\n\r\n    }\r\n\r\n    /**\r\n     * To remove a registered type\r\n     *\r\n     * @param type {string} - The type to remove\r\n     */\r\n    remove ( type ) {\r\n\r\n        delete this.validators[ type ];\r\n\r\n    }\r\n\r\n    /**\r\n     * Allow to known the available types store in current validator instance\r\n     *\r\n     * @return {Array.<string>} - The list of registered type\r\n     */\r\n    getAvalaibleTypes () {\r\n\r\n        const availablesTypes = [];\r\n\r\n        for ( let key in this.validators ) {\r\n            availablesTypes.push( key );\r\n        }\r\n\r\n        return availablesTypes\r\n\r\n    }\r\n\r\n    /**\r\n     * Will perform a deep structural comparison between the given data and the validation schema of the given type\r\n     *\r\n     * @param data {*} - The data to validate\r\n     * @param type {string} - The type of the validation schema to apply\r\n     * @param breakOnError {boolean} - Return on first validation error ( true by default )\r\n     * @return {boolean} - Return true is the data is validated, false otherwise\r\n     */\r\n    check ( data, type, breakOnError = true ) {\r\n\r\n        const validator = this.validators[ type ];\r\n        if ( isNotDefined( validator ) ) {\r\n            throw new TypeError( `Validator: Unable to find schema validation of type '${type}'` )\r\n        }\r\n\r\n        let result = true;\r\n        if ( isFunction( validator ) ) {\r\n\r\n            result = validator( data );\r\n\r\n        } else if ( isObject( validator ) ) {\r\n\r\n            let subResult = true;\r\n            for ( let key in validator ) {\r\n\r\n                const subValidator = validator[ key ];\r\n                if ( isNotDefined( subValidator ) ) {\r\n                    throw new TypeError( `Validator: Missing validator for key '${key}' of type '${type}'` )\r\n                }\r\n\r\n                const value      = data[ key ];\r\n                const isRequired = subValidator.required;\r\n                if ( isNotDefined( value ) ) {\r\n                    if ( isRequired ) {\r\n                        subResult = false;\r\n                    } else {\r\n                        continue\r\n                    }\r\n                }\r\n\r\n                // In case of overriden validation function check it first\r\n                let validatorFunction = subValidator.fn;\r\n                if ( isDefined( validatorFunction ) ) {\r\n\r\n                    if ( isNotFunction( validatorFunction ) ) {\r\n                        throw new TypeError( `Validator: Invalid validation function for '${key}' with type '${type}'` )\r\n                    }\r\n\r\n                    subResult = validatorFunction( value );\r\n\r\n                } else {\r\n\r\n                    subResult = this.check( value, subValidator.type, breakOnError );\r\n\r\n                }\r\n\r\n                if ( subResult === false ) {\r\n\r\n                    this.errors.push( `Validator: Invalid property '${key}' of type '${subValidator.type}' with value '${value}' in object of type '${type}'` );\r\n                    result = false;\r\n                    if ( breakOnError ) {\r\n                        break\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            throw new TypeError( `Validator: Unknown validator of type '${type}'` )\r\n\r\n        }\r\n\r\n        return result\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * The singleton instance\r\n *\r\n * @type {Validator}\r\n */\r\nlet validatorInstance = undefined;\r\nif ( isNotDefined( validatorInstance ) ) {\r\n    validatorInstance = new Validator();\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/maths/_maths\r\n * @description This is the maths export entry point.\r\n * It expose all exports of the ... sub-folder.\r\n *\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export constants about temperatures\r\n * @example todo\r\n *\r\n */\r\n\r\nconst ABSOLUTE_ZERO_KELVIN     = 0.00000000045;\r\nconst ABSOLUTE_ZERO_CELSIUS    = -273.14999999955;\r\nconst ABSOLUTE_ZERO_FAHRENHEIT = -459.67;\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isCelsius ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_CELSIUS)\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotCelsius ( data ) {\r\n    return !isCelsius( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isFahrenheit ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_FAHRENHEIT)\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotFahrenheit ( data ) {\r\n    return !isFahrenheit( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isKelvin ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_KELVIN)\r\n}\r\n\r\n///\r\n\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotKelvin ( data ) {\r\n    return !isKelvin( data )\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isTemperature ( data ) {\r\n    return (isKelvin( data ) || isCelsius( data ) || isFahrenheit( data ))\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotTemperature ( data ) {\r\n    return (isNotKelvin( data ) && isNotCelsius( data ) && isNotFahrenheit( data ))\r\n}\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/physics/_temperatures\r\n * @description Export the validation methods about temperatures\r\n */\n\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/physics/_physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\n\n/**\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n * _/\\\\\\\\\\\\\\\\\\\\\\________________________________________________________/\\\\\\________/\\\\\\_________________/\\\\\\\\\\\\__________________/\\\\\\_______________________________________________________________\r\n * _\\/////\\\\\\///________________________________________________________\\/\\\\\\_______\\/\\\\\\________________\\////\\\\\\_________________\\/\\\\\\______________________________________________________________\r\n * ______\\/\\\\\\_________/\\\\\\______________________________________________\\//\\\\\\______/\\\\\\____________________\\/\\\\\\_____/\\\\\\________\\/\\\\\\_____________________/\\\\\\____________________________________\r\n * _______\\/\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\_____________\\//\\\\\\____/\\\\\\____/\\\\\\\\\\\\\\\\\\_______\\/\\\\\\____\\///_________\\/\\\\\\___/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\_____/\\\\/\\\\\\\\\\\\\\___\r\n * ________\\/\\\\\\_____\\////\\\\\\////____/\\\\\\/////\\\\\\___/\\\\\\/////\\\\\\_____________\\//\\\\\\__/\\\\\\____\\////////\\\\\\______\\/\\\\\\_____/\\\\\\___/\\\\\\\\\\\\\\\\\\__\\////////\\\\\\___\\////\\\\\\////____/\\\\\\///\\\\\\__\\/\\\\\\/////\\\\\\_\r\n * _________\\/\\\\\\________\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\_______________\\//\\\\\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\____\\/\\\\\\__/\\\\\\////\\\\\\____/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\_______/\\\\\\__\\//\\\\\\_\\/\\\\\\___\\///_\r\n * __________\\/\\\\\\________\\/\\\\\\_/\\\\__\\//\\\\///////___\\//\\\\///////_________________\\//\\\\\\\\\\_______/\\\\\\/////\\\\\\_____\\/\\\\\\____\\/\\\\\\_\\/\\\\\\__\\/\\\\\\___/\\\\\\/////\\\\\\_____\\/\\\\\\_/\\\\__\\//\\\\\\__/\\\\\\__\\/\\\\\\_______\r\n * ________/\\\\\\\\\\\\\\\\\\\\\\____\\//\\\\\\\\\\____\\//\\\\\\\\\\\\\\\\\\\\__\\//\\\\\\\\\\\\\\\\\\\\________________\\//\\\\\\_______\\//\\\\\\\\\\\\\\\\/\\\\__/\\\\\\\\\\\\\\\\\\_\\/\\\\\\_\\//\\\\\\\\\\\\\\/\\\\_\\//\\\\\\\\\\\\\\\\/\\\\____\\//\\\\\\\\\\____\\///\\\\\\\\\\/___\\/\\\\\\______\r\n * ________\\///////////______\\/////______\\//////////____\\//////////__________________\\///_________\\////////\\//__\\/////////__\\///___\\///////\\//___\\////////\\//______\\/////_______\\/////_____\\///______\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n *\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/itee-validators\r\n * @description This is the main entry point to bundle the itee validators package.\r\n * It expose all exports of the cores, maths and physics sub-folder.\r\n *\r\n */\n\nexport { isArray, isNotArray, isArrayOfArray, isNotArrayOfArray, isArrayOfMultiElement, isArrayOfNull, isNotArrayOfNull, isArrayOfObject, isNotArrayOfObject, isArrayOfSingleElement, isArrayOfString, isNotArrayOfString, isArrayOfUndefined, isNotArrayOfUndefined, isEmptyArray, isNotEmptyArray, isBoolean, isNotBoolean, validatorInstance as Validator, isFunction, isNotFunction, isInfinite, isInfiniteNegative, isInfinitePositive, isFinite, isMaxPositive, isMaxNegative, isMaxSafeInteger, isMinSafeInteger, isMinPositive, isMinNegative, isNumber, isNumberPositive, isNumberNegative, isNotNumber, isInteger, isFloat, isNaN, isZero, isZeroPositive, isZeroNegative, isEmptyObject, isNotEmptyObject, isObject, isNotObject, isBlankString, isNotBlankString, isEmptyString, isNotEmptyString, isString, isNotString, isSymbol, isNotSymbol, isEmpty, isNotEmpty, isNull, isNotNull, isDefined, isNotDefined, isUndefined, isNotUndefined, ABSOLUTE_ZERO_KELVIN, ABSOLUTE_ZERO_CELSIUS, ABSOLUTE_ZERO_FAHRENHEIT, isCelsius, isNotCelsius, isFahrenheit, isNotFahrenheit, isKelvin, isNotKelvin, isTemperature, isNotTemperature };\n//# sourceMappingURL=itee-validators.esm.js.map\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/objects\r\n * @description Export the utilities methods about objects\r\n */\r\n\r\nimport {\r\n    isNotDefined,\r\n    isObject\r\n} from 'itee-validators'\r\n\r\nexport function uniq ( a ) {\r\n    var seen = {}\r\n    return a.filter( function ( item ) {\r\n        return seen.hasOwnProperty( item ) ? false : ( seen[ item ] = true )\r\n    } )\r\n}\r\n\r\n/**\r\n *\r\n * @param target\r\n * @param source\r\n * @return {*}\r\n */\r\nexport function extend ( target, source ) {\r\n\r\n    let output = undefined\r\n\r\n    if ( isObject( target ) && isNotDefined( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n    } else if ( isNotDefined( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, source )\r\n\r\n    } else if ( isObject( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n        const keys = Object.keys( source )\r\n\r\n        for ( let i = 0, n = keys.length ; i < n ; ++i ) {\r\n\r\n            let key = keys[ i ]\r\n\r\n            if ( isObject( source[ key ] ) ) {\r\n\r\n                if ( key in target ) {\r\n\r\n                    output[ key ] = extend( target[ key ], source[ key ] )\r\n\r\n                } else {\r\n\r\n                    Object.assign( output, { [ key ]: source[ key ] } )\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                Object.assign( output, { [ key ]: source[ key ] } )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        output = null\r\n\r\n    }\r\n\r\n    return output\r\n\r\n}\r\n\r\n/**\r\n * Remove old inheritance stuff due to es6 class !\r\n */\r\nexport function serializeObject () {\r\n\r\n    //    var object = {}\r\n    //    var a = this.serializeArray()\r\n    //\r\n    //    $.each( a, function () {\r\n    //        if ( object[ this.name ] !== undefined ) {\r\n    //            if ( !object[ this.name ].push ) {\r\n    //                object[ this.name ] = [ object[ this.name ] ]\r\n    //            }\r\n    //            object[ this.name ].push( this.value || '' )\r\n    //        } else {\r\n    //            object[ this.name ] = this.value || ''\r\n    //        }\r\n    //    } )\r\n    //\r\n    //    return object\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param ChildClass\r\n * @param ParentClassOrObject\r\n * @return {*}\r\n */\r\nexport function extendObject ( ChildClass, ParentClassOrObject ) {\r\n\r\n    if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Function ) {\r\n\r\n        // Normal Inheritance\r\n        ChildClass.prototype             = new ParentClassOrObject()\r\n        ChildClass.prototype.parent      = ParentClassOrObject.prototype\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Object ) {\r\n\r\n        // Pure Virtual Inheritance\r\n        ChildClass.prototype             = ParentClassOrObject\r\n        ChildClass.prototype.parent      = ParentClassOrObject\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Object ) {\r\n\r\n        //Object Concatenation Inheritance\r\n        for ( let attribute in ParentClassOrObject ) {\r\n\r\n            if ( ChildClass.hasOwnProperty( attribute ) ) { // We are sure that obj[key] belongs to the object and was not inherited.\r\n\r\n                if ( ParentClassOrObject[ attribute ].constructor === Object || ParentClassOrObject[ attribute ].constructor === Array ) {\r\n\r\n                    ChildClass[ attribute ] = extendObject( ChildClass[ attribute ], ParentClassOrObject[ attribute ] )\r\n\r\n                } else {\r\n\r\n                    ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else if ( ChildClass.constructor === Array && ParentClassOrObject.constructor === Array ) {\r\n\r\n        ChildClass = ChildClass.concat( ParentClassOrObject )\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Array ||\r\n        ChildClass.constructor === Array && ParentClassOrObject.constructor === Object ) {\r\n\r\n        throw new Error( 'Cannot perform extend of object with an array' )\r\n\r\n    } else {\r\n\r\n        throw new Error( 'Cannot perform extend given parameters...' )\r\n\r\n    }\r\n\r\n    return ChildClass\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param particles\r\n * @param path\r\n * @param interval\r\n */\r\nexport function createInterval ( particles, path, interval ) {\r\n\r\n    var globalOffset = 0\r\n\r\n    setInterval( function () {\r\n\r\n        var moveOffset             = 0.1\r\n        var DELTA_BETWEEN_PARTICLE = 1 // meter\r\n\r\n        if ( globalOffset >= DELTA_BETWEEN_PARTICLE ) {\r\n            globalOffset = 0\r\n        } else if ( globalOffset + moveOffset > DELTA_BETWEEN_PARTICLE ) { // Avoid final gap jump before new \"loop\"\r\n            globalOffset = DELTA_BETWEEN_PARTICLE\r\n        } else {\r\n            globalOffset += moveOffset\r\n        }\r\n\r\n        var pathLength       = path.getLength()\r\n        var localOffset      = globalOffset\r\n        var normalizedOffset = undefined\r\n        var particle         = undefined\r\n        var newPosition      = undefined\r\n\r\n        for ( var i = 0, numberOfParticles = particles.children.length ; i < numberOfParticles ; i++ ) {\r\n\r\n            particle         = particles.children[ i ]\r\n            normalizedOffset = localOffset / pathLength\r\n\r\n            // End of path ( last particle could go to void, but got an error with getPointAt)\r\n            if ( normalizedOffset > 1 ) {\r\n                normalizedOffset = 0\r\n            }\r\n\r\n            newPosition = path.getPointAt( normalizedOffset )\r\n            newPosition.y += 0.1\r\n\r\n            particle.position.copy( newPosition )\r\n\r\n            localOffset += DELTA_BETWEEN_PARTICLE\r\n\r\n        }\r\n\r\n    }, interval )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/strings\r\n * @description Export the utilities methods about strings\r\n *\r\n */\r\n\r\n/**\r\n * Set the first char to upper case like a classname\r\n * @param word\r\n * @returns {string}\r\n */\r\nexport function classNameify ( word ) {\r\n    return word.charAt( 0 ).toUpperCase() + word.slice( 1 )\r\n}\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n */\r\nexport let diacriticsMap = ( () => {\r\n\r\n    /*\r\n     Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     you may not use this file except in compliance with the License.\r\n     You may obtain a copy of the License at\r\n\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n     Unless required by applicable law or agreed to in writing, software\r\n     distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     See the License for the specific language governing permissions and\r\n     limitations under the License.\r\n     */\r\n\r\n    const defaultDiacriticsRemovalMap = [\r\n        {\r\n            'base':    'A',\r\n            'letters': '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'\r\n        },\r\n        {\r\n            'base':    'AA',\r\n            'letters': '\\uA732'\r\n        },\r\n        {\r\n            'base':    'AE',\r\n            'letters': '\\u00C6\\u01FC\\u01E2'\r\n        },\r\n        {\r\n            'base':    'AO',\r\n            'letters': '\\uA734'\r\n        },\r\n        {\r\n            'base':    'AU',\r\n            'letters': '\\uA736'\r\n        },\r\n        {\r\n            'base':    'AV',\r\n            'letters': '\\uA738\\uA73A'\r\n        },\r\n        {\r\n            'base':    'AY',\r\n            'letters': '\\uA73C'\r\n        },\r\n        {\r\n            'base':    'B',\r\n            'letters': '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'\r\n        },\r\n        {\r\n            'base':    'C',\r\n            'letters': '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'\r\n        },\r\n        {\r\n            'base':    'D',\r\n            'letters': '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779\\u00D0'\r\n        },\r\n        {\r\n            'base':    'DZ',\r\n            'letters': '\\u01F1\\u01C4'\r\n        },\r\n        {\r\n            'base':    'Dz',\r\n            'letters': '\\u01F2\\u01C5'\r\n        },\r\n        {\r\n            'base':    'E',\r\n            'letters': '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'\r\n        },\r\n        {\r\n            'base':    'F',\r\n            'letters': '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'\r\n        },\r\n        {\r\n            'base':    'G',\r\n            'letters': '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'\r\n        },\r\n        {\r\n            'base':    'H',\r\n            'letters': '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'\r\n        },\r\n        {\r\n            'base':    'I',\r\n            'letters': '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'\r\n        },\r\n        {\r\n            'base':    'J',\r\n            'letters': '\\u004A\\u24BF\\uFF2A\\u0134\\u0248'\r\n        },\r\n        {\r\n            'base':    'K',\r\n            'letters': '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'\r\n        },\r\n        {\r\n            'base':    'L',\r\n            'letters': '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'\r\n        },\r\n        {\r\n            'base':    'LJ',\r\n            'letters': '\\u01C7'\r\n        },\r\n        {\r\n            'base':    'Lj',\r\n            'letters': '\\u01C8'\r\n        },\r\n        {\r\n            'base':    'M',\r\n            'letters': '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'\r\n        },\r\n        {\r\n            'base':    'N',\r\n            'letters': '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'\r\n        },\r\n        {\r\n            'base':    'NJ',\r\n            'letters': '\\u01CA'\r\n        },\r\n        {\r\n            'base':    'Nj',\r\n            'letters': '\\u01CB'\r\n        },\r\n        {\r\n            'base':    'O',\r\n            'letters': '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'\r\n        },\r\n        {\r\n            'base':    'OI',\r\n            'letters': '\\u01A2'\r\n        },\r\n        {\r\n            'base':    'OO',\r\n            'letters': '\\uA74E'\r\n        },\r\n        {\r\n            'base':    'OU',\r\n            'letters': '\\u0222'\r\n        },\r\n        {\r\n            'base':    'OE',\r\n            'letters': '\\u008C\\u0152'\r\n        },\r\n        {\r\n            'base':    'oe',\r\n            'letters': '\\u009C\\u0153'\r\n        },\r\n        {\r\n            'base':    'P',\r\n            'letters': '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'\r\n        },\r\n        {\r\n            'base':    'Q',\r\n            'letters': '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'\r\n        },\r\n        {\r\n            'base':    'R',\r\n            'letters': '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'\r\n        },\r\n        {\r\n            'base':    'S',\r\n            'letters': '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'\r\n        },\r\n        {\r\n            'base':    'T',\r\n            'letters': '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'\r\n        },\r\n        {\r\n            'base':    'TZ',\r\n            'letters': '\\uA728'\r\n        },\r\n        {\r\n            'base':    'U',\r\n            'letters': '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'\r\n        },\r\n        {\r\n            'base':    'V',\r\n            'letters': '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'\r\n        },\r\n        {\r\n            'base':    'VY',\r\n            'letters': '\\uA760'\r\n        },\r\n        {\r\n            'base':    'W',\r\n            'letters': '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'\r\n        },\r\n        {\r\n            'base':    'X',\r\n            'letters': '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'\r\n        },\r\n        {\r\n            'base':    'Y',\r\n            'letters': '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'\r\n        },\r\n        {\r\n            'base':    'Z',\r\n            'letters': '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'\r\n        },\r\n        {\r\n            'base':    'a',\r\n            'letters': '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'\r\n        },\r\n        {\r\n            'base':    'aa',\r\n            'letters': '\\uA733'\r\n        },\r\n        {\r\n            'base':    'ae',\r\n            'letters': '\\u00E6\\u01FD\\u01E3'\r\n        },\r\n        {\r\n            'base':    'ao',\r\n            'letters': '\\uA735'\r\n        },\r\n        {\r\n            'base':    'au',\r\n            'letters': '\\uA737'\r\n        },\r\n        {\r\n            'base':    'av',\r\n            'letters': '\\uA739\\uA73B'\r\n        },\r\n        {\r\n            'base':    'ay',\r\n            'letters': '\\uA73D'\r\n        },\r\n        {\r\n            'base':    'b',\r\n            'letters': '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'\r\n        },\r\n        {\r\n            'base':    'c',\r\n            'letters': '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'\r\n        },\r\n        {\r\n            'base':    'd',\r\n            'letters': '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'\r\n        },\r\n        {\r\n            'base':    'dz',\r\n            'letters': '\\u01F3\\u01C6'\r\n        },\r\n        {\r\n            'base':    'e',\r\n            'letters': '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'\r\n        },\r\n        {\r\n            'base':    'f',\r\n            'letters': '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'\r\n        },\r\n        {\r\n            'base':    'g',\r\n            'letters': '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'\r\n        },\r\n        {\r\n            'base':    'h',\r\n            'letters': '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'\r\n        },\r\n        {\r\n            'base':    'hv',\r\n            'letters': '\\u0195'\r\n        },\r\n        {\r\n            'base':    'i',\r\n            'letters': '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'\r\n        },\r\n        {\r\n            'base':    'j',\r\n            'letters': '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'\r\n        },\r\n        {\r\n            'base':    'k',\r\n            'letters': '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'\r\n        },\r\n        {\r\n            'base':    'l',\r\n            'letters': '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'\r\n        },\r\n        {\r\n            'base':    'lj',\r\n            'letters': '\\u01C9'\r\n        },\r\n        {\r\n            'base':    'm',\r\n            'letters': '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'\r\n        },\r\n        {\r\n            'base':    'n',\r\n            'letters': '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'\r\n        },\r\n        {\r\n            'base':    'nj',\r\n            'letters': '\\u01CC'\r\n        },\r\n        {\r\n            'base':    'o',\r\n            'letters': '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'\r\n        },\r\n        {\r\n            'base':    'oi',\r\n            'letters': '\\u01A3'\r\n        },\r\n        {\r\n            'base':    'ou',\r\n            'letters': '\\u0223'\r\n        },\r\n        {\r\n            'base':    'oo',\r\n            'letters': '\\uA74F'\r\n        },\r\n        {\r\n            'base':    'p',\r\n            'letters': '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'\r\n        },\r\n        {\r\n            'base':    'q',\r\n            'letters': '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'\r\n        },\r\n        {\r\n            'base':    'r',\r\n            'letters': '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'\r\n        },\r\n        {\r\n            'base':    's',\r\n            'letters': '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'\r\n        },\r\n        {\r\n            'base':    't',\r\n            'letters': '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'\r\n        },\r\n        {\r\n            'base':    'tz',\r\n            'letters': '\\uA729'\r\n        },\r\n        {\r\n            'base':    'u',\r\n            'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'\r\n        },\r\n        {\r\n            'base':    'v',\r\n            'letters': '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'\r\n        },\r\n        {\r\n            'base':    'vy',\r\n            'letters': '\\uA761'\r\n        },\r\n        {\r\n            'base':    'w',\r\n            'letters': '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'\r\n        },\r\n        {\r\n            'base':    'x',\r\n            'letters': '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'\r\n        },\r\n        {\r\n            'base':    'y',\r\n            'letters': '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'\r\n        },\r\n        {\r\n            'base':    'z',\r\n            'letters': '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'\r\n        }\r\n    ]\r\n\r\n    let map = {}\r\n\r\n    for ( let i = 0 ; i < defaultDiacriticsRemovalMap.length ; i++ ) {\r\n\r\n        const letters = defaultDiacriticsRemovalMap [ i ].letters\r\n\r\n        for ( let j = 0 ; j < letters.length ; j++ ) {\r\n\r\n            map[ letters[ j ] ] = defaultDiacriticsRemovalMap[ i ].base\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return map\r\n\r\n} )()\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n *\r\n * @param string\r\n */\r\nexport function removeDiacritics ( string ) {\r\n\r\n    // eslint-disable-next-line\r\n    return string.replace( /[^\\u0000-\\u007E]/g, function ( a ) {\r\n        return diacriticsMap[ a ] || a\r\n    } )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/symbols\r\n * @description Export the utilities methods about symbols\r\n */\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/voids\r\n * @description Export the utilities methods about voids notions\r\n */\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './arrays'\r\nexport * from './booleans'\r\nexport * from './functions'\r\nexport * from './numbers'\r\nexport * from './objects'\r\nexport * from './strings'\r\nexport * from './symbols'\r\nexport * from './voids'\r\n","export default {};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport fs   from 'fs'\r\nimport path from 'path'\r\n\r\n//Todo: Move this stuff in IteeValidator !\r\n/**\r\n * Just an override of 'fs.existsSync' with more explicit name\r\n *\r\n * @param filePath the path to check\r\n * @private\r\n */\r\nfunction isValidPath ( path ) {\r\n    return fs.existsSync( path )\r\n}\r\n\r\nfunction isInvalidPath ( path ) {\r\n    return !isValidPath( path )\r\n}\r\n\r\nfunction isFile ( path ) {\r\n    return fs.statSync( path ).isFile()\r\n}\r\n\r\nfunction isNotFile ( path ) {\r\n    return !isFile( path )\r\n}\r\n\r\nfunction isDirectory ( path ) {\r\n    return fs.statSync( path ).isDirectory()\r\n}\r\n\r\nfunction isNotDirectory ( path ) {\r\n    return !isDirectory( path )\r\n}\r\n\r\nfunction isValidFilePath ( path ) {\r\n    return ( isValidPath( path ) && isFile( path ) )\r\n}\r\n\r\nfunction isInvalidFilePath ( path ) {\r\n    return !isValidFilePath( path )\r\n}\r\n\r\nfunction isValidDirectoryPath ( path ) {\r\n    return ( isValidPath( path ) && isDirectory( path ) )\r\n}\r\n\r\nfunction isInvalidDirectoryPath ( path ) {\r\n    return !isValidDirectoryPath( path )\r\n}\r\n\r\n/**\r\n * Check the file size against a limit ( 0 as default ).\r\n * @param filePath\r\n * @param threshold\r\n * @return {boolean} - True if below the limit or zero, false otherwise\r\n * @private\r\n */\r\nfunction isEmptyFile ( filePath, threshold = 0 ) {\r\n    return ( fs.statSync( filePath ).size <= threshold )\r\n}\r\n\r\nfunction isNotEmptyFile ( filePath, threshold = 0 ) {\r\n    return !isEmptyFile( filePath, threshold )\r\n}\r\n\r\n// Todo-End\r\n\r\n/**\r\n * Allow to search all files under filePaths in a recursive way\r\n *\r\n * @param {Array.<string>|string} filePaths - The files paths where search files\r\n * @returns {Array} - The paths of finded files\r\n * @private\r\n */\r\nfunction getFilesPathsUnder ( filePaths ) {\r\n\r\n    let files = []\r\n\r\n    if ( Array.isArray( filePaths ) ) {\r\n\r\n        for ( let pathIndex = 0, numberOfPaths = filePaths.length ; pathIndex < numberOfPaths ; pathIndex++ ) {\r\n\r\n            checkStateOf( filePaths[ pathIndex ] )\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        checkStateOf( filePaths )\r\n\r\n    }\r\n\r\n    return files\r\n\r\n    function getFilesPathsUnderFolder ( folder ) {\r\n\r\n        fs.readdirSync( folder ).forEach( ( name ) => {\r\n\r\n            const filePath = path.resolve( folder, name )\r\n            checkStateOf( filePath )\r\n\r\n        } )\r\n\r\n    }\r\n\r\n    function checkStateOf ( filePath ) {\r\n\r\n        if ( !fs.existsSync( filePath ) ) {\r\n            console.error( 'Invalid file path \"' + filePath + '\"' )\r\n            return\r\n        }\r\n\r\n        const stats = fs.statSync( filePath )\r\n        if ( stats.isFile() ) {\r\n\r\n            files.push( filePath )\r\n\r\n        } else if ( stats.isDirectory() ) {\r\n\r\n            Array.prototype.push.apply( files, getFilesPathsUnderFolder( filePath ) )\r\n\r\n        } else {\r\n\r\n            console.error( 'Invalid stat object !' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    isValidPath,\r\n    isInvalidPath,\r\n    isFile,\r\n    isNotFile,\r\n    isDirectory,\r\n    isNotDirectory,\r\n    isValidFilePath,\r\n    isInvalidFilePath,\r\n    isValidDirectoryPath,\r\n    isInvalidDirectoryPath,\r\n    isEmptyFile,\r\n    isNotEmptyFile,\r\n    getFilesPathsUnder\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './files'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/geomathics/trigonometries\r\n */\r\n\r\nexport const PI   = Math.PI\r\nexport const PI_2 = Math.PI / 2\r\nexport const PI_4 = Math.PI / 4\r\n\r\nexport const DEG_TO_RAD = ( PI / 180 )\r\nexport const RAD_TO_DEG = ( 180 / PI )\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function degreesToRadians ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function degreesFromRadians ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function radiansToDegrees ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function radiansFromDegrees ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n// PROJECTION 2D/3D\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getYaw ( vector ) {\r\n    return -Math.atan2( vector.x, vector.z )\r\n}\r\n\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getPitch ( vector ) {\r\n    return Math.asin( vector.y )\r\n}\r\n\r\n/**\r\n *\r\n * @param vectorDir\r\n * @return {{yaw: number, pitch: number}}\r\n */\r\nexport function convertWebGLRotationToTopogicalYawPitch ( vectorDir ) {\r\n\r\n    function getYaw ( vector ) {\r\n        return Math.atan2( vector.y, vector.x )\r\n    }\r\n\r\n    function getPitch ( vector ) {\r\n        return Math.asin( vector.z )\r\n    }\r\n\r\n    const topoVectorDir = vectorDir //convertWebglVectorToTopologicVector( vectorDir )\r\n\r\n    return {\r\n        yaw:   -( radiansToDegrees( getYaw( topoVectorDir ) ) - 90 ),\r\n        pitch: radiansToDegrees( getPitch( topoVectorDir ) )\r\n    }\r\n\r\n}\r\n\r\n///**\r\n// * TRIGONOMETRIC CIRCLE CONCEPT WITH INTEGRATED TIMER\r\n// *\r\n// * Provide position on any given referential (starting position)\r\n// * this position is updated every tick on a trigonometric circle of rayon (radius)\r\n// * and give new position in px about this point in current referential.\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCircle ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.options = $.extend( {}, TTrigonometricCircle.DEFAULT_SETTINGS, settings );\r\n//\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCircle, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCircle.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _   = this;\r\n//        _.angle = (increment ? _.angle + increment : _.angle + 1);\r\n//        if ( _.angle >= 360 ) {\r\n//            _.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.angle ) ) * _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.angle ) ) * _.radius;\r\n//    }\r\n//\r\n//} )\r\n//\r\n///////////\r\n//\r\n///**\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCone ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.model = $.extend( {}, TTrigonometricCone.DEFAULT_SETTINGS, settings );\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCone, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        height:      10,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCone.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _         = this;\r\n//        _.model.angle = (increment ? _.model.angle + increment : _.model.angle + 1);\r\n//        if ( _.model.angle >= 360 ) {\r\n//            _.model.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getCosinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ) );\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getSinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ));\r\n//    }\r\n//\r\n//} )\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/geometries/_geomathries\r\n * @description This is the geometries/mathematique export entry point.\r\n * It expose all exports of the geometries sub-files.\r\n */\r\n\r\nexport * from './trigonometries'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/temperatures\r\n * @description Export the utilities methods about temperatures\r\n * @requires {@link module:sources/cores/numbers}\r\n */\r\n\r\nimport {\r\n    isNotEmpty,\r\n    isNotTemperature,\r\n    isNumber\r\n} from 'itee-validators'\r\n\r\nexport const FAHRENHEIT_CELSIUS_COEFFICIENT = 1.8\r\nexport const FAHRENHEIT_CELSIUS_CONSTANTE   = 32.0\r\nexport const KELVIN_CELSIUS_CONSTANTE       = 273.14999999955\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToKelvin ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( celsius + KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToFahrenheit ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( celsius * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToCelsius ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToKelvin ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( ( fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT ) + KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToCelsius ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( kelvin - KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToFahrenheit ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( kelvin - KELVIN_CELSIUS_CONSTANTE ) * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n\r\nexport * from './temperatures'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/itee-util\r\n * @description The main entry point for Itee-Utils, it contains all exports of the library\r\n */\r\n\r\nexport * from './cores/_cores'\r\nexport * from './fs/_fs'\r\nexport * from './geomathics/_geomathics'\r\nexport * from './physics/_physics'\r\nexport * from './testings/_testings'\r\n"],"names":[],"mappings":"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"}