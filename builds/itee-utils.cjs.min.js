"use strict";var e=require("itee-validators"),t=require("fs");function r(e){return e&&e.__esModule?e:{default:e}}var n=r(require("path"));
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/arrays
 * @description Export the utilities methods about Arrays
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 *
 */
function s(e){let t="";for(let r=128;r>=1;r/=2)t+=e&r?"1":"0";return t}function o(t){if(e.isNotString(t))return;let r=0;for(let e=7,n=0;e>=0;e--,n++)"1"===t[e]&&(r+=2**n);return r}const i=(()=>{const e=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let t={};for(let r=0;r<e.length;r++){const n=e[r].letters,s=e[r].base;for(let e=0;e<n.length;e++)t[n[e]]=s}return t})();
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/geomathics/trigonometries
 */
const a=Math.PI,l=Math.PI/2,u=Math.PI/4,c=a/180,f=180/a;function b(e){return e*f}function p(t,r){if(e.isNotArray(t))return!1;if(e.isNotArray(r))return!1;let n=r[0],s=r[1],o=-1;for(let e=0,i=t.length,a=i-1;e<i;a=e++){const i=t[e],l=i[0],u=i[1],c=t[a],f=c[0],b=c[1];h(i,c,r)?o=0:u>s!=b>s&&n<(f-l)*(s-u)/(b-u)+l&&(o=-o)}return o}function h(t,r,n){if(e.isNotArray(t))return!1;if(e.isNotArray(r))return!1;if(e.isNotArray(n))return!1;const s=n[0]-t[0],o=n[1]-t[1];if(0===s&&0===o)return!0;const i=r[0]-t[0],a=r[1]-t[1];if(0===i&&0===a)return!1;const l=(s*i+o*a)/(i*i+a*a);return!(l<0||l>1)&&(0===l||1===l||l*i===s&&l*a===o)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/physics/temperatures
 * @description Export the utilities methods about temperatures
 * @requires {@link module:sources/cores/numbers}
 */const d=1.8,g=273.14999999955;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const y={null:null,undefined:void 0,void:void 0},m={true:!0,false:!1},x={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,negativeNan:-Number.NaN,positiveNan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,epsilon:Number.EPSILON,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},v=(()=>{const e={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar",stringHexa:"#123456",stringOcta:"00101010"},t=y;for(let r=0,n=t.length;r<n;r++)e[t[r]]=`${t[r]}`;const r=m;for(let t=0,n=r.length;t<n;t++)e[r[t]]=`${r[t]}`;const n=x;for(let t=0,r=n.length;t<r;t++)e[n[t]]=`${n[t]}`;return e})(),N={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},A={emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:[null,null,null],undefined:[void 0,void 0,void 0],void:[void 0,void 0,void 0],voids:Object.values(y),booleans:Object.values(m),numbers:Object.values(x),strings:Object.values(v),functions:Object.values(N),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]},O={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},E={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}};var j=Object.freeze({__proto__:null,arrays:A,booleans:m,functions:N,numbers:x,objects:E,strings:v,typedArrays:O,voids:y});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const I={DataMap:void 0,createDataMap:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t={};for(let r in e){const n=j[r];if(void 0===n)throw ReferenceError(`The global data map does not contain element for key: ${r}`);const s=e[r];if(t[r]={},0===s.length)for(let e in n)t[r][e]=n[e];else for(let e=0,o=s.length;e<o;e++)t[r][s[e]]=n[s[e]]}return t},createBenchmarkOptions:function(e){return I.DataMap=I.createDataMap(e),{onStart:function(){this.benchDataMap=I.DataMap},onCycle:function(){},onAbort:function(){console.log(`${this.constructor.name} [${this.name}] onAbort`)},onError:function(e){console.log(`${this.constructor.name} [${this.name}] onError`),console.error(e.message)},onReset:function(){console.log(`${this.constructor.name} [${this.name}] onReset`)},onComplete:function(){delete this.benchDataMap},setup:function(){},teardown:function(){}}},createSuiteOptions:function(){let e;return e={onStart:function(){console.log(`Running ${this.constructor.name}: ${this.name}`),this.results=[]},onCycle:function(e){console.log(`Running Bench: ${e.target.name}`),this.results.push(e.target)},onAbort:function(){},onError:function(){},onReset:function(){},onComplete:function(){this.results.sort((e,t)=>e.hz<t.hz?1:e.hz>t.hz?-1:0);for(let e=0,t=this.results.length;e<t;e++)console.log(`${e}: ${String(this.results[e])}`);const e=this.results[0],t=this.results[this.results.length-1],r=(e.hz-t.hz)/t.hz*100;console.log(`\n${e.name} is ${Math.round(r)}% fastest than ${t.name}`),delete this.results}},e},iterateOverDataMap:function(e){return function(){if(void 0===e)throw new ReferenceError("the method param is null or undefined!");const t=this.benchDataMap;for(let r in t){const n=t[r];if(Array.isArray(n))for(let t of n)try{e(t)}catch(r){const n=null===t?"null":void 0===t?"undefined":t.toString();console.error(`method [${e.name} fail with [${n}] => ${r.message}`)}else for(let t in n){const r=n[t];try{e(r)}catch(t){const n=null===r?"null":void 0===r?"undefined":r.toString();console.error(`method [${e.name} fail with [${n}] => ${t.message}`)}}}}},createDataSet:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t=[];for(let r in e){const n=j[r],s=e[r];if(0===s.length)for(let e in n)t.push(n[e]);else for(let e=0,r=s.length;e<r;e++)t.push(n[s[e]])}return t},createDataSetBenchmarkOptions:function(e){return{setup:function(){this.dataset=I.createDataSet()[e]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(e){return function(){const t=this.dataset;for(let r=0,n=t.length;r<n;r++)e(t[r])}}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/voids/isDefined
 * @desc Export function to validate if a value is a defined or not
 * @example
 *
 * import { isDefined } from 'itee-validators'
 *
 * if( isDefined( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function w(e){return null!=e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings/isString
 * @desc Export function to validate if a value is a string
 * @example
 *
 * import { isString } from 'itee-validators'
 *
 * if( isString( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function S(e){return!function(e){return"string"==typeof e||e instanceof String}(e)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/directories/isDirectoryPath
 * @description Export function to validate if a value is a directories path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isDirectoryPath } from 'itee-validators'
 *
 * if( isDirectoryPath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function M(e){if(S(e)&&!(e instanceof Buffer)&&!(e instanceof URL))return!1;const r=t.statSync(e,{throwIfNoEntry:!1});return w(r)&&r.isDirectory()}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/files/isFilePath
 * @description Export function to validate if a value is a file path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isFilePath } from 'itee-validators'
 *
 * if( isFilePath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function F(e){if(S(e)&&!(e instanceof Buffer)&&!(e instanceof URL))return!1;const r=t.statSync(e,{throwIfNoEntry:!1});return w(r)&&r.isFile()}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/paths/isValidPath
 * @description Export function to validate if a value is a valid path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isValidPath } from 'itee-validators'
 *
 * if( isValidPath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function T(e){return!function(e){return t.existsSync(e)}(e)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/files
 * @description This is the files main export entry point.
 * It exposes all exports of the files validators.
 *
 */function D(e){return t.readdirSync(e)}function $(e){return t.existsSync(e)}function _(e){if(!$(e))throw new Error(`Invalid file path "${e}" file does not exist !`);return t.readFileSync(e,"utf8")}exports.DEG_TO_RAD=c,exports.FAHRENHEIT_CELSIUS_COEFFICIENT=d,exports.FAHRENHEIT_CELSIUS_CONSTANTE=32,exports.KELVIN_CELSIUS_CONSTANTE=g,exports.PI=a,exports.PI_2=l,exports.PI_4=u,exports.RAD_TO_DEG=f,exports.Testing=I,exports.arrays=A,exports.bitsToByte=o,exports.booleans=m,exports.byteToBits=s,exports.celsiusToFahrenheit=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return(t*d+32).toFixed(n)},exports.celsiusToKelvin=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return(t+g).toFixed(n)},exports.classNameify=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings
 * @description Export the utilities methods about strings
 *
 */
function(t){if(!e.isNotString(t)&&!e.isEmptyString(t))return t.charAt(0).toUpperCase()+t.slice(1)},exports.convertWebGLRotationToTopogicalYawPitch=function(t){if(e.isNotDefined(t))return;if(e.isNotObject(t))return;const r=t;return{yaw:-(b((n=r,Math.atan2(n.y,n.x)))-90),pitch:b(function(e){return Math.asin(e.z)}(r))};var n}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */,exports.createInterval=function(e,t,r){if(!e)return;if(!t)return;if(!r)return;let n=0;setInterval(function(){n>=1?n=0:n+.1>1?n=1:n+=.1;const r=t.getLength();let s,o,i,a=n;for(let n=0,l=e.children.length;n<l;n++)o=e.children[n],s=a/r,s>1&&(s=0),i=t.getPointAt(s),i.y+=.1,o.position.copy(i),a+=1},r)},exports.degreesFromRadians=function(e){return e*f},exports.degreesToRadians=function(e){return e*c},exports.excludesFilesPaths=function(e,t){let r,n=[];for(let t=0,o=e.length;t<o;t++)r=e[t],s(r)||n.push(r);return n;function s(e){let r,n=!1;for(let s=0,o=t.length;s<o;s++)if(r=t[s],r.indexOf(".")>-1){e.replace(/^.*(\\|\/|\\:)/,"")===r&&(n=!0)}else e.contains(r)&&(n=!0);return n}},exports.extend=function t(r,n){let s;if(e.isObject(r)&&e.isNotDefined(n))s=Object.assign({},r);else if(e.isNotDefined(r)&&e.isObject(n))s=Object.assign({},n);else if(e.isObject(r)&&e.isObject(n)){s=Object.assign({},r);const o=Object.keys(n);for(let i=0,a=o.length;i<a;++i){let a=o[i];e.isObject(n[a])?a in r?s[a]=t(r[a],n[a]):Object.assign(s,{[a]:n[a]}):Object.assign(s,{[a]:n[a]})}}else s=null;return s},exports.extendObject=function t(r,n){if(!e.isUndefined(r)&&!e.isUndefined(n)){if(r.constructor===Function&&n.constructor===Function)r.prototype=new n,r.prototype.parent=n.prototype,r.prototype.constructor=r;else if(r.constructor===Function&&n.constructor===Object)r.prototype=n,r.prototype.parent=n,r.prototype.constructor=r;else if(r.constructor===Object&&n.constructor===Object)for(let e in n)Object.prototype.hasOwnProperty.call(r,e)&&(n[e].constructor===Object||n[e].constructor===Array)?r[e]=t(r[e],n[e]):r[e]=n[e];else{if(r.constructor!==Array||n.constructor!==Array)throw r.constructor===Object&&n.constructor===Array||r.constructor===Array&&n.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");r=r.concat(n)}return r}},exports.fahrenheitToCelsius=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return((t-32)/d).toFixed(n)},exports.fahrenheitToKelvin=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return((t-32)/d+g).toFixed(n)},exports.fileExistForPath=$,exports.filterJavascriptFiles=function(e,t){let r,s=[];for(let o=0,i=e.length;o<i;o++)if(r=e[o],!t||t(r)){{const e=n.default.extname(r);if(r.indexOf("glsl")>-1||".js"!==e)continue}s.push(r)}return s},exports.functions=N,exports.getFileForPath=_,exports.getFilesPathsUnder=function t(r){const s=e.isArray(r)?r:[r];let o=[];for(let e=0,r=s.length;e<r;e++){const r=s[e];if(T(r))throw new Error(`The path "${r}" is not valid !`);if(F(r))o.push(r);else if(M(r)){const e=D(r).map(e=>t(n.default.resolve(r,e)));e&&(o=[].concat(...e))}}return o},exports.getFilesPathsUnder_1=function(e){let r=[];if(Array.isArray(e)){let t;for(let r=0,n=e.length;r<n;r++)t=e[r],s(t)}else s(e);return r;function s(e){if(!$(e))return void console.error('ES6Converter: Invalid file path "'+e+'"');const o=t.statSync(e);var i;o.isFile()?r.push(e):o.isDirectory()?Array.prototype.push.apply(r,(i=e,void t.readdirSync(i).forEach(e=>{s(n.default.resolve(i,e))}))):console.error("Invalid stat object !")}},exports.getPathsUnder=D,exports.getPitch=function(t){if(!e.isNotDefined(t)&&!e.isNotObject(t))return Math.asin(t.y)},exports.getRandom=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/numbers
 * @description Export the utilities methods about numbers
 *
 */
function(){return Math.random()},exports.getRandomFloatExclusive=function(e=0,t=1){return Math.random()*(t-e)+e},exports.getRandomFloatInclusive=function(e=0,t=1){return Math.random()*(t-e+1)+e},exports.getRandomIntExclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r))+r},exports.getRandomIntInclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+r},exports.getUncommentedFileForPath=function(e){return _(e).replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/g,"$1")},exports.getYaw=function(t){if(!e.isNotDefined(t)&&!e.isNotObject(t))return-Math.atan2(t.x,t.z)},exports.internalRepresentationToNumber=function(t){if(e.isNotDefined(t))return;if(e.isNotString(t))return;const r=t.replace(/ /g,"").match(/.{8}/g);if(e.isNull(r))return;const n=r.map(e=>o(e));if(e.isArrayOfUndefined(n))return;let s=new ArrayBuffer(8),i=new DataView(s);for(let e=0;e<8;e++)i.setUint8(e,n[e]);return i.getFloat64(0)},exports.kelvinToCelsius=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return(t-g).toFixed(n)},exports.kelvinToFahrenheit=function(t,r){if(e.isNotTemperature(t))return;const n=e.isNotEmpty(r)&&e.isNumber(r)?r:2;return((t-g)*d+32).toFixed(n)},exports.numberToInternalRepresentation=function(e){let t=new ArrayBuffer(8),r=new DataView(t);r.setFloat64(0,e);let n="";for(let e=0;e<8;e++)n+=s(r.getUint8(e));return n=`${n.substring(0,1)} ${n.substring(1,12)} ${n.substring(12)}`,n},exports.numberToPlainString=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),o=(s?n.slice(1):n).split("."),i=o[0].length,a=o[1]?o[1].length:0,l=o.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=s?"-":"";return c?(b+="0.",b+="0".repeat(f-i),b+=l):(b+=l,b+="0".repeat(f-a),b+=".0"),b}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/objects
 * @description Export the utilities methods about objects
 */,exports.numbers=x,exports.objects=E,exports.radiansFromDegrees=function(e){return e*c},exports.radiansToDegrees=b,exports.removeDiacritics=function(t){return e.isNotString(t)?null:t.replace(/[^\u0000-\u007E]/g,e=>i[e]||e)},exports.ringClockwise=function(t){if(e.isNotArray(t))return!1;let r=t.length;if(r<4)return!1;let n=0,s=t[r-1][1]*t[0][0]-t[r-1][0]*t[0][1];for(;++n<r;)s+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return s>=0},exports.ringContains=p,exports.ringContainsSome=function(t,r){if(e.isNotArray(t))return!1;if(e.isNotArray(r))return!1;let n=0,s=r.length;do{if(p(t,r[n])>0)return!0}while(++n<s);return!1},exports.segmentContains=h,exports.serializeObject=function(){},exports.sortBy=function(e,t="asc"){const r=e;let n;if("asc"===t)n=(e,t)=>e[r]<t[r]?-1:e[r]>t[r]?1:0;else{if("desc"!==t)throw RangeError(`Got invalid ascending [${t}], but expect one of ['asc','desc']!`);n=(e,t)=>e[r]>t[r]?-1:e[r]<t[r]?1:0}return n},exports.strings=v,exports.toArray=function(t,r={keepArray:!1,keepNull:!1}){let n;return n=e.isArray(t)?r.keepArray?[t]:t:r.keepNull||"object"==typeof t||e.isObject(t)?[t]:[],n},exports.toEnum=function(t){if(!e.isNotObject(t)){if(e.isDefined(t.toString)){const r=Object.getOwnPropertyDescriptor(t,"toString");if(e.isDefined(r)&&!1===r.configurable)return}return Object.freeze(Object.defineProperties(t,{toString:{configurable:!1,enumerable:!1,writable:!1,value(){const e=Object.keys(this);let t="";for(let r=0,n=e.length;r<n;r++)t+=`${e[r]}, `;return t=t.slice(0,-2),t}},includes:{configurable:!1,enumerable:!1,writable:!1,value(e){return Object.values(this).includes(e)}},keys:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.keys(this)}},values:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.values(this)}},entries:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.entries(this)}}}))}},exports.typedArrays=O,exports.uniq=function(t){if(e.isNotArray(t))return;const r={};return t.filter(e=>!Object.prototype.hasOwnProperty.call(r,e)&&(r[e]=!0))},exports.voids=y;
