import{isArray as t,isObject as e,isNotString as r,isNotDefined as n,isNull as o,isArrayOfUndefined as s,isNotArray as i,isUndefined as a,isNotObject as l,isDefined as u,isEmptyString as c,isNotTemperature as f,isNotEmpty as b,isNumber as h}from"itee-validators";import p from"fs";import g from"path";
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/arrays
 * @description Export the utilities methods about Arrays
 *
 */function y(t,e="asc"){const r=t;let n;if("asc"===e)n=(t,e)=>t[r]<e[r]?-1:t[r]>e[r]?1:0;else{if("desc"!==e)throw RangeError(`Got invalid ascending [${e}], but expect one of ['asc','desc']!`);n=(t,e)=>t[r]>e[r]?-1:t[r]<e[r]?1:0}return n}function d(r,n={keepArray:!1,keepNull:!1}){let o;return o=t(r)?n.keepArray?[r]:r:n.keepNull||"object"==typeof r||e(r)?[r]:[],o}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 *
 */function m(t){let e="";for(let r=128;r>=1;r/=2)e+=t&r?"1":"0";return e}function v(t){if(r(t))return;let e=0;for(let r=7,n=0;r>=0;r--,n++)"1"===t[r]&&(e+=2**n);return e}function A(t){let e=new ArrayBuffer(8),r=new DataView(e);r.setFloat64(0,t);let n="";for(let t=0;t<8;t++)n+=m(r.getUint8(t));return n=`${n.substring(0,1)} ${n.substring(1,12)} ${n.substring(12)}`,n}function w(t){if(n(t))return;if(r(t))return;const e=t.replace(/ /g,"").match(/.{8}/g);if(o(e))return;const i=e.map((t=>v(t)));if(s(i))return;let a=new ArrayBuffer(8),l=new DataView(a);for(let t=0;t<8;t++)l.setUint8(t,i[t]);return l.getFloat64(0)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/numbers
 * @description Export the utilities methods about numbers
 *
 */function M(){return Math.random()}function O(t=0,e=1){return Math.random()*(e-t)+t}function I(t=0,e=1){return Math.random()*(e-t+1)+t}function E(t=0,e=1){const r=Math.ceil(t),n=Math.floor(e);return Math.floor(Math.random()*(n-r))+r}function j(t=0,e=1){const r=Math.ceil(t),n=Math.floor(e);return Math.floor(Math.random()*(n-r+1))+r}function N(t){const e=String(t);if(!/\d+\.?\d*e[-+]*\d+/i.test(e))return e;const r=e.split("e"),n=r[0],o=0===n.indexOf("-"),s=(o?n.slice(1):n).split("."),i=s[0].length,a=s[1]?s[1].length:0,l=s.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=o?"-":"";return c?(b+="0.",b+="0".repeat(f-i),b+=l):(b+=l,b+="0".repeat(f-a),b+=".0"),b}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/objects
 * @description Export the utilities methods about objects
 */function S(t){if(i(t))return;const e={};return t.filter((t=>!Object.prototype.hasOwnProperty.call(e,t)&&(e[t]=!0)))}function $(t,r){let o;if(e(t)&&n(r))o=Object.assign({},t);else if(n(t)&&e(r))o=Object.assign({},r);else if(e(t)&&e(r)){o=Object.assign({},t);const n=Object.keys(r);for(let s=0,i=n.length;s<i;++s){let i=n[s];e(r[i])?i in t?o[i]=$(t[i],r[i]):Object.assign(o,{[i]:r[i]}):Object.assign(o,{[i]:r[i]})}}else o=null;return o}function x(){}function F(t,e){if(!a(t)&&!a(e)){if(t.constructor===Function&&e.constructor===Function)t.prototype=new e,t.prototype.parent=e.prototype,t.prototype.constructor=t;else if(t.constructor===Function&&e.constructor===Object)t.prototype=e,t.prototype.parent=e,t.prototype.constructor=t;else if(t.constructor===Object&&e.constructor===Object)for(let r in e)Object.prototype.hasOwnProperty.call(t,r)&&(e[r].constructor===Object||e[r].constructor===Array)?t[r]=F(t[r],e[r]):t[r]=e[r];else{if(t.constructor!==Array||e.constructor!==Array)throw t.constructor===Object&&e.constructor===Array||t.constructor===Array&&e.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");t=t.concat(e)}return t}}function D(t,e,r){if(!t)return;if(!e)return;if(!r)return;let n=0;setInterval((function(){n>=1?n=0:n+.1>1?n=1:n+=.1;const r=e.getLength();let o,s,i,a=n;for(let n=0,l=t.children.length;n<l;n++)s=t.children[n],o=a/r,o>1&&(o=0),i=e.getPointAt(o),i.y+=.1,s.position.copy(i),a+=1}),r)}function V(t){if(!l(t)){if(u(t.toString)){const e=Object.getOwnPropertyDescriptor(t,"toString");if(u(e)&&!1===e.configurable)return}return Object.freeze(Object.defineProperties(t,{toString:{configurable:!1,enumerable:!1,writable:!1,value(){const t=Object.keys(this);let e="";for(let r=0,n=t.length;r<n;r++)e+=`${t[r]}, `;return e=e.slice(0,-2),e}},includes:{configurable:!1,enumerable:!1,writable:!1,value(t){return Object.values(this).includes(t)}},keys:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.keys(this)}},values:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.values(this)}},entries:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.entries(this)}}}))}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings
 * @description Export the utilities methods about strings
 *
 */function z(t){if(!r(t)&&!c(t))return t.charAt(0).toUpperCase()+t.slice(1)}const P=(()=>{const t=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let e={};for(let r=0;r<t.length;r++){const n=t[r].letters,o=t[r].base;for(let t=0;t<n.length;t++)e[n[t]]=o}return e})();function L(t){return r(t)?null:t.replace(/[^\u0000-\u007E]/g,(t=>P[t]||t))}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/geomathics/trigonometries
 */const R=Math.PI,U=Math.PI/2,_=Math.PI/4,k=R/180,T=180/R;function B(t){return t*k}function C(t){return t*T}function G(t){return t*T}function Y(t){return t*k}function Z(t){if(!n(t)&&!l(t))return-Math.atan2(t.x,t.z)}function q(t){if(!n(t)&&!l(t))return Math.asin(t.y)}function H(t){if(n(t))return;if(l(t))return;const e=t;return{yaw:-(G((r=e,Math.atan2(r.y,r.x)))-90),pitch:G(function(t){return Math.asin(t.z)}(e))};var r}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */function X(t){if(i(t))return!1;let e=t.length;if(e<4)return!1;let r=0,n=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];for(;++r<e;)n+=t[r-1][1]*t[r][0]-t[r-1][0]*t[r][1];return n>=0}function J(t,e){if(i(t))return!1;if(i(e))return!1;let r=0,n=e.length;do{if(Q(t,e[r])>0)return!0}while(++r<n);return!1}function Q(t,e){if(i(t))return!1;if(i(e))return!1;let r=e[0],n=e[1],o=-1;for(let s=0,i=t.length,a=i-1;s<i;a=s++){const i=t[s],l=i[0],u=i[1],c=t[a],f=c[0],b=c[1];W(i,c,e)?o=0:u>n!=b>n&&r<(f-l)*(n-u)/(b-u)+l&&(o=-o)}return o}function W(t,e,r){if(i(t))return!1;if(i(e))return!1;if(i(r))return!1;const n=r[0]-t[0],o=r[1]-t[1];if(0===n&&0===o)return!0;const s=e[0]-t[0],a=e[1]-t[1];if(0===s&&0===a)return!1;const l=(n*s+o*a)/(s*s+a*a);return!(l<0||l>1)&&(0===l||1===l||l*s===n&&l*a===o)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/physics/temperatures
 * @description Export the utilities methods about temperatures
 * @requires {@link module:sources/cores/numbers}
 */const K=1.8,tt=32,et=273.14999999955;function rt(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return(t+273.14999999955).toFixed(r)}function nt(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return(1.8*t+32).toFixed(r)}function ot(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return((t-32)/1.8).toFixed(r)}function st(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return((t-32)/1.8+273.14999999955).toFixed(r)}function it(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return(t-273.14999999955).toFixed(r)}function at(t,e){if(f(t))return;const r=b(e)&&h(e)?e:2;return(1.8*(t-273.14999999955)+32).toFixed(r)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const lt={null:null,undefined:void 0,void:void 0},ut={true:!0,false:!1},ct={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,negativeNan:-Number.NaN,positiveNan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,epsilon:Number.EPSILON,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},ft=(()=>{const t={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar",stringHexa:"#123456",stringOcta:"00101010"},e=lt;for(let r=0,n=e.length;r<n;r++)t[e[r]]=`${e[r]}`;const r=ut;for(let e=0,n=r.length;e<n;e++)t[r[e]]=`${r[e]}`;const n=ct;for(let e=0,r=n.length;e<r;e++)t[n[e]]=`${n[e]}`;return t})(),bt={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},ht=(()=>({emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:(()=>{const t=[];for(let e=0;e<3;e++)t.push(null);return t})(),undefined:(()=>{const t=[];for(let e=0;e<3;e++)t.push(void 0);return t})(),void:(()=>{const t=[];for(let e=0;e<3;e++)t.push(void 0);return t})(),voids:(()=>{const t=[],e=lt;for(let r in e)t.push(e[r]);return t})(),booleans:(()=>{const t=[],e=ut;for(let r in e)t.push(e[r]);return t})(),numbers:(()=>{const t=[],e=ct;for(let r in e)t.push(e[r]);return t})(),strings:(()=>{const t=[],e=ft;for(let r in e)t.push(e[r]);return t})(),functions:(()=>{const t=[],e=bt;for(let r in e)t.push(e[r]);return t})(),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]}))(),pt={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},gt={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}};var yt=Object.freeze({__proto__:null,voids:lt,booleans:ut,numbers:ct,strings:ft,functions:bt,arrays:ht,typedArrays:pt,objects:gt});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const dt={DataMap:void 0,createDataMap:function(t){void 0===t&&(t={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let e={};for(let r in t){const n=yt[r];if(void 0===n)throw ReferenceError(`The global data map does not contain element for key: ${r}`);const o=t[r];if(e[r]={},0===o.length)for(let t in n)e[r][t]=n[t];else for(let t=0,s=o.length;t<s;t++)e[r][o[t]]=n[o[t]]}return e},createBenchmarkOptions:function(t){return dt.DataMap=dt.createDataMap(t),{onStart:function(){this.benchDataMap=dt.DataMap},onCycle:function(){},onAbort:function(){console.log(`${this.constructor.name} [${this.name}] onAbort`)},onError:function(t){console.log(`${this.constructor.name} [${this.name}] onError`),console.error(t.message)},onReset:function(){console.log(`${this.constructor.name} [${this.name}] onReset`)},onComplete:function(){delete this.benchDataMap},setup:function(){},teardown:function(){}}},createSuiteOptions:function(){let t;return t={onStart:function(){console.log(`Running ${this.constructor.name}: ${this.name}`),this.results=[]},onCycle:function(t){console.log(`Running Bench: ${t.target.name}`),this.results.push(t.target)},onAbort:function(){},onError:function(){},onReset:function(){},onComplete:function(){this.results.sort(((t,e)=>t.hz<e.hz?1:t.hz>e.hz?-1:0));for(let t=0,e=this.results.length;t<e;t++)console.log(`${t}: ${String(this.results[t])}`);const t=this.results[0],e=this.results[this.results.length-1],r=(t.hz-e.hz)/e.hz*100;console.log(`\n${t.name} is ${Math.round(r)}% fastest than ${e.name}`),delete this.results}},t={},t},iterateOverDataMap:function(t){return function(){if(void 0===t)throw new ReferenceError("the method param is null or undefined!");const e=this.benchDataMap;for(let r in e){const n=e[r];if(Array.isArray(n))for(let e of n)try{t(e)}catch(r){const n=null===e?"null":void 0===e?"undefined":e.toString();console.error(`method [${t.name} fail with [${n}] => ${r.message}`)}else for(let e in n){const r=n[e];try{t(r)}catch(e){const n=null===r?"null":void 0===r?"undefined":r.toString();console.error(`method [${t.name} fail with [${n}] => ${e.message}`)}}}}},createDataSet:function(t){void 0===t&&(t={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let e=[];for(let r in t){const n=yt[r],o=t[r];if(0===o.length)for(let t in n)e.push(n[t]);else for(let t=0,r=o.length;t<r;t++)e.push(n[o[t]])}return e},createDataSetBenchmarkOptions:function(t){return{setup:function(){this.dataset=dt.createDataSet()[t]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(t){return function(){const e=this.dataset;for(let r=0,n=e.length;r<n;r++)t(e[r])}}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/paths/isValidPath
 * @description Export function to validate if a value is a valid path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isValidPath } from 'itee-validators'
 *
 * if( isValidPath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function mt(t){return!function(t){return p.existsSync(t)}(t)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/voids/isDefined
 * @desc Export function to validate if a value is a defined or not
 * @example
 *
 * import { isDefined } from 'itee-validators'
 *
 * if( isDefined( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function vt(t){return null!=t}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings/isString
 * @desc Export function to validate if a value is a string
 * @example
 *
 * import { isString } from 'itee-validators'
 *
 * if( isString( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function At(t){return!function(t){return"string"==typeof t||t instanceof String}(t)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/directories/isDirectoryPath
 * @description Export function to validate if a value is a directories path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isDirectoryPath } from 'itee-validators'
 *
 * if( isDirectoryPath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function wt(t){if(At(t)&&!(t instanceof Buffer)&&!(t instanceof URL))throw new TypeError("Invalid path type! Expect string, buffer or url.");const e=p.statSync(t,{throwIfNoEntry:!1});return vt(e)&&e.isDirectory()}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/files/isFilePath
 * @description Export function to validate if a value is a file path
 *
 * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}
 *
 * @example
 *
 * import { isFilePath } from 'itee-validators'
 *
 * if( isFilePath( value ) ) {
 *     //...
 * } else {
 *     //...
 * }
 *
 */function Mt(t){if(At(t)&&!(t instanceof Buffer)&&!(t instanceof URL))throw new TypeError("Invalid path type! Expect string, buffer or url.");const e=p.statSync(t,{throwIfNoEntry:!1});return vt(e)&&e.isFile()}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/file-system/files
 * @description This is the files main export entry point.
 * It exposes all exports of the files validators.
 *
 */function Ot(t){return p.readdirSync(t)}function It(e){const r=t(e)?e:[e];let n=[];for(let t=0,e=r.length;t<e;t++){const e=r[t];if(mt(e))throw new Error(`The path "${e}" is not valid !`);if(Mt(e))n.push(e);else if(wt(e)){const t=Ot(e).map((t=>It(g.resolve(e,t))));t&&(n=[].concat(...t))}}return n}function Et(t){let e=[];if(Array.isArray(t)){let e;for(let n=0,o=t.length;n<o;n++)e=t[n],r(e)}else r(t);return e;function r(t){if(!jt(t))return void console.error('ES6Converter: Invalid file path "'+t+'"');const n=p.statSync(t);var o;n.isFile()?e.push(t):n.isDirectory()?Array.prototype.push.apply(e,(o=t,void p.readdirSync(o).forEach((t=>{r(g.resolve(o,t))})))):console.error("Invalid stat object !")}}function jt(t){return p.existsSync(t)}function Nt(t){if(!jt(t))throw new Error(`Invalid file path "${t}" file does not exist !`);return p.readFileSync(t,"utf8")}function St(t){return Nt(t).replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/g,"$1")}function $t(t,e){let r,n=[];for(let e=0,s=t.length;e<s;e++)r=t[e],o(r)||n.push(r);return n;function o(t){let r,n=!1;for(let o=0,s=e.length;o<s;o++)if(r=e[o],r.indexOf(".")>-1){t.replace(/^.*(\\|\/|\\:)/,"")===r&&(n=!0)}else t.contains(r)&&(n=!0);return n}}function xt(t,e){let r,n=[];for(let o=0,s=t.length;o<s;o++)if(r=t[o],!e||e(r)){{const t=g.extname(r);if(r.indexOf("glsl")>-1||".js"!==t)continue}n.push(r)}return n}export{k as DEG_TO_RAD,K as FAHRENHEIT_CELSIUS_COEFFICIENT,tt as FAHRENHEIT_CELSIUS_CONSTANTE,et as KELVIN_CELSIUS_CONSTANTE,R as PI,U as PI_2,_ as PI_4,T as RAD_TO_DEG,dt as Testing,ht as arrays,v as bitsToByte,ut as booleans,m as byteToBits,nt as celsiusToFahrenheit,rt as celsiusToKelvin,z as classNameify,H as convertWebGLRotationToTopogicalYawPitch,D as createInterval,C as degreesFromRadians,B as degreesToRadians,$t as excludesFilesPaths,$ as extend,F as extendObject,ot as fahrenheitToCelsius,st as fahrenheitToKelvin,jt as fileExistForPath,xt as filterJavascriptFiles,bt as functions,Nt as getFileForPath,It as getFilesPathsUnder,Et as getFilesPathsUnder_1,Ot as getPathsUnder,q as getPitch,M as getRandom,O as getRandomFloatExclusive,I as getRandomFloatInclusive,E as getRandomIntExclusive,j as getRandomIntInclusive,St as getUncommentedFileForPath,Z as getYaw,w as internalRepresentationToNumber,it as kelvinToCelsius,at as kelvinToFahrenheit,A as numberToInternalRepresentation,N as numberToPlainString,ct as numbers,gt as objects,Y as radiansFromDegrees,G as radiansToDegrees,L as removeDiacritics,X as ringClockwise,Q as ringContains,J as ringContainsSome,W as segmentContains,x as serializeObject,y as sortBy,ft as strings,d as toArray,V as toEnum,pt as typedArrays,S as uniq,lt as voids};
