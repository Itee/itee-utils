import{isArray as e,isObject as t,isNotDefined as r,isNotTemperature as n,isNotEmpty as s,isNumber as a}from"itee-validators";
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/arrays
 * @description Export the utilities methods about Arrays
 *
 */function o(e,t="asc"){const r=e;let n;if("asc"===t)n=(e,t)=>e[r]<t[r]?-1:e[r]>t[r]?1:0;else{if("desc"!==t)throw"Invalid ascending !";n=(e,t)=>e[r]>t[r]?-1:e[r]<t[r]?1:0}return n}function i(r,n={keepArray:!1,keepNull:!1}){let s;return s=e(r)?n.keepArray?[r]:r:n.keepNull||"object"==typeof r||t(r)?[r]:[],s}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 *
 */function l(e){let t="";for(let r=128;r>=1;r/=2)t+=e&r?"1":"0";return t}function u(e){let t=0;for(let r=7,n=0;r>=0;r--,n++)"1"===e[r]&&(t+=2**n);return t}function c(e){let t=new ArrayBuffer(8),r=new DataView(t);r.setFloat64(0,e);let n="";for(let e=0;e<8;e++)n+=l(r.getUint8(e));return n=`${n.substring(0,1)} ${n.substring(1,12)} ${n.substring(12)}`,n}function f(e){const t=e.replace(/ /g,"").match(/.{8}/g).map((e=>u(e)));let r=new ArrayBuffer(8),n=new DataView(r);for(let e=0;e<8;e++)n.setUint8(e,t[e]);return n.getFloat64(0)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/numbers
 * @description Export the utilities methods about numbers
 *
 */function b(){return Math.random()}function p(e=0,t=1){return Math.random()*(t-e)+e}function h(e=0,t=1){return Math.random()*(t-e+1)+e}function d(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r))+r}function g(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+r}function y(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),o=a[0].length,i=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=s?"-":"";return c?(b+="0.",b+="0".repeat(f-o),b+=l):(b+=l,b+="0".repeat(f-i),b+=".0"),b}function v(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),o=a[0].length,i=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=u.slice(1);let b=s?"-":"";if(c){b+="0.";for(let e=0,t=parseInt(f)-o;e<t;e++)b+="0";b+=l}else{b+=l;for(let e=0,t=parseInt(f)-i;e<t;e++)b+="0";b+=".0"}return b}function A(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split(".").join(""),o=r[1],i=0===o.indexOf("-"),l=o.slice(1),u=parseInt(l)+1;let c="";return i?(c+="0.",c=c.padEnd(u,"0"),c+=a):(c+=a,c=c.padEnd(u,"0"),c+=".0"),s&&(c=`-${c}`),c}function w(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),o=a[0].length,i=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=u.slice(1),b=parseInt(f)+1,p=s?"-":"";let h="";return h=c?`${p}0.${Array(b-o).join(0)}${l}`:`${p+l+Array(b-i).join(0)}.0`,h}function m(e){return String(e).replace(/(-?)(\d*)(?:\.(\d+))?e([+-])(\d+)/,((e,t,r,n="",s,a)=>{const o=parseInt(a);return"-"===s?`${t}0.${"0".repeat(o-r.length)}${r}${n}`:`${t+r+n+"0".repeat(o-n.length)}.0`}))}function M(e){const t=Math.sign(e);let r=Math.abs(e);if(/\d+\.?\d*e[-+]*\d+/i.test(r)){const e="0",t=String(r).toLowerCase().split("e"),n=parseInt(t.pop());let s=Math.abs(n);const a=n/s,o=t[0].split(".");if(-1===a)s-=o[0].length,r=s<0?`${o[0].slice(0,s)}.${o[0].slice(s)}${2===o.length?o[1]:""}`:`${e}.${new Array(s+1).join(e)}${o.join("")}`;else{const t=o[1];t&&(s-=t.length),r=s<0?`${o[0]+t.slice(0,s)}.${t.slice(s)}`:o.join("")+new Array(s+1).join(e)}}return t<0?`-${r}`:r}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/objects
 * @description Export the utilities methods about objects
 */function I(e){const t={};return e.filter((e=>!Object.prototype.hasOwnProperty.call(t,e)&&(t[e]=!0)))}function O(e,n){let s;if(t(e)&&r(n))s=Object.assign({},e);else if(r(e)&&t(n))s=Object.assign({},n);else if(t(e)&&t(n)){s=Object.assign({},e);const r=Object.keys(n);for(let a=0,o=r.length;a<o;++a){let o=r[a];t(n[o])?o in e?s[o]=O(e[o],n[o]):Object.assign(s,{[o]:n[o]}):Object.assign(s,{[o]:n[o]})}}else s=null;return s}function j(){}function E(e,t){if(e.constructor===Function&&t.constructor===Function)e.prototype=new t,e.prototype.parent=t.prototype,e.prototype.constructor=e;else if(e.constructor===Function&&t.constructor===Object)e.prototype=t,e.prototype.parent=t,e.prototype.constructor=e;else if(e.constructor===Object&&t.constructor===Object)for(let r in t)Object.prototype.hasOwnProperty.call(e,r)&&(t[r].constructor===Object||t[r].constructor===Array)?e[r]=E(e[r],t[r]):e[r]=t[r];else{if(e.constructor!==Array||t.constructor!==Array)throw e.constructor===Object&&t.constructor===Array||e.constructor===Array&&t.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");e=e.concat(t)}return e}function N(e,t,r){var n=0;setInterval((function(){n>=1?n=0:n+.1>1?n=1:n+=.1;for(var r=t.getLength(),s=n,a=void 0,o=void 0,i=void 0,l=0,u=e.children.length;l<u;l++)o=e.children[l],(a=s/r)>1&&(a=0),(i=t.getPointAt(a)).y+=.1,o.position.copy(i),s+=1}),r)}function x(e){return Object.freeze(Object.defineProperties(e,{toString:{configurable:!1,enumerable:!1,writable:!1,value:function(){const e=Object.keys(this);let t="";for(let r=0,n=e.length;r<n;r++)t+=`${e[r]}, `;return t=t.slice(0,-2),t}},includes:{configurable:!1,enumerable:!1,writable:!1,value:function(e){return Object.values(this).includes(e)}},types:{configurable:!1,enumerable:!1,writable:!1,value:function(){return Object.keys(this)}}}))}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings
 * @description Export the utilities methods about strings
 *
 */function $(e){return e.charAt(0).toUpperCase()+e.slice(1)}const F=(()=>{const e=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let t={};for(let r=0;r<e.length;r++){const n=e[r].letters,s=e[r].base;for(let e=0;e<n.length;e++)t[n[e]]=s}return t})();function S(e){return e.replace(/[^\u0000-\u007E]/g,(e=>F[e]||e))}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/geomathics/trigonometries
 */const D=Math.PI,V=Math.PI/2,k=Math.PI/4,T=D/180,P=180/D;function L(e){return e*T}function U(e){return e*P}function R(e){return e*P}function _(e){return e*T}function q(e){return-Math.atan2(e.x,e.z)}function z(e){return Math.asin(e.y)}function B(e){const t=e;return{yaw:-(R((r=t,Math.atan2(r.y,r.x)))-90),pitch:R(function(e){return Math.asin(e.z)}(t))};var r}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */function G(e){if((t=e.length)<4)return!1;for(var t,r=0,n=e[t-1][1]*e[0][0]-e[t-1][0]*e[0][1];++r<t;)n+=e[r-1][1]*e[r][0]-e[r-1][0]*e[r][1];return n>=0}function C(e,t){let r=0,n=t.length;do{if(Y(e,t[r])>0)return!0}while(++r<n);return!1}function Y(e,t){let r=t[0],n=t[1],s=-1;for(let a=0,o=e.length,i=o-1;a<o;i=a++){const o=e[a],l=o[0],u=o[1],c=e[i],f=c[0],b=c[1];Z(o,c,t)?s=0:u>n!=b>n&&r<(f-l)*(n-u)/(b-u)+l&&(s=-s)}return s}function Z(e,t,r){var n=r[0]-e[0],s=r[1]-e[1];if(0===n&&0===s)return!0;var a=t[0]-e[0],o=t[1]-e[1];if(0===a&&0===o)return!1;var i=(n*a+s*o)/(a*a+o*o);return!(i<0||i>1)&&(0===i||1===i||i*a===n&&i*o===s)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/physics/temperatures
 * @description Export the utilities methods about temperatures
 * @requires {@link module:sources/cores/numbers}
 */const X=1.8,H=32,J=273.14999999955;function Q(e,t){if(n(e))throw new Error("Require first operand as an temperature in celsius !");const r=s(t)&&a(t)?t:2;return(e+273.14999999955).toFixed(r)}function W(e,t){if(n(e))throw new Error("Require first operand as an temperature in celsius !");const r=s(t)&&a(t)?t:2;return(1.8*e+32).toFixed(r)}function K(e,t){if(n(e))throw new Error("Require first operand as an temperature in fahrenheit !");const r=s(t)&&a(t)?t:2;return((e-32)/1.8).toFixed(r)}function ee(e,t){if(n(e))throw new Error("Require first operand as an temperature in fahrenheit !");const r=s(t)&&a(t)?t:2;return((e-32)/1.8+273.14999999955).toFixed(r)}function te(e,t){if(n(e))throw new Error("Require first operand as an temperature in kelvin !");const r=s(t)&&a(t)?t:2;return(e-273.14999999955).toFixed(r)}function re(e,t){if(n(e))throw new Error("Require first operand as an temperature in kelvin !");const r=s(t)&&a(t)?t:2;return(1.8*(e-273.14999999955)+32).toFixed(r)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/testing
 *
 */const ne={null:null,undefined:void 0,void:void 0},se={true:!0,false:!1},ae={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,nan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},oe=(()=>{const e={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar"},t=ne;for(let r=0,n=t.length;r<n;r++)e[t[r]]=`${t[r]}`;const r=se;for(let t=0,n=r.length;t<n;t++)e[r[t]]=`${r[t]}`;const n=ae;for(let t=0,r=n.length;t<r;t++)e[n[t]]=`${n[t]}`;return e})(),ie={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},le={emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:(()=>{const e=[];for(let t=0;t<3;t++)e.push(null);return e})(),undefined:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),void:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),voids:(()=>{const e=[],t=ne;for(let r in t)e.push(t[r]);return e})(),booleans:(()=>{const e=[],t=se;for(let r in t)e.push(t[r]);return e})(),numbers:(()=>{const e=[],t=ae;for(let r in t)e.push(t[r]);return e})(),strings:(()=>{const e=[],t=oe;for(let r in t)e.push(t[r]);return e})(),functions:(()=>{const e=[],t=ie;for(let r in t)e.push(t[r]);return e})(),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]},ue={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},ce={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}},fe={voids:ne,booleans:se,numbers:ae,strings:oe,functions:ie,arrays:le,typedArrays:ue,objects:ce},be={DataMap:void 0,createDataMap:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t={};for(let r in e){const n=fe[r];if(void 0===n)throw ReferenceError(`The global data map does not contain element for key: ${r}`);const s=e[r];if(t[r]={},0===s.length)for(let e in n)t[r][e]=n[e];else for(let e=0,a=s.length;e<a;e++)t[r][s[e]]=n[s[e]]}return t},createDataMapBenchmarkOptions:function(e){return Itee.Testing.DataMap=Itee.Testing.createDataMap(e),{setup:function(){this.datamap=Itee.Testing.DataMap},teardown:function(){delete this.datamap}}},iterateOverDataMap:function(e){return function(){const t=this.datamap;for(let r in t){const n=t[r];if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];e(r)}else for(let t in n){const r=n[t];e(r)}}}},createDataSet:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t=[];for(let r in e){const n=fe[r],s=e[r];if(0===s.length)for(let e in n)t.push(n[e]);else for(let e=0,r=s.length;e<r;e++)t.push(n[s[e]])}return t},createDataSetBenchmarkOptions:function(e){return{setup:function(){this.dataset=Itee.Testing.createDataSet()[e]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(e){return function(){const t=this.dataset;for(let r=0,n=t.length;r<n;r++)e(t[r])}}};export{T as DEG_TO_RAD,X as FAHRENHEIT_CELSIUS_COEFFICIENT,H as FAHRENHEIT_CELSIUS_CONSTANTE,J as KELVIN_CELSIUS_CONSTANTE,D as PI,V as PI_2,k as PI_4,P as RAD_TO_DEG,be as Testing,u as bitsToByte,l as byteToBits,W as celsiusToFahrenheit,Q as celsiusToKelvin,$ as classNameify,B as convertWebGLRotationToTopogicalYawPitch,N as createInterval,U as degreesFromRadians,L as degreesToRadians,O as extend,E as extendObject,K as fahrenheitToCelsius,ee as fahrenheitToKelvin,z as getPitch,b as getRandom,p as getRandomFloatExclusive,h as getRandomFloatInclusive,d as getRandomIntExclusive,g as getRandomIntInclusive,q as getYaw,f as internalRepresentationToNumber,te as kelvinToCelsius,re as kelvinToFahrenheit,c as numberToInternalRepresentation,y as numberToPlainString,v as numberToPlainString_alt0,A as numberToPlainString_alt1,w as numberToPlainString_alt2,m as numberToPlainString_alt3,M as numberToPlainString_alt4,_ as radiansFromDegrees,R as radiansToDegrees,S as removeDiacritics,G as ringClockwise,Y as ringContains,C as ringContainsSome,Z as segmentContains,j as serializeObject,o as sortBy,i as toArray,x as toEnum,I as uniq};
