import{isArray as e,isObject as t,isNotString as r,isNotDefined as n,isNull as s,isArrayOfUndefined as o,isNotArray as a,isUndefined as i,isNotObject as l,isDefined as u,isEmptyString as c,isNotTemperature as f,isNotEmpty as b,isNumber as h}from"itee-validators";
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/arrays
 * @description Export the utilities methods about Arrays
 *
 */function p(e,t="asc"){const r=e;let n;if("asc"===t)n=(e,t)=>e[r]<t[r]?-1:e[r]>t[r]?1:0;else{if("desc"!==t)throw RangeError(`Got invalid ascending [${t}], but expect one of ['asc','desc']!`);n=(e,t)=>e[r]>t[r]?-1:e[r]<t[r]?1:0}return n}function g(r,n={keepArray:!1,keepNull:!1}){let s;return s=e(r)?n.keepArray?[r]:r:n.keepNull||"object"==typeof r||t(r)?[r]:[],s}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 *
 */function y(e){let t="";for(let r=128;r>=1;r/=2)t+=e&r?"1":"0";return t}function d(e){if(r(e))return;let t=0;for(let r=7,n=0;r>=0;r--,n++)"1"===e[r]&&(t+=2**n);return t}function m(e){let t=new ArrayBuffer(8),r=new DataView(t);r.setFloat64(0,e);let n="";for(let e=0;e<8;e++)n+=y(r.getUint8(e));return n=`${n.substring(0,1)} ${n.substring(1,12)} ${n.substring(12)}`,n}function v(e){if(n(e))return;if(r(e))return;const t=e.replace(/ /g,"").match(/.{8}/g);if(s(t))return;const a=t.map((e=>d(e)));if(o(a))return;let i=new ArrayBuffer(8),l=new DataView(i);for(let e=0;e<8;e++)l.setUint8(e,a[e]);return l.getFloat64(0)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/numbers
 * @description Export the utilities methods about numbers
 *
 */function A(){return Math.random()}function M(e=0,t=1){return Math.random()*(t-e)+e}function O(e=0,t=1){return Math.random()*(t-e+1)+e}function w(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r))+r}function j(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+r}function N(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),o=(s?n.slice(1):n).split("."),a=o[0].length,i=o[1]?o[1].length:0,l=o.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=s?"-":"";return c?(b+="0.",b+="0".repeat(f-a),b+=l):(b+=l,b+="0".repeat(f-i),b+=".0"),b}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/objects
 * @description Export the utilities methods about objects
 */function I(e){if(a(e))return;const t={};return e.filter((e=>!Object.prototype.hasOwnProperty.call(t,e)&&(t[e]=!0)))}function E(e,r){let s;if(t(e)&&n(r))s=Object.assign({},e);else if(n(e)&&t(r))s=Object.assign({},r);else if(t(e)&&t(r)){s=Object.assign({},e);const n=Object.keys(r);for(let o=0,a=n.length;o<a;++o){let a=n[o];t(r[a])?a in e?s[a]=E(e[a],r[a]):Object.assign(s,{[a]:r[a]}):Object.assign(s,{[a]:r[a]})}}else s=null;return s}function S(){}function F(e,t){if(!i(e)&&!i(t)){if(e.constructor===Function&&t.constructor===Function)e.prototype=new t,e.prototype.parent=t.prototype,e.prototype.constructor=e;else if(e.constructor===Function&&t.constructor===Object)e.prototype=t,e.prototype.parent=t,e.prototype.constructor=e;else if(e.constructor===Object&&t.constructor===Object)for(let r in t)Object.prototype.hasOwnProperty.call(e,r)&&(t[r].constructor===Object||t[r].constructor===Array)?e[r]=F(e[r],t[r]):e[r]=t[r];else{if(e.constructor!==Array||t.constructor!==Array)throw e.constructor===Object&&t.constructor===Array||e.constructor===Array&&t.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");e=e.concat(t)}return e}}function x(e,t,r){if(!e)return;if(!t)return;if(!r)return;let n=0;setInterval((function(){n>=1?n=0:n+.1>1?n=1:n+=.1;const r=t.getLength();let s,o,a,i=n;for(let n=0,l=e.children.length;n<l;n++)o=e.children[n],s=i/r,s>1&&(s=0),a=t.getPointAt(s),a.y+=.1,o.position.copy(a),i+=1}),r)}function D(e){if(!l(e)){if(u(e.toString)){const t=Object.getOwnPropertyDescriptor(e,"toString");if(u(t)&&!1===t.configurable)return}return Object.freeze(Object.defineProperties(e,{toString:{configurable:!1,enumerable:!1,writable:!1,value(){const e=Object.keys(this);let t="";for(let r=0,n=e.length;r<n;r++)t+=`${e[r]}, `;return t=t.slice(0,-2),t}},includes:{configurable:!1,enumerable:!1,writable:!1,value(e){return Object.values(this).includes(e)}},keys:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.keys(this)}},values:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.values(this)}},entries:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.entries(this)}}}))}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/cores/strings
 * @description Export the utilities methods about strings
 *
 */function $(e){if(!r(e)&&!c(e))return e.charAt(0).toUpperCase()+e.slice(1)}const V=(()=>{const e=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let t={};for(let r=0;r<e.length;r++){const n=e[r].letters,s=e[r].base;for(let e=0;e<n.length;e++)t[n[e]]=s}return t})();function P(e){return r(e)?null:e.replace(/[^\u0000-\u007E]/g,(e=>V[e]||e))}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/geomathics/trigonometries
 */const _=Math.PI,k=Math.PI/2,L=Math.PI/4,U=_/180,T=180/_;function R(e){return e*U}function z(e){return e*T}function G(e){return e*T}function B(e){return e*U}function C(e){if(!n(e)&&!l(e))return-Math.atan2(e.x,e.z)}function Y(e){if(!n(e)&&!l(e))return Math.asin(e.y)}function Z(e){if(n(e))return;if(l(e))return;const t=e;return{yaw:-(G((r=t,Math.atan2(r.y,r.x)))-90),pitch:G(function(e){return Math.asin(e.z)}(t))};var r}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */function q(e){if(!a(e)){if((t=e.length)<4)return!1;for(var t,r=0,n=e[t-1][1]*e[0][0]-e[t-1][0]*e[0][1];++r<t;)n+=e[r-1][1]*e[r][0]-e[r-1][0]*e[r][1];return n>=0}}function H(e,t){if(a(e))return;if(a(t))return;let r=0,n=t.length;do{if(X(e,t[r])>0)return!0}while(++r<n);return!1}function X(e,t){if(a(e))return;if(a(t))return;let r=t[0],n=t[1],s=-1;for(let o=0,a=e.length,i=a-1;o<a;i=o++){const a=e[o],l=a[0],u=a[1],c=e[i],f=c[0],b=c[1];J(a,c,t)?s=0:u>n!=b>n&&r<(f-l)*(n-u)/(b-u)+l&&(s=-s)}return s}function J(e,t,r){if(!a(e)&&!a(t)&&!a(r)){var n=r[0]-e[0],s=r[1]-e[1];if(0===n&&0===s)return!0;var o=t[0]-e[0],i=t[1]-e[1];if(0===o&&0===i)return!1;var l=(n*o+s*i)/(o*o+i*i);return!(l<0||l>1)&&(0===l||1===l||l*o===n&&l*i===s)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module sources/physics/temperatures
 * @description Export the utilities methods about temperatures
 * @requires {@link module:sources/cores/numbers}
 */const Q=1.8,W=32,K=273.14999999955;function ee(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return(e+273.14999999955).toFixed(r)}function te(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return(1.8*e+32).toFixed(r)}function re(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return((e-32)/1.8).toFixed(r)}function ne(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return((e-32)/1.8+273.14999999955).toFixed(r)}function se(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return(e-273.14999999955).toFixed(r)}function oe(e,t){if(f(e))return;const r=b(t)&&h(t)?t:2;return(1.8*(e-273.14999999955)+32).toFixed(r)}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const ae={null:null,undefined:void 0,void:void 0},ie={true:!0,false:!1},le={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,negativeNan:-Number.NaN,positiveNan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,epsilon:Number.EPSILON,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},ue=(()=>{const e={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar",stringHexa:"#123456",stringOcta:"00101010"},t=ae;for(let r=0,n=t.length;r<n;r++)e[t[r]]=`${t[r]}`;const r=ie;for(let t=0,n=r.length;t<n;t++)e[r[t]]=`${r[t]}`;const n=le;for(let t=0,r=n.length;t<r;t++)e[n[t]]=`${n[t]}`;return e})(),ce={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},fe=(()=>({emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:(()=>{const e=[];for(let t=0;t<3;t++)e.push(null);return e})(),undefined:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),void:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),voids:(()=>{const e=[],t=ae;for(let r in t)e.push(t[r]);return e})(),booleans:(()=>{const e=[],t=ie;for(let r in t)e.push(t[r]);return e})(),numbers:(()=>{const e=[],t=le;for(let r in t)e.push(t[r]);return e})(),strings:(()=>{const e=[],t=ue;for(let r in t)e.push(t[r]);return e})(),functions:(()=>{const e=[],t=ce;for(let r in t)e.push(t[r]);return e})(),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]}))(),be={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},he={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}};var pe=Object.freeze({__proto__:null,voids:ae,booleans:ie,numbers:le,strings:ue,functions:ce,arrays:fe,typedArrays:be,objects:he});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const ge={DataMap:void 0,createDataMap:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t={};for(let r in e){const n=pe[r];if(void 0===n)throw ReferenceError(`The global data map does not contain element for key: ${r}`);const s=e[r];if(t[r]={},0===s.length)for(let e in n)t[r][e]=n[e];else for(let e=0,o=s.length;e<o;e++)t[r][s[e]]=n[s[e]]}return t},createBenchmarkOptions:function(e){return ge.DataMap=ge.createDataMap(e),{onStart:function(){this.benchDataMap=ge.DataMap},onCycle:function(){},onAbort:function(){console.log(`${this.constructor.name} [${this.name}] onAbort`)},onError:function(e){console.log(`${this.constructor.name} [${this.name}] onError`),console.error(e.message)},onReset:function(){console.log(`${this.constructor.name} [${this.name}] onReset`)},onComplete:function(){delete this.benchDataMap},setup:function(){},teardown:function(){}}},createSuiteOptions:function(){let e;return e={},e},iterateOverDataMap:function(e){return function(){if(void 0===e)throw new ReferenceError("the method param is null or undefined!");const t=this.benchDataMap;for(let r in t){const n=t[r];if(Array.isArray(n))for(let t of n)try{e(t)}catch(r){console.error(`method [${e.name} fail with [${t.toString()}] => ${r.message}`)}else for(let t in n){const r=n[t];try{e(r)}catch(t){console.error(`method [${e.name} fail with [${r.toString()}] => ${t.message}`)}}}}},createDataSet:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t=[];for(let r in e){const n=pe[r],s=e[r];if(0===s.length)for(let e in n)t.push(n[e]);else for(let e=0,r=s.length;e<r;e++)t.push(n[s[e]])}return t},createDataSetBenchmarkOptions:function(e){return{setup:function(){this.dataset=ge.createDataSet()[e]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(e){return function(){const t=this.dataset;for(let r=0,n=t.length;r<n;r++)e(t[r])}}};export{U as DEG_TO_RAD,Q as FAHRENHEIT_CELSIUS_COEFFICIENT,W as FAHRENHEIT_CELSIUS_CONSTANTE,K as KELVIN_CELSIUS_CONSTANTE,_ as PI,k as PI_2,L as PI_4,T as RAD_TO_DEG,ge as Testing,fe as arrays,d as bitsToByte,ie as booleans,y as byteToBits,te as celsiusToFahrenheit,ee as celsiusToKelvin,$ as classNameify,Z as convertWebGLRotationToTopogicalYawPitch,x as createInterval,z as degreesFromRadians,R as degreesToRadians,E as extend,F as extendObject,re as fahrenheitToCelsius,ne as fahrenheitToKelvin,ce as functions,Y as getPitch,A as getRandom,M as getRandomFloatExclusive,O as getRandomFloatInclusive,w as getRandomIntExclusive,j as getRandomIntInclusive,C as getYaw,v as internalRepresentationToNumber,se as kelvinToCelsius,oe as kelvinToFahrenheit,m as numberToInternalRepresentation,N as numberToPlainString,le as numbers,he as objects,B as radiansFromDegrees,G as radiansToDegrees,P as removeDiacritics,q as ringClockwise,X as ringContains,H as ringContainsSome,J as segmentContains,S as serializeObject,p as sortBy,ue as strings,g as toArray,D as toEnum,be as typedArrays,I as uniq,ae as voids};
