this.Itee=this.Itee||{},this.Itee.Utils=function(e,t){"use strict";
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/arrays
	 * @description Export the utilities methods about Arrays
	 *
	 */
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 *
	 */
function r(e){let t="";for(let r=128;r>=1;r/=2)t+=e&r?"1":"0";return t}function n(e){let t=0;for(let r=7,n=0;r>=0;r--,n++)"1"===e[r]&&(t+=2**n);return t}const s=(()=>{const e=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let t={};for(let r=0;r<e.length;r++){const n=e[r].letters,s=e[r].base;for(let e=0;e<n.length;e++)t[n[e]]=s}return t})();
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/geomathics/trigonometries
	 */
const a=Math.PI,i=Math.PI/2,o=Math.PI/4,l=a/180,u=180/a;function c(e){return e*u}function f(e,t){let r=t[0],n=t[1],s=-1;for(let a=0,i=e.length,o=i-1;a<i;o=a++){const i=e[a],l=i[0],u=i[1],c=e[o],f=c[0],p=c[1];b(i,c,t)?s=0:u>n!=p>n&&r<(f-l)*(n-u)/(p-u)+l&&(s=-s)}return s}function b(e,t,r){var n=r[0]-e[0],s=r[1]-e[1];if(0===n&&0===s)return!0;var a=t[0]-e[0],i=t[1]-e[1];if(0===a&&0===i)return!1;var o=(n*a+s*i)/(a*a+i*i);return!(o<0||o>1)&&(0===o||1===o||o*a===n&&o*i===s)}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/physics/temperatures
	 * @description Export the utilities methods about temperatures
	 * @requires {@link module:sources/cores/numbers}
	 */
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/testing
	 *
	 */
const p={null:null,undefined:void 0,void:void 0},d={true:!0,false:!1},h={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,nan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},g=(()=>{const e={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar"},t=p;for(let r=0,n=t.length;r<n;r++)e[t[r]]=""+t[r];const r=d;for(let t=0,n=r.length;t<n;t++)e[r[t]]=""+r[t];const n=h;for(let t=0,r=n.length;t<r;t++)e[n[t]]=""+n[t];return e})(),m={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},y={emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:(()=>{const e=[];for(let t=0;t<3;t++)e.push(null);return e})(),undefined:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),void:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),voids:(()=>{const e=[],t=p;for(let r in t)e.push(t[r]);return e})(),booleans:(()=>{const e=[],t=d;for(let r in t)e.push(t[r]);return e})(),numbers:(()=>{const e=[],t=h;for(let r in t)e.push(t[r]);return e})(),strings:(()=>{const e=[],t=g;for(let r in t)e.push(t[r]);return e})(),functions:(()=>{const e=[],t=m;for(let r in t)e.push(t[r]);return e})(),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]},v={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},I={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}},A={voids:p,booleans:d,numbers:h,strings:g,functions:m,arrays:y,typedArrays:v,objects:I},N={DataMap:void 0,createDataMap:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t={};for(let r in e){const n=A[r];if(void 0===n)throw ReferenceError("The global data map does not contain element for key: "+r);const s=e[r];if(t[r]={},0===s.length)for(let e in n)t[r][e]=n[e];else for(let e=0,a=s.length;e<a;e++)t[r][s[e]]=n[s[e]]}return t},createDataMapBenchmarkOptions:function(e){return Itee.Testing.DataMap=Itee.Testing.createDataMap(e),{setup:function(){this.datamap=Itee.Testing.DataMap},teardown:function(){delete this.datamap}}},iterateOverDataMap:function(e){return function(){const t=this.datamap;for(let r in t){const n=t[r];if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];e(r)}else for(let t in n){const r=n[t];e(r)}}}},createDataSet:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t=[];for(let r in e){const n=A[r],s=e[r];if(0===s.length)for(let e in n)t.push(n[e]);else for(let e=0,r=s.length;e<r;e++)t.push(n[s[e]])}return t},createDataSetBenchmarkOptions:function(e){return{setup:function(){this.dataset=Itee.Testing.createDataSet()[e]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(e){return function(){const t=this.dataset;for(let r=0,n=t.length;r<n;r++)e(t[r])}}};return e.DEG_TO_RAD=l,e.FAHRENHEIT_CELSIUS_COEFFICIENT=1.8,e.FAHRENHEIT_CELSIUS_CONSTANTE=32,e.KELVIN_CELSIUS_CONSTANTE=273.14999999955,e.PI=a,e.PI_2=i,e.PI_4=o,e.RAD_TO_DEG=u,e.Testing=N,e.bitsToByte=n,e.byteToBits=r,e.celsiusToFahrenheit=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in celsius !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(1.8*e+32).toFixed(n)},e.celsiusToKelvin=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in celsius !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(e+273.14999999955).toFixed(n)},e.classNameify=
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/strings
	 * @description Export the utilities methods about strings
	 *
	 */
function(e){return e.charAt(0).toUpperCase()+e.slice(1)},e.convertWebGLRotationToTopogicalYawPitch=function(e){const t=e;return{yaw:-(c((r=t,Math.atan2(r.y,r.x)))-90),pitch:c(function(e){return Math.asin(e.z)}(t))};var r}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
	 *
	 */,e.createInterval=function(e,t,r){var n=0;setInterval((function(){n>=1?n=0:n+.1>1?n=1:n+=.1;for(var r=t.getLength(),s=n,a=void 0,i=void 0,o=void 0,l=0,u=e.children.length;l<u;l++)i=e.children[l],(a=s/r)>1&&(a=0),(o=t.getPointAt(a)).y+=.1,i.position.copy(o),s+=1}),r)},e.degreesFromRadians=function(e){return e*u},e.degreesToRadians=function(e){return e*l},e.extend=function e(r,n){let s=void 0;if(t.isObject(r)&&t.isNotDefined(n))s=Object.assign({},r);else if(t.isNotDefined(r)&&t.isObject(n))s=Object.assign({},n);else if(t.isObject(r)&&t.isObject(n)){s=Object.assign({},r);const a=Object.keys(n);for(let i=0,o=a.length;i<o;++i){let o=a[i];t.isObject(n[o])?o in r?s[o]=e(r[o],n[o]):Object.assign(s,{[o]:n[o]}):Object.assign(s,{[o]:n[o]})}}else s=null;return s},e.extendObject=function e(t,r){if(t.constructor===Function&&r.constructor===Function)t.prototype=new r,t.prototype.parent=r.prototype,t.prototype.constructor=t;else if(t.constructor===Function&&r.constructor===Object)t.prototype=r,t.prototype.parent=r,t.prototype.constructor=t;else if(t.constructor===Object&&r.constructor===Object)for(let n in r)Object.prototype.hasOwnProperty.call(t,n)&&(r[n].constructor===Object||r[n].constructor===Array)?t[n]=e(t[n],r[n]):t[n]=r[n];else{if(t.constructor!==Array||r.constructor!==Array)throw t.constructor===Object&&r.constructor===Array||t.constructor===Array&&r.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");t=t.concat(r)}return t},e.fahrenheitToCelsius=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in fahrenheit !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return((e-32)/1.8).toFixed(n)},e.fahrenheitToKelvin=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in fahrenheit !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return((e-32)/1.8+273.14999999955).toFixed(n)},e.getPitch=function(e){return Math.asin(e.y)},e.getRandom=
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/numbers
	 * @description Export the utilities methods about numbers
	 *
	 */
function(){return Math.random()},e.getRandomFloatExclusive=function(e=0,t=1){return Math.random()*(t-e)+e},e.getRandomFloatInclusive=function(e=0,t=1){return Math.random()*(t-e+1)+e},e.getRandomIntExclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r))+r},e.getRandomIntInclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+r},e.getYaw=function(e){return-Math.atan2(e.x,e.z)},e.internalRepresentationToNumber=function(e){const t=e.replace(/ /g,"").match(/.{8}/g).map(e=>n(e));let r=new ArrayBuffer(8),s=new DataView(r);for(let e=0;e<8;e++)s.setUint8(e,t[e]);return s.getFloat64(0)},e.kelvinToCelsius=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in kelvin !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(e-273.14999999955).toFixed(n)},e.kelvinToFahrenheit=function(e,r){if(t.isNotTemperature(e))throw new Error("Require first operand as an temperature in kelvin !");const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(1.8*(e-273.14999999955)+32).toFixed(n)},e.numberToInternalRepresentation=function(e){let t=new ArrayBuffer(8),n=new DataView(t);n.setFloat64(0,e);let s="";for(let e=0;e<8;e++)s+=r(n.getUint8(e));return s=`${s.substring(0,1)} ${s.substring(1,12)} ${s.substring(12)}`,s},e.numberToPlainString=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),i=a[0].length,o=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=s?"-":"";return c?(b+="0.",b+="0".repeat(f-i),b+=l):(b+=l,b+="0".repeat(f-o),b+=".0"),b},e.numberToPlainString_alt0=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),i=a[0].length,o=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=u.slice(1);let b=s?"-":"";if(c){b+="0.";for(let e=0,t=parseInt(f)-i;e<t;e++)b+="0";b+=l}else{b+=l;for(let e=0,t=parseInt(f)-o;e<t;e++)b+="0";b+=".0"}return b},e.numberToPlainString_alt1=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split(".").join(""),i=r[1],o=0===i.indexOf("-"),l=i.slice(1),u=parseInt(l)+1;let c="";return o?(c+="0.",c=c.padEnd(u,"0"),c+=a):(c+=a,c=c.padEnd(u,"0"),c+=".0"),s&&(c="-"+c),c},e.numberToPlainString_alt2=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),a=(s?n.slice(1):n).split("."),i=a[0].length,o=a[1]?a[1].length:0,l=a.join(""),u=r[1],c=0===u.indexOf("-"),f=u.slice(1),b=parseInt(f)+1,p=s?"-":"";let d="";return d=c?`${p}0.${Array(b-i).join(0)}${l}`:p+l+Array(b-o).join(0)+".0",d},e.numberToPlainString_alt3=function(e){return String(e).replace(/(-?)(\d*)(?:\.(\d+))?e([+-])(\d+)/,(e,t,r,n="",s,a)=>{const i=parseInt(a);return"-"===s?`${t}0.${"0".repeat(i-r.length)}${r}${n}`:t+r+n+"0".repeat(i-n.length)+".0"})},e.numberToPlainString_alt4=function(e){const t=Math.sign(e);let r=Math.abs(e);if(/\d+\.?\d*e[-+]*\d+/i.test(r)){const e="0",t=String(r).toLowerCase().split("e"),n=parseInt(t.pop());let s=Math.abs(n);const a=n/s,i=t[0].split(".");if(-1===a)s-=i[0].length,r=s<0?`${i[0].slice(0,s)}.${i[0].slice(s)}${2===i.length?i[1]:""}`:`${e}.${new Array(s+1).join(e)}${i.join("")}`;else{const t=i[1];t&&(s-=t.length),r=s<0?`${i[0]+t.slice(0,s)}.${t.slice(s)}`:i.join("")+new Array(s+1).join(e)}}return t<0?"-"+r:r}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/objects
	 * @description Export the utilities methods about objects
	 */,e.radiansFromDegrees=function(e){return e*l},e.radiansToDegrees=c,e.removeDiacritics=function(e){return e.replace(/[^\u0000-\u007E]/g,e=>s[e]||e)},e.ringClockwise=function(e){if((t=e.length)<4)return!1;for(var t,r=0,n=e[t-1][1]*e[0][0]-e[t-1][0]*e[0][1];++r<t;)n+=e[r-1][1]*e[r][0]-e[r-1][0]*e[r][1];return n>=0},e.ringContains=f,e.ringContainsSome=function(e,t){let r=0,n=t.length;do{if(f(e,t[r])>0)return!0}while(++r<n);return!1},e.segmentContains=b,e.serializeObject=function(){},e.sortBy=function(e,t="asc"){const r=e;let n=void 0;if("asc"===t)n=(e,t)=>e[r]<t[r]?-1:e[r]>t[r]?1:0;else{if("desc"!==t)throw"Invalid ascending !";n=(e,t)=>e[r]>t[r]?-1:e[r]<t[r]?1:0}return n},e.toEnum=function(e){return Object.freeze(Object.defineProperties(e,{toString:{configurable:!1,enumerable:!1,writable:!1,value:function(){const e=Object.keys(this);let t="";for(let r=0,n=e.length;r<n;r++)t+=e[r]+", ";return t=t.slice(0,-2),t}},includes:{configurable:!1,enumerable:!1,writable:!1,value:function(e){return Object.values(this).includes(e)}},types:{configurable:!1,enumerable:!1,writable:!1,value:function(){return Object.keys(this)}}}))},e.uniq=function(e){const t={};return e.filter(e=>!Object.prototype.hasOwnProperty.call(t,e)&&(t[e]=!0))},e}({},Itee.Validators);
//# sourceMappingURL=itee-utils.iife.min.js.map
