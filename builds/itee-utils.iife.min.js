this.Itee=this.Itee||{},this.Itee.Utils=function(e,t){"use strict";
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/arrays
	 * @description Export the utilities methods about Arrays
	 *
	 */
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 *
	 */
function r(e){let t="";for(let r=128;r>=1;r/=2)t+=e&r?"1":"0";return t}function n(e){if(t.isNotString(e))return;let r=0;for(let t=7,n=0;t>=0;t--,n++)"1"===e[t]&&(r+=2**n);return r}const s=(()=>{const e=[{base:"A",letters:"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",letters:"Ꜳ"},{base:"AE",letters:"ÆǼǢ"},{base:"AO",letters:"Ꜵ"},{base:"AU",letters:"Ꜷ"},{base:"AV",letters:"ꜸꜺ"},{base:"AY",letters:"Ꜽ"},{base:"B",letters:"BⒷＢḂḄḆɃƂƁ"},{base:"C",letters:"CⒸＣĆĈĊČÇḈƇȻꜾ"},{base:"D",letters:"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ"},{base:"DZ",letters:"ǱǄ"},{base:"Dz",letters:"ǲǅ"},{base:"E",letters:"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"},{base:"F",letters:"FⒻＦḞƑꝻ"},{base:"G",letters:"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"},{base:"H",letters:"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",letters:"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",letters:"JⒿＪĴɈ"},{base:"K",letters:"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",letters:"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",letters:"Ǉ"},{base:"Lj",letters:"ǈ"},{base:"M",letters:"MⓂＭḾṀṂⱮƜ"},{base:"N",letters:"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"},{base:"NJ",letters:"Ǌ"},{base:"Nj",letters:"ǋ"},{base:"O",letters:"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OI",letters:"Ƣ"},{base:"OO",letters:"Ꝏ"},{base:"OU",letters:"Ȣ"},{base:"OE",letters:"Œ"},{base:"oe",letters:"œ"},{base:"P",letters:"PⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",letters:"QⓆＱꝖꝘɊ"},{base:"R",letters:"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",letters:"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",letters:"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"TZ",letters:"Ꜩ"},{base:"U",letters:"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",letters:"VⓋＶṼṾƲꝞɅ"},{base:"VY",letters:"Ꝡ"},{base:"W",letters:"WⓌＷẀẂŴẆẄẈⱲ"},{base:"X",letters:"XⓍＸẊẌ"},{base:"Y",letters:"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",letters:"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",letters:"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"},{base:"aa",letters:"ꜳ"},{base:"ae",letters:"æǽǣ"},{base:"ao",letters:"ꜵ"},{base:"au",letters:"ꜷ"},{base:"av",letters:"ꜹꜻ"},{base:"ay",letters:"ꜽ"},{base:"b",letters:"bⓑｂḃḅḇƀƃɓ"},{base:"c",letters:"cⓒｃćĉċčçḉƈȼꜿↄ"},{base:"d",letters:"dⓓｄḋďḍḑḓḏđƌɖɗꝺ"},{base:"dz",letters:"ǳǆ"},{base:"e",letters:"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"},{base:"f",letters:"fⓕｆḟƒꝼ"},{base:"g",letters:"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"},{base:"h",letters:"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",letters:"ƕ"},{base:"i",letters:"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",letters:"jⓙｊĵǰɉ"},{base:"k",letters:"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",letters:"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"},{base:"lj",letters:"ǉ"},{base:"m",letters:"mⓜｍḿṁṃɱɯ"},{base:"n",letters:"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"},{base:"nj",letters:"ǌ"},{base:"o",letters:"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"},{base:"oi",letters:"ƣ"},{base:"ou",letters:"ȣ"},{base:"oo",letters:"ꝏ"},{base:"p",letters:"pⓟｐṕṗƥᵽꝑꝓꝕ"},{base:"q",letters:"qⓠｑɋꝗꝙ"},{base:"r",letters:"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",letters:"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"},{base:"t",letters:"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"tz",letters:"ꜩ"},{base:"u",letters:"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",letters:"vⓥｖṽṿʋꝟʌ"},{base:"vy",letters:"ꝡ"},{base:"w",letters:"wⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",letters:"xⓧｘẋẍ"},{base:"y",letters:"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",letters:"zⓩｚźẑżžẓẕƶȥɀⱬꝣ"}];let t={};for(let r=0;r<e.length;r++){const n=e[r].letters,s=e[r].base;for(let e=0;e<n.length;e++)t[n[e]]=s}return t})();
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/geomathics/trigonometries
	 */
const o=Math.PI,i=Math.PI/2,a=Math.PI/4,l=o/180,u=180/o;function c(e){return e*u}function f(e,r){if(t.isNotArray(e))return;if(t.isNotArray(r))return;let n=r[0],s=r[1],o=-1;for(let t=0,i=e.length,a=i-1;t<i;a=t++){const i=e[t],l=i[0],u=i[1],c=e[a],f=c[0],h=c[1];b(i,c,r)?o=0:u>s!=h>s&&n<(f-l)*(s-u)/(h-u)+l&&(o=-o)}return o}function b(e,r,n){if(!t.isNotArray(e)&&!t.isNotArray(r)&&!t.isNotArray(n)){var s=n[0]-e[0],o=n[1]-e[1];if(0===s&&0===o)return!0;var i=r[0]-e[0],a=r[1]-e[1];if(0===i&&0===a)return!1;var l=(s*i+o*a)/(i*i+a*a);return!(l<0||l>1)&&(0===l||1===l||l*i===s&&l*a===o)}}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/physics/temperatures
	 * @description Export the utilities methods about temperatures
	 * @requires {@link module:sources/cores/numbers}
	 */const h=1.8,p=273.14999999955;
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */
const d={null:null,undefined:void 0,void:void 0},g={true:!0,false:!1},y={negativeInfinity:Number.NEGATIVE_INFINITY,negativeMaxValue:-Number.MAX_VALUE,negativeMinSafeInteger:Number.MIN_SAFE_INTEGER,negativeMinValue:-Number.MIN_VALUE,negativeHexa:-1193046,negativePow:-200,negativePowWithDecimals:-123.45,negativeFloat:-1.01,negativeInt:-1,negativeZero:-0,negativeNan:-Number.NaN,positiveNan:Number.NaN,positiveZero:0,positiveInt:1,positiveFloat:1.01,positivePowWithDecimals:123.45,positivePow:200,positiveHexa:1193046,epsilon:Number.EPSILON,positiveMinValue:Number.MIN_VALUE,positiveMaxSafeInteger:Number.MAX_SAFE_INTEGER,positiveMaxValue:Number.MAX_VALUE,positiveInfinity:Number.POSITIVE_INFINITY,e:Math.E,ln10:Math.LN10,ln2:Math.LN2,log10e:Math.LOG10E,log2e:Math.LOG2E,pi:Math.PI,sqrt1_2:Math.SQRT1_2,sqrt2:Math.SQRT2},m=(()=>{const e={empty:"",blank:"      ",stringNull:String(),stringEmpty:String(""),stringBlank:String("    "),foobar:"foobar",stringHexa:"#123456",stringOcta:"00101010"},t=d;for(let r=0,n=t.length;r<n;r++)e[t[r]]=`${t[r]}`;const r=g;for(let t=0,n=r.length;t<n;t++)e[r[t]]=`${r[t]}`;const n=y;for(let t=0,r=n.length;t<r;t++)e[n[t]]=`${n[t]}`;return e})(),N={anonymousFunction:function(){},namedFunction:function(){},arrowFunction:()=>{}},v=(()=>({emptyArray:[],emptyArrayObject:new Array,singleValued:[0],multiValued:[0,1,2],null:(()=>{const e=[];for(let t=0;t<3;t++)e.push(null);return e})(),undefined:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),void:(()=>{const e=[];for(let t=0;t<3;t++)e.push(void 0);return e})(),voids:(()=>{const e=[],t=d;for(let r in t)e.push(t[r]);return e})(),booleans:(()=>{const e=[],t=g;for(let r in t)e.push(t[r]);return e})(),numbers:(()=>{const e=[],t=y;for(let r in t)e.push(t[r]);return e})(),strings:(()=>{const e=[],t=m;for(let r in t)e.push(t[r]);return e})(),functions:(()=>{const e=[],t=N;for(let r in t)e.push(t[r]);return e})(),objects:[{foo:"bar"},{baz:"qux"}],arrays:[[1,2,3],[4,5,6],[7,8,9]]}))(),A={int8Array:new Int8Array([1,2,3]),uInt8Array:new Uint8Array([1,2,3]),int16Array:new Int16Array([1,2,3]),uInt16Array:new Uint16Array([1,2,3]),int32Array:new Int32Array([1,2,3]),uInt32Array:new Uint32Array([1,2,3]),float32Array:new Float32Array([1,2,3]),float64Array:new Float64Array([1,2,3])},O={empty:{},instance:new Object,null:{null:null},undefined:{undefined:void 0},foo:{foo:"bar"}};var I=Object.freeze({__proto__:null,voids:d,booleans:g,numbers:y,strings:m,functions:N,arrays:v,typedArrays:A,objects:O});
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 */const E={DataMap:void 0,createDataMap:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t={};for(let r in e){const n=I[r];if(void 0===n)throw ReferenceError(`The global data map does not contain element for key: ${r}`);const s=e[r];if(t[r]={},0===s.length)for(let e in n)t[r][e]=n[e];else for(let e=0,o=s.length;e<o;e++)t[r][s[e]]=n[s[e]]}return t},createBenchmarkOptions:function(e){return E.DataMap=E.createDataMap(e),{onStart:function(){this.benchDataMap=E.DataMap},onCycle:function(){},onAbort:function(){console.log(`${this.constructor.name} [${this.name}] onAbort`)},onError:function(e){console.log(`${this.constructor.name} [${this.name}] onError`),console.error(e.message)},onReset:function(){console.log(`${this.constructor.name} [${this.name}] onReset`)},onComplete:function(){delete this.benchDataMap},setup:function(){},teardown:function(){}}},createSuiteOptions:function(){let e;return e={},e},iterateOverDataMap:function(e){return function(){if(void 0===e)throw new ReferenceError("the method param is null or undefined!");const t=this.benchDataMap;for(let r in t){const n=t[r];if(Array.isArray(n))for(let t of n)try{e(t)}catch(r){const n=null===t?"null":void 0===t?"undefined":t.toString();console.error(`method [${e.name} fail with [${n}] => ${r.message}`)}else for(let t in n){const r=n[t];try{e(r)}catch(t){const n=null===r?"null":void 0===r?"undefined":r.toString();console.error(`method [${e.name} fail with [${n}] => ${t.message}`)}}}}},createDataSet:function(e){void 0===e&&(e={voids:[],booleans:[],numbers:[],strings:[],functions:[],arrays:[],typedArrays:[],objects:[]});let t=[];for(let r in e){const n=I[r],s=e[r];if(0===s.length)for(let e in n)t.push(n[e]);else for(let e=0,r=s.length;e<r;e++)t.push(n[s[e]])}return t},createDataSetBenchmarkOptions:function(e){return{setup:function(){this.dataset=E.createDataSet()[e]},teardown:function(){delete this.dataset}}},iterateOverDataSet:function(e){return function(){const t=this.dataset;for(let r=0,n=t.length;r<n;r++)e(t[r])}}};return e.DEG_TO_RAD=l,e.FAHRENHEIT_CELSIUS_COEFFICIENT=h,e.FAHRENHEIT_CELSIUS_CONSTANTE=32,e.KELVIN_CELSIUS_CONSTANTE=p,e.PI=o,e.PI_2=i,e.PI_4=a,e.RAD_TO_DEG=u,e.Testing=E,e.arrays=v,e.bitsToByte=n,e.booleans=g,e.byteToBits=r,e.celsiusToFahrenheit=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(e*h+32).toFixed(n)},e.celsiusToKelvin=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(e+p).toFixed(n)},e.classNameify=
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/strings
	 * @description Export the utilities methods about strings
	 *
	 */
function(e){if(!t.isNotString(e)&&!t.isEmptyString(e))return e.charAt(0).toUpperCase()+e.slice(1)},e.convertWebGLRotationToTopogicalYawPitch=function(e){if(t.isNotDefined(e))return;if(t.isNotObject(e))return;const r=e;return{yaw:-(c((n=r,Math.atan2(n.y,n.x)))-90),pitch:c(function(e){return Math.asin(e.z)}(r))};var n}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
	 *
	 */,e.createInterval=function(e,t,r){if(!e)return;if(!t)return;if(!r)return;let n=0;setInterval((function(){n>=1?n=0:n+.1>1?n=1:n+=.1;const r=t.getLength();let s,o,i,a=n;for(let n=0,l=e.children.length;n<l;n++)o=e.children[n],s=a/r,s>1&&(s=0),i=t.getPointAt(s),i.y+=.1,o.position.copy(i),a+=1}),r)},e.degreesFromRadians=function(e){return e*u},e.degreesToRadians=function(e){return e*l},e.extend=function e(r,n){let s;if(t.isObject(r)&&t.isNotDefined(n))s=Object.assign({},r);else if(t.isNotDefined(r)&&t.isObject(n))s=Object.assign({},n);else if(t.isObject(r)&&t.isObject(n)){s=Object.assign({},r);const o=Object.keys(n);for(let i=0,a=o.length;i<a;++i){let a=o[i];t.isObject(n[a])?a in r?s[a]=e(r[a],n[a]):Object.assign(s,{[a]:n[a]}):Object.assign(s,{[a]:n[a]})}}else s=null;return s},e.extendObject=function e(r,n){if(!t.isUndefined(r)&&!t.isUndefined(n)){if(r.constructor===Function&&n.constructor===Function)r.prototype=new n,r.prototype.parent=n.prototype,r.prototype.constructor=r;else if(r.constructor===Function&&n.constructor===Object)r.prototype=n,r.prototype.parent=n,r.prototype.constructor=r;else if(r.constructor===Object&&n.constructor===Object)for(let t in n)Object.prototype.hasOwnProperty.call(r,t)&&(n[t].constructor===Object||n[t].constructor===Array)?r[t]=e(r[t],n[t]):r[t]=n[t];else{if(r.constructor!==Array||n.constructor!==Array)throw r.constructor===Object&&n.constructor===Array||r.constructor===Array&&n.constructor===Object?new Error("Cannot perform extend of object with an array"):new Error("Cannot perform extend given parameters...");r=r.concat(n)}return r}},e.fahrenheitToCelsius=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return((e-32)/h).toFixed(n)},e.fahrenheitToKelvin=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return((e-32)/h+p).toFixed(n)},e.functions=N,e.getPitch=function(e){if(!t.isNotDefined(e)&&!t.isNotObject(e))return Math.asin(e.y)},e.getRandom=
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/numbers
	 * @description Export the utilities methods about numbers
	 *
	 */
function(){return Math.random()},e.getRandomFloatExclusive=function(e=0,t=1){return Math.random()*(t-e)+e},e.getRandomFloatInclusive=function(e=0,t=1){return Math.random()*(t-e+1)+e},e.getRandomIntExclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r))+r},e.getRandomIntInclusive=function(e=0,t=1){const r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+r},e.getYaw=function(e){if(!t.isNotDefined(e)&&!t.isNotObject(e))return-Math.atan2(e.x,e.z)},e.internalRepresentationToNumber=function(e){if(t.isNotDefined(e))return;if(t.isNotString(e))return;const r=e.replace(/ /g,"").match(/.{8}/g);if(t.isNull(r))return;const s=r.map((e=>n(e)));if(t.isArrayOfUndefined(s))return;let o=new ArrayBuffer(8),i=new DataView(o);for(let e=0;e<8;e++)i.setUint8(e,s[e]);return i.getFloat64(0)},e.kelvinToCelsius=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return(e-p).toFixed(n)},e.kelvinToFahrenheit=function(e,r){if(t.isNotTemperature(e))return;const n=t.isNotEmpty(r)&&t.isNumber(r)?r:2;return((e-p)*h+32).toFixed(n)},e.numberToInternalRepresentation=function(e){let t=new ArrayBuffer(8),n=new DataView(t);n.setFloat64(0,e);let s="";for(let e=0;e<8;e++)s+=r(n.getUint8(e));return s=`${s.substring(0,1)} ${s.substring(1,12)} ${s.substring(12)}`,s},e.numberToPlainString=function(e){const t=String(e);if(!/\d+\.?\d*e[-+]*\d+/i.test(t))return t;const r=t.split("e"),n=r[0],s=0===n.indexOf("-"),o=(s?n.slice(1):n).split("."),i=o[0].length,a=o[1]?o[1].length:0,l=o.join(""),u=r[1],c=0===u.indexOf("-"),f=parseInt(u.slice(1));let b=s?"-":"";return c?(b+="0.",b+="0".repeat(f-i),b+=l):(b+=l,b+="0".repeat(f-a),b+=".0"),b}
/**
	 * @author [Tristan Valcke]{@link https://github.com/Itee}
	 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
	 *
	 * @module sources/cores/objects
	 * @description Export the utilities methods about objects
	 */,e.numbers=y,e.objects=O,e.radiansFromDegrees=function(e){return e*l},e.radiansToDegrees=c,e.removeDiacritics=function(e){return t.isNotString(e)?null:e.replace(/[^\u0000-\u007E]/g,(e=>s[e]||e))},e.ringClockwise=function(e){if(!t.isNotArray(e)){if((r=e.length)<4)return!1;for(var r,n=0,s=e[r-1][1]*e[0][0]-e[r-1][0]*e[0][1];++n<r;)s+=e[n-1][1]*e[n][0]-e[n-1][0]*e[n][1];return s>=0}},e.ringContains=f,e.ringContainsSome=function(e,r){if(t.isNotArray(e))return;if(t.isNotArray(r))return;let n=0,s=r.length;do{if(f(e,r[n])>0)return!0}while(++n<s);return!1},e.segmentContains=b,e.serializeObject=function(){},e.sortBy=function(e,t="asc"){const r=e;let n;if("asc"===t)n=(e,t)=>e[r]<t[r]?-1:e[r]>t[r]?1:0;else{if("desc"!==t)throw RangeError(`Got invalid ascending [${t}], but expect one of ['asc','desc']!`);n=(e,t)=>e[r]>t[r]?-1:e[r]<t[r]?1:0}return n},e.strings=m,e.toArray=function(e,r={keepArray:!1,keepNull:!1}){let n;return n=t.isArray(e)?r.keepArray?[e]:e:r.keepNull||"object"==typeof e||t.isObject(e)?[e]:[],n},e.toEnum=function(e){if(!t.isNotObject(e)){if(t.isDefined(e.toString)){const r=Object.getOwnPropertyDescriptor(e,"toString");if(t.isDefined(r)&&!1===r.configurable)return}return Object.freeze(Object.defineProperties(e,{toString:{configurable:!1,enumerable:!1,writable:!1,value(){const e=Object.keys(this);let t="";for(let r=0,n=e.length;r<n;r++)t+=`${e[r]}, `;return t=t.slice(0,-2),t}},includes:{configurable:!1,enumerable:!1,writable:!1,value(e){return Object.values(this).includes(e)}},keys:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.keys(this)}},values:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.values(this)}},entries:{configurable:!1,enumerable:!1,writable:!1,value(){return Object.entries(this)}}}))}},e.typedArrays=A,e.uniq=function(e){if(t.isNotArray(e))return;const r={};return e.filter((e=>!Object.prototype.hasOwnProperty.call(r,e)&&(r[e]=!0)))},e.voids=d,Object.defineProperty(e,"__esModule",{value:!0}),e}({},Itee.Validators);
