{"version":3,"file":"itee-utils.cjs.js","sources":["../sources/cores/arrays.js","../sources/cores/numbers.js","../node_modules/itee-validators/builds/itee-validators.esm.js","../sources/cores/objects.js","../sources/cores/strings.js","../sources/file-system/files.js","../sources/geomathics/trigonometries.js","../sources/physics/temperatures.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/cores/arrays\r\n * @description Export the utilities methods about Arrays\r\n *\r\n */\r\n\r\nexport function sortBy ( propertyName, ascending = 'asc' ) {\r\n\r\n    const _propertyName = propertyName\r\n    let resultSorter    = undefined\r\n\r\n    if ( ascending === 'asc' ) {\r\n\r\n        resultSorter = ( a, b ) => {\r\n\r\n            if ( a[ _propertyName ] < b[ _propertyName ] ) {\r\n                return -1\r\n            }\r\n\r\n            if ( a[ _propertyName ] > b[ _propertyName ] ) {\r\n                return 1\r\n            }\r\n\r\n            return 0\r\n\r\n        }\r\n\r\n    } else if ( ascending === 'desc' ) {\r\n\r\n        resultSorter = ( a, b ) => {\r\n\r\n            if ( a[ _propertyName ] > b[ _propertyName ] ) {\r\n                return -1\r\n            }\r\n\r\n            if ( a[ _propertyName ] < b[ _propertyName ] ) {\r\n                return 1\r\n            }\r\n\r\n            return 0\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        throw 'Invalid ascending !'\r\n\r\n    }\r\n\r\n    return resultSorter\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/cores/numbers\r\n * @description Export the utilities methods about numbers\r\n *\r\n */\r\n\r\n/**\r\n * Returns a random number between min (inclusive) and max (exclusive)\r\n */\r\nexport function getRandomArbitrary ( min = 0, max = 1 ) {\r\n    return Math.random() * ( max - min ) + min\r\n}\r\n\r\n/**\r\n * Returns a random integer between min (inclusive) and max (inclusive)\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nexport function getRandomInt ( min = 0, max = 1 ) {\r\n    return ( Math.floor( Math.random() * ( max - min + 1 ) ) + min )\r\n}\r\n\r\n","import fs from 'fs';\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArray\n * @desc Export function to validate if a value is an array or not\n * @example\n *\n * import { isArray } from 'itee-validators'\n *\n * if( isArray( value ) ) {\n *     //...\n * } else {\n *     //...\n * }\n *\n */\n\n/**\n * Check if given data is an array\n *\n * @param data {*} The data to check against the array type\n * @returns {boolean} true if data is array, false otherwise\n */\nfunction isArray ( data ) {\n    return Array.isArray( data )\n}\n\n\n\n////////////////////\n\n/**\n * Check if given data is not an array\n *\n * @param data {*} The data to check against the array type\n * @returns {boolean} true if data is not array, false otherwise\n */\nfunction isNotArray ( data ) {\n    return !Array.isArray( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isEmptyArray\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is an empty array\n *\n * @param data {*} The data to check against the empty array\n * @returns {boolean} true if data is an empty array, false otherwise\n */\nfunction isEmptyArray ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n\n    return ( data.length === 0 )\n\n}\n\n///////\n\n/**\n * Check if given data is not an empty array\n *\n * @param data {*} The data to check against the empty array\n * @returns {boolean} true if data is not an empty array, false otherwise\n */\nfunction isNotEmptyArray ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n\n    return ( data.length > 0 )\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfArray\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is an array of array\n *\n * @param data {*} The data to check against the array of array type\n * @returns {boolean} true if data is an array of array, false otherwise\n */\nfunction isArrayOfArray ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n    if ( isEmptyArray( data ) ) { return false }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotArray( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n////////\n\n/**\n * Check if given data is not an array of array\n *\n * @param data {*} The data to check against the array of array type\n * @returns {boolean} true if data is not an array of array, false otherwise\n */\nfunction isNotArrayOfArray ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n    if ( isEmptyArray( data ) ) { return true }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isArray( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfMultiElement\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is an array with multiples values\n *\n * @param data {*} The data to check against the single valued array\n * @returns {boolean} true if data is an array with multiples values, false otherwise\n */\nfunction isArrayOfMultiElement ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n\n    return ( data.length > 1 )\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/voids/isNull\n * @desc Export function to validate if a value is a void\n * @example todo\n *\n */\n\n/**\n * Check if given data is null\n *\n * @param data {*} The data to check against the nullity\n * @returns {boolean} true if data is null, false otherwise.\n */\nfunction isNull ( data ) {\n    return ( data === null )\n}\n\n///\n\n/**\n * Check if given data is not null\n *\n * @param data {*} The data to check against the nullity\n * @returns {boolean} true if data is not null, false otherwise.\n */\nfunction isNotNull ( data ) {\n    return ( data !== null )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfNull\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is not an empty array where all values are null\n *\n * @param data {*} The data to check against the array of array type\n * @returns {boolean} true if data is not an empty array where all values are null, false otherwise\n */\nfunction isArrayOfNull ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n    if ( isEmptyArray( data ) ) { return false }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotNull( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n/////\n\n/**\n * Check if given data is not an empty array where all values are not null\n *\n * @param data {*} The data to check against the array of array type\n * @returns {boolean} true if data is not an empty array where all values are not null, false otherwise\n */\nfunction isNotArrayOfNull ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n    if ( isEmptyArray( data ) ) { return true }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotNull( data[ index ] ) ) {\n            return true\n        }\n    }\n\n    return false\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/voids/isDefined\n * @desc Export function to validate if a value is a void\n * @example todo\n *\n */\n\n/**\n * Check if given data is not null and not undefined\n *\n * @param data {*} The data to check against the existence\n * @returns {boolean} true if data is not null and not undefined, false otherwise.\n */\nfunction isDefined ( data ) {\n    return ( ( data !== null ) && ( typeof data !== 'undefined' ) )\n}\n\n/////\n\n/**\n * Check if given data is null or undefined\n *\n * @param data {*} The data to check against the existence\n * @returns {boolean} true if data is null or undefined, false otherwise.\n */\nfunction isNotDefined ( data ) {\n    return ( ( data === null ) || ( typeof data === 'undefined' ) )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/objects/isObject\n * @desc Export function to validate if a value is an object\n * @example todo\n *\n */\n\n/**\n * Check if given data is an object\n *\n * @param data {*} The data to check against the object type\n * @returns {boolean} true if data is object, false otherwise\n */\nfunction isObject ( data ) {\n\n    if ( isNotDefined( data ) ) { return false }\n\n    return ( data.constructor === Object )\n}\n\n////\n\n/**\n * Check if given data is not an object\n *\n * @param data {*} The data to check against the object type\n * @returns {boolean} true if data is not an object, false otherwise\n */\nfunction isNotObject ( data ) {\n    return !isObject( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfObject\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is an array where all values are of object type\n *\n * @param data {*} The data to check against the array of object type\n * @returns {boolean} true if data is an array where all values are of object type, false otherwise\n */\nfunction isArrayOfObject ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n    if ( isEmptyArray( data ) ) { return false }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotObject( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n////\n\n/**\n * Check if given data is not an array where all values are of object type\n *\n * @param data {*} The data to check against the array of object type\n * @returns {boolean} true if data is not an array where all values are of object type, false otherwise\n */\nfunction isNotArrayOfObject ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n    if ( isEmptyArray( data ) ) { return true }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotObject( data[ index ] ) ) {\n            return true\n        }\n    }\n\n    return false\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfSingleElement\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is an array with a single value\n *\n * @param data {*} The data to check against the single valued array\n * @returns {boolean} true if data is an array with a single value, false otherwise\n */\nfunction isArrayOfSingleElement ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n\n    if ( data.length !== 1 ) {\n        return false\n    }\n\n    return true\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/strings/isString\n * @desc Export function to validate if a value is a string\n * @example todo\n *\n */\n\n/**\n * Check if given data is a string\n *\n * @param data {*} The data to check against the string type\n * @returns {boolean} true if data is a string, false otherwise.\n */\nfunction isString ( data ) {\n    return ( typeof data === 'string' || data instanceof String )\n}\n\n\n\n//////\n\n/**\n * Check if given data is not a string\n *\n * @param data {*} The data to check against the string type\n * @returns {boolean} true if data is not a string, false otherwise.\n */\nfunction isNotString ( data ) {\n    return !isString( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfString\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is not an empty array where all values are string\n *\n * @param data {*} The data to check against the array of strings\n * @returns {boolean} true if data is not an empty array where all values are string, false otherwise\n */\nfunction isArrayOfString ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n    if ( isEmptyArray( data ) ) { return false }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotString( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n\n\n/////\n\n/**\n * Check if given data is not an empty array where all values are not string\n *\n * @param data {*} The data to check against the array of strings\n * @returns {boolean} true if data is not an empty array where all values are not string, false otherwise\n */\nfunction isNotArrayOfString ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n    if ( isEmptyArray( data ) ) { return true }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotString( data[ index ] ) ) {\n            return true\n        }\n    }\n\n    return false\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/voids/isUndefined\n * @desc Export function to validate if a value is a void\n * @example todo\n *\n */\n\n/**\n * Check if given data is undefined\n *\n * @param data {*} The data to check against the undefiness\n * @returns {boolean} true if data is undefined, false otherwise.\n */\nfunction isUndefined ( data ) {\n    return ( typeof data === 'undefined' )\n}\n\n///\n\n/**\n * Check if given data is defined\n *\n * @param data {*} The data to check against the undefiness\n * @returns {boolean} true if data is defined, false otherwise.\n */\nfunction isNotUndefined ( data ) {\n    return ( typeof data !== 'undefined' )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/arrays/isArrayOfUndefined\n * @desc Export function to validate if a value is an array of array or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is not an empty array where all values are undefined\n *\n * @param data {*} The data to check against the array of undefined\n * @returns {boolean} true if data is not an empty array where all values are undefined, false otherwise\n */\nfunction isArrayOfUndefined ( data ) {\n\n    if ( isNotArray( data ) ) { return false }\n    if ( isEmptyArray( data ) ) { return false }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotUndefined( data[ index ] ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n////\n\n/**\n * Check if given data is not an empty array where all values are defined\n *\n * @param data {*} The data to check against the array of undefined\n * @returns {boolean} true if data is not an empty array where all values are defined, false otherwise\n */\nfunction isNotArrayOfUndefined ( data ) {\n\n    if ( isNotArray( data ) ) { return true }\n    if ( isEmptyArray( data ) ) { return true }\n\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\n        if ( isNotUndefined( data[ index ] ) ) {\n            return true\n        }\n    }\n\n    return false\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/booleans/isBoolean\n * @desc Export function to validate if a value is a boolean or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is a boolean\n *\n * @param data {*} The data to check against the booleaness\n * @returns {boolean} true if data is a boolean, false otherwise.\n */\nfunction isBoolean ( data ) {\n    return ( typeof data === 'boolean' )\n}\n\n\n\n//////\n\n/**\n * Check if given data is not a boolean\n *\n * @param data {*} The data to check against the booleaness\n * @returns {boolean} true if data is not a boolean, false otherwise.\n */\nfunction isNotBoolean ( data ) {\n    return ( typeof data !== 'boolean' )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/booleans/isTrue\n * @desc Export function to validate if a value is a boolean set to true or false\n * @example todo\n *\n */\n\n/**\n * Check if given data is a boolean with value to true\n *\n * @param data {*} The data to check against true value\n * @returns {boolean} true if data is a boolean set to true, false otherwise.\n */\nfunction isTrue ( data ) {\n    return ( isBoolean( data ) && ( data === true ) )\n}\n\n/**\n * Check if given data is a boolean with value to false\n *\n * @param data {*} The data to check against false value\n * @returns {boolean} true if data is a boolean set to false, false otherwise.\n */\nfunction isFalse ( data ) {\n    return ( isBoolean( data ) && ( data === false ) )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/functions/isFunction\n * @desc Export function to validate if a value is a function or not\n * @example todo\n *\n */\n\n/**\n * Check if given data is a function\n *\n * @param data {*} The data to check against the functionality\n * @returns {boolean} true if data is a function, false otherwise.\n */\nfunction isFunction ( data ) {\n    return ( typeof data === 'function' )\n}\n\n///\n\n/**\n * Check if given data is not a function\n *\n * @param data {*} The data to check against the functionality\n * @returns {boolean} true if data is not a function, false otherwise.\n */\nfunction isNotFunction ( data ) {\n    return ( typeof data !== 'function' )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isZero\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if the given data is zero\n *\n * @param data {*} The data to check against the zero value\n * @returns {boolean} true if data is zero, false otherwise\n */\nfunction isZero ( data ) {\n    return ( data === 0 )\n}\n\n/**\n * Check if the given data is a positive zero\n *\n * @param data {*} The data to check against the positive zero value\n * @returns {boolean} true if data is a positive zero, false otherwise\n */\nfunction isZeroPositive ( data ) {\n    return ( data === 0 && ( 1 / data ) === Number.POSITIVE_INFINITY )\n}\n\n/**\n * Check if the given data is a negative zero\n *\n * @param data {*} The data to check against the negative zero value\n * @returns {boolean} true if data is a negative zero, false otherwise\n */\nfunction isZeroNegative ( data ) {\n    return ( data === 0 && ( 1 / data ) === Number.NEGATIVE_INFINITY )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isNumber\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if given data is a number\n *\n * @param data {*} The data to check against the maximum safe integer state\n * @returns {boolean} true if data is a number, false otherwise.\n */\nfunction isNumber ( data ) {\n\n    if ( isNotDefined( data ) ) { return false }\n\n    return ( data.constructor === Number )\n\n}\n\n\n\n/**\n * Check if the data is a positive number\n *\n * @param data {*} The data to check against the positivity\n * @returns {boolean} true if data is a positive number, false otherwise.\n */\nfunction isNumberPositive ( data ) {\n\n    if ( isNotNumber( data ) ) { return false }\n\n    return ( data > 0 || isZeroPositive( data ) || isInfinitePositive( data ) )\n\n}\n\n/**\n * Check if the data is a negative number\n *\n * @param data {*} The data to check against the negativity\n * @returns {boolean} true if data is a negative number, false otherwise.\n */\nfunction isNumberNegative ( data ) {\n    return ( isNumber( data ) && data < 0 )\n}\n\n//////\n\n/**\n * Check if given data is not a number\n *\n * @param data {*} The data to check against the number type\n * @returns {boolean} true if data is not of type number or not a number, false otherwise.\n */\nfunction isNotNumber ( data ) {\n    return !( isNumber( data ) )\n}\n\n/////////\n\n//Todo: isInRange(x, y, value, xInclusive, yInclusive)\n//Todo: isInRangeZeroOne(value, zeroInclusive, oneInclusive) //inclusive\n\n/////////\n\n/**\n * Check if the given data is an integer number\n *\n * @param data {*} The data to check against the integer state\n * @returns {boolean} true if data is an integer, false otherwise\n */\nfunction isInteger ( data ) {\n    return Number.isInteger( data )\n}\n\n\n\n////////\n\n/**\n * Check if given data is a floating point number\n *\n * @param data {*} The data to check against the floating point\n * @returns {boolean} true if data is a float, false otherwise\n */\nfunction isFloat ( data ) {\n\n    if ( isNotNumber( data ) ) { return false }\n    if ( Number.isNaN( data ) ) { return false }\n    if ( isInfinite( data ) ) { return false}\n\n    return data % 1 !== 0\n\n}\n\n\n\n////////\n\n/**\n * Check if given data is not a number\n *\n * @param data {*} The data to check against the maximum safe integer state\n * @returns {boolean} true if data is not a number, false otherwise.\n */\nfunction isNaN ( data ) {\n    return Number.isNaN( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isInfinite\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if the given data is an infinite number\n *\n * @param data {*} The data to check against the infinite state\n * @returns {boolean} true if data is infinite, false otherwise\n */\nfunction isInfinite ( data ) {\n\n    if ( isNotNumber( data ) ) { return false }\n    if ( Number.isNaN( data ) ) { return false }\n\n    return !Number.isFinite( data )\n}\n\n/**\n * Check if the given data is an infinite negative number\n *\n * @param data {*} The data to check against the negative infinite state\n * @returns {boolean} true if data is negative infinite, false otherwise\n */\nfunction isInfiniteNegative ( data ) {\n    return ( data === Number.NEGATIVE_INFINITY )\n}\n\n/**\n * Check if the given data is an infinite positive number\n *\n * @param data {*} The data to check against the positive infinite state\n * @returns {boolean} true if data is positive infinite, false otherwise\n */\nfunction isInfinitePositive ( data ) {\n    return ( data === Number.POSITIVE_INFINITY )\n}\n\n///\n\n/**\n * Check if the given data is a finite number\n *\n * @param data {*} The data to check against the finite state\n * @returns {boolean} true if data is finite, false otherwise\n */\nfunction isFinite ( data ) {\n    return Number.isFinite( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isMax\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if the given data is a maximum positive number\n *\n * @param data {*} The data to check against the positive maximum state\n * @returns {boolean} true if data is positive maximum, false otherwise\n */\nfunction isMaxPositive ( data ) {\n    return ( data === Number.MAX_VALUE )\n}\n\n/**\n * Check if the given data is a maximum negative number\n *\n * @param data {*} The data to check against the maximum infinite state\n * @returns {boolean} true if data is negative maximum, false otherwise\n */\nfunction isMaxNegative ( data ) {\n    return ( data === -Number.MAX_VALUE )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isMin\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if the given data is a minimum positive number\n *\n * @param data {*} The data to check against the positive minimum state\n * @returns {boolean} true if data is positive minimum, false otherwise\n */\nfunction isMinPositive ( data ) {\n    return ( data === Number.MIN_VALUE )\n}\n\n/**\n * Check if the given data is a minimum negative number\n *\n * @param data {*} The data to check against the minimum infinite state\n * @returns {boolean} true if data is negative minimum, false otherwise\n */\nfunction isMinNegative ( data ) {\n    return ( data === -Number.MIN_VALUE )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/numbers/isSafeInteger\n * @desc Export function to validate if a value is a finite number\n * @example todo\n *\n */\n\n/**\n * Check if the given data is a maximum safe integer number\n *\n * @param data {*} The data to check against the maximum safe integer state\n * @returns {boolean} true if data is a maximum safe integer, false otherwise\n */\nfunction isMaxSafeInteger ( data ) {\n    return ( data === Number.MAX_SAFE_INTEGER )\n}\n\n/**\n * Check if the given data is a minimum safe integer number\n *\n * @param data {*} The data to check against the minimum safe integer state\n * @returns {boolean} true if data is a minimum safe integer, false otherwise\n */\nfunction isMinSafeInteger ( data ) {\n    return ( data === Number.MIN_SAFE_INTEGER )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/objects/isEmptyObject\n * @desc Export function to validate if a value is an object\n * @example todo\n *\n */\n\n/**\n * Check if given data is an empty object\n *\n * @param data {*} The data to check against the emptiness of the object\n * @returns {boolean} true if data is an empty object, false otherwise\n */\nfunction isEmptyObject ( data ) {\n\n    if ( isNotObject( data ) ) { return false }\n\n    if ( data.length === 0 ) {\n        return true\n    }\n\n    // Otherwise, does it have any properties of its own?\n    for ( let key in data ) {\n        if ( Object.prototype.hasOwnProperty.call( data, key ) ) {\n            return false\n        }\n    }\n\n    return true\n\n}\n\n////\n\n/**\n * Check if given data is not an empty object\n *\n * @param data {*} The data to check against the emptiness of the object\n * @returns {boolean} true if data is not an empty object, false otherwise\n */\nfunction isNotEmptyObject ( data ) {\n    return !( isEmptyObject( data ) )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/strings/isEmptyString\n * @desc Export function to validate if a value is a empty string\n * @example todo\n *\n */\n\n/**\n * Check if given data is an empty string\n *\n * @param data {*} The data to check against the emptiness of the string\n * @returns {boolean} true if data is an empty string, false otherwise.\n */\nfunction isEmptyString ( data ) {\n\n    if ( isNotString( data ) ) {\n        return false\n    }\n\n    return ( data.length === 0 )\n\n}\n\n////\n\n/**\n * Check if given data is not an empty string\n *\n * @param data {*} The data to check against the emptiness of the string\n * @returns {boolean} true if data is not an empty string, false otherwise.\n */\nfunction isNotEmptyString ( data ) {\n\n    return !( isEmptyString( data ) )\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/strings/isBlankString\n * @desc Export function to validate if a value is a blank string\n * @example todo\n *\n */\n\n/**\n * Check if the given data is a blank string\n *\n * @param data {*} The data to check against the blankness of the string\n * @returns {boolean} true if data is a blank string, false otherwise.\n */\nfunction isBlankString ( data ) {\n\n    if ( isNotString( data ) ) { return false }\n    if ( isEmptyString( data ) ) { return false }\n\n    return ( !/\\S/.test( data ) )\n}\n\n////\n\n/**\n * Check if the given data is not a blank string\n *\n * @param data {*} The data to check against the blankness of the string\n * @returns {boolean} true if data is not a blank string, false otherwise.\n */\nfunction isNotBlankString ( data ) {\n\n    return !( isBlankString( data ) )\n\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/symbols/isSymbol\n * @desc Export function to validate if a value is a symbol\n * @example todo\n *\n */\n\n/**\n * Check if given data is a symbol\n *\n * @param data {*} The data to check against the symbol type\n * @returns {boolean} true if data is a symbol, false otherwise.\n */\nfunction isSymbol ( data ) {\n    return ( typeof data === 'symbol' )\n}\n\n/////\n\n/**\n * Check if given data is not a symbol\n *\n * @param data {*} The data to check against the symbol type\n * @returns {boolean} true if data is not a symbol, false otherwise.\n */\nfunction isNotSymbol ( data ) {\n    return ( typeof data !== 'symbol' )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/voids/isEmpty\n * @desc Export function to validate if a value is a void\n * @example todo\n *\n */\n\n/**\n * Check emptiness of given data\n *\n * See: https://stackoverflow.com/questions/4346186/how-to-determine-if-a-function-is-empty\n *\n * @param data {*} The data to check against the emptiness\n * @returns {boolean} true if data is considered as empty, false otherwise.\n */\nfunction isEmpty ( data ) {\n\n    if ( isNotDefined( data ) ) { return false }\n    if ( isEmptyString( data ) ) { return true}\n    if ( isEmptyArray( data ) ) { return true }\n    if ( isEmptyObject( data ) ) { return true }\n\n    return false\n\n}\n\n///\n\n/**\n * Check fullness of given data\n *\n * @param data {*} The data to check against the emptiness\n * @returns {boolean} true if data is considered as not empty, false otherwise.\n */\nfunction isNotEmpty ( data ) {\n    return !isEmpty( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/cores\n * @description Export the Validator singleton instance that allow to validate complex data structure\n * @example\n *\n const validator = Itee.Validators.Validator\n\n // Using unique function for One registered type\n // Usefull when a simple data structure is used multiple times\n validator.add( 'ColorType', color => {\n\n                const r = color.r\n                if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\n                    return false\n                }\n\n                const g = color.g\n                if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\n                    return false\n                }\n\n                const b = color.b\n                if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\n                    return false\n                }\n\n                return true\n            } )\n\n // Using schema composition\n // Usefull for design validation schema faster and based on previous declared validation types\n validator.add( 'Range_0_255', ( value ) => {\n\n                if ( Itee.Validators.isNotNumber( value ) ) {\n                    return false\n                }\n\n                return !(value < 0 || value > 255)\n\n            } )\n\n validator.add( 'ColorSchema', {\n                r: {\n                    required: true,\n                    type:     'Range_0_255'\n                },\n                g: {\n                    required: true,\n                    type:     'Range_0_255'\n                },\n                b: {\n                    required: true,\n                    type:     'Range_0_255'\n                }\n            } )\n\n validator.add( 'ColorStructure', {\n                color_from_type: {\n                    type: 'ColorType'\n                },\n                col_from_schema: {\n                    type: 'ColorSchema'\n                },\n                col_from_fn:     {\n                    // Inner function\n\t                // Usefull for specific validation requirement that cannot match other previous validation schema or type\n                    fn: function ColorValidator ( color ) {\n\n                        const r = color.r\n                        if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\n                            return false\n                        }\n\n                        const g = color.g\n                        if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\n                            return false\n                        }\n\n                        const b = color.b\n                        if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\n                            return false\n                        }\n\n                        return true\n                    }\n                }\n            } )\n\n // The data to validate\n const colorStruct = {\n                color_from_type: {\n                    r: 0,\n                    g: 1,\n                    b: 2\n                },\n                col_from_schema: {\n                    r: 10,\n                    g: 20,\n                    b: 30\n                },\n                col_from_fn:     {\n                    r: 0,\n                    g: 127,\n                    b: 255\n                }\n            }\n\n // Execute\n\n try {\n\n    if ( validator.check( colorStruct, 'ColorStructure' ) ) {\n        alert( 'ColorStructure is valid !' )\n    } else {\n        alert( validator.errors )\n    }\n\n} catch ( err ) {\n    alert( err )\n}\n *\n */\n\nclass Validator {\n\n    constructor () {\n\n        /**\n         * The validators store, by default it contains validators for Boolean, Number, Integer, Float, Array, String, Object, Symbol and Function\n         *\n         * @type {(function|object)}\n         */\n        this.validators = {\n            Boolean:  isBoolean,\n            Number:   isNumber,\n            Integer:  isInteger,\n            Float:    isFloat,\n            Array:    isArray,\n            String:   isString,\n            Object:   isObject,\n            Symbol:   isSymbol,\n            Function: isFunction\n        };\n\n        /**\n         * The list of errors occured during the check\n         *\n         * @type {Array.<string>}\n         */\n        this.errors = [];\n\n    }\n\n    /**\n     * Add a new validator schema to the validator instance\n     *\n     * @param type {string} - A string that represent the type of data to validate\n     * @param validator {(function|object)} - A function or validation schema that represent the type of data to validate\n     */\n    add ( type, validator ) {\n\n        if ( isNotString( type ) ) { throw new TypeError( `Validator: Expect type to be a string` ) }\n        if ( isNotFunction( validator ) && isNotObject( validator ) ) { throw new TypeError( `Validator: Expect validator to be an object or a function` ) }\n        if ( isDefined( this.validators[ type ] ) ) { throw new TypeError( `Validator: a validator is already defined for type '${type}'` ) }\n\n        this.validators[ type ] = validator;\n\n    }\n\n    /**\n     * To remove a registered type\n     *\n     * @param type {string} - The type to remove\n     */\n    remove ( type ) {\n\n        delete this.validators[ type ];\n\n    }\n\n    /**\n     * Allow to known the available types store in current validator instance\n     *\n     * @return {Array.<string>} - The list of registered type\n     */\n    getAvalaibleTypes () {\n\n        const availablesTypes = [];\n\n        for ( let key in this.validators ) {\n            availablesTypes.push( key );\n        }\n\n        return availablesTypes\n\n    }\n\n    /**\n     * Will perform a deep structural comparison between the given data and the validation schema of the given type\n     *\n     * @param data {*} - The data to validate\n     * @param type {string} - The type of the validation schema to apply\n     * @param breakOnError {boolean} - Return on first validation error ( true by default )\n     * @return {boolean} - Return true is the data is validated, false otherwise\n     */\n    check ( data, type, breakOnError = true ) {\n\n        const validator = this.validators[ type ];\n        if ( isNotDefined( validator ) ) {\n            throw new TypeError( `Validator: Unable to find schema validation of type '${type}'` )\n        }\n\n        let result = true;\n        if ( isFunction( validator ) ) {\n\n            result = validator( data );\n\n        } else if ( isObject( validator ) ) {\n\n            let subResult = true;\n            for ( let key in validator ) {\n\n                const subValidator = validator[ key ];\n                if ( isNotDefined( subValidator ) ) {\n                    throw new TypeError( `Validator: Missing validator for key '${key}' of type '${type}'` )\n                }\n\n                const value      = data[ key ];\n                const isRequired = subValidator.required;\n                if ( isNotDefined( value ) ) {\n                    if ( isRequired ) {\n                        subResult = false;\n                    } else {\n                        continue\n                    }\n                }\n\n                // In case of overriden validation function check it first\n                let validatorFunction = subValidator.fn;\n                if ( isDefined( validatorFunction ) ) {\n\n                    if ( isNotFunction( validatorFunction ) ) {\n                        throw new TypeError( `Validator: Invalid validation function for '${key}' with type '${type}'` )\n                    }\n\n                    subResult = validatorFunction( value );\n\n                } else {\n\n                    subResult = this.check( value, subValidator.type, breakOnError );\n\n                }\n\n                if ( subResult === false ) {\n\n                    this.errors.push( `Validator: Invalid property '${key}' of type '${subValidator.type}' with value '${value}' in object of type '${type}'` );\n                    result = false;\n                    if ( breakOnError ) {\n                        break\n                    }\n\n                }\n\n            }\n\n        } else {\n\n            throw new TypeError( `Validator: Unknown validator of type '${type}'` )\n\n        }\n\n        return result\n\n    }\n\n}\n\n/**\n * The singleton instance\n *\n * @type {Validator}\n */\nlet validatorInstance = undefined;\nif ( isNotDefined( validatorInstance ) ) {\n    validatorInstance = new Validator();\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isArrayBuffer\n * @desc Export function to validate if a value is a array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a array buffer\n *\n * @param data {*} The data to check against the array buffer type\n * @returns {boolean} true if data is a array buffer, false otherwise.\n */\nfunction isArrayBuffer ( data ) {\n    return ( data instanceof ArrayBuffer )\n}\n\n/**\n * Check if given data is not a array buffer\n *\n * @param data {*} The data to check against the array buffer type\n * @returns {boolean} true if data is not a array buffer, false otherwise.\n */\nfunction isNotArrayBuffer ( data ) {\n    return !isArrayBuffer( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isBigInt64Array\n * @desc Export function to validate if a value is a big int 64 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a big int 64 array\n *\n * @param data {*} The data to check against the big int 64 array type\n * @returns {boolean} true if data is a big int 64 array, false otherwise.\n */\nfunction isBigInt64Array ( data ) {\n    return ( data instanceof BigInt64Array )\n}\n\n/**\n * Check if given data is not a big int 64 array\n *\n * @param data {*} The data to check against the big int 64 array type\n * @returns {boolean} true if data is not a big int 64 array, false otherwise.\n */\nfunction isNotBigInt64Array ( data ) {\n    return !isBigInt64Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isBigUint64Array\n * @desc Export function to validate if a value is a big unsigned int 64 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a big unsigned int 64 array\n *\n * @param data {*} The data to check against the big unsigned int 64 array type\n * @returns {boolean} true if data is a big unsigned int 64 array, false otherwise.\n */\nfunction isBigUint64Array ( data ) {\n    return ( data instanceof BigUint64Array )\n}\n\n/**\n * Check if given data is not a big unsigned int 64 array\n *\n * @param data {*} The data to check against the big unsigned int 64 array type\n * @returns {boolean} true if data is not a big unsigned int 64 array, false otherwise.\n */\nfunction isNotBigUint64Array ( data ) {\n    return !isBigUint64Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isFloat32Array\n * @desc Export function to validate if a value is a float 32 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a float 32 array \n *\n * @param data {*} The data to check against the float 32 array  type\n * @returns {boolean} true if data is a float 32 array , false otherwise.\n */\nfunction isFloat32Array ( data ) {\n    return ( data instanceof Float32Array )\n}\n\n/**\n * Check if given data is not a float 32 array\n *\n * @param data {*} The data to check against the float 32 array  type\n * @returns {boolean} true if data is not a float 32 array , false otherwise.\n */\nfunction isNotFloat32Array ( data ) {\n    return !isFloat32Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isFloat64Array\n * @desc Export function to validate if a value is a float 64 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a float 64 array\n *\n * @param data {*} The data to check against the float 64 array  type\n * @returns {boolean} true if data is a float 64 array , false otherwise.\n */\nfunction isFloat64Array ( data ) {\n    return ( data instanceof Float64Array )\n}\n\n/**\n * Check if given data is not a float 64 array\n *\n * @param data {*} The data to check against the float 64 array  type\n * @returns {boolean} true if data is not a float 64 array , false otherwise.\n */\nfunction isNotFloat64Array ( data ) {\n    return !isFloat64Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isInt16Array\n * @desc Export function to validate if a value is a int 16 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a int 16 array\n *\n * @param data {*} The data to check against the int 16 array  type\n * @returns {boolean} true if data is a int 16 array , false otherwise.\n */\nfunction isInt16Array ( data ) {\n    return ( data instanceof Int16Array )\n}\n\n/**\n * Check if given data is not a int 16 array\n *\n * @param data {*} The data to check against the int 16 array  type\n * @returns {boolean} true if data is not a int 16 array , false otherwise.\n */\nfunction isNotInt16Array ( data ) {\n    return !isInt16Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isInt32Array\n * @desc Export function to validate if a value is a int 32 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a int 32 array\n *\n * @param data {*} The data to check against the int 32 array  type\n * @returns {boolean} true if data is a int 32 array , false otherwise.\n */\nfunction isInt32Array ( data ) {\n    return ( data instanceof Int32Array )\n}\n\n/**\n * Check if given data is not a int 32 array\n *\n * @param data {*} The data to check against the int 32 array  type\n * @returns {boolean} true if data is not a int 32 array , false otherwise.\n */\nfunction isNotInt32Array ( data ) {\n    return !isInt32Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isInt8Array\n * @desc Export function to validate if a value is a int 8 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a int 8 array\n *\n * @param data {*} The data to check against the int 8 array  type\n * @returns {boolean} true if data is a int 8 array , false otherwise.\n */\nfunction isInt8Array ( data ) {\n    return ( data instanceof Int8Array )\n}\n\n/**\n * Check if given data is not a int 8 array\n *\n * @param data {*} The data to check against the int 8 array  type\n * @returns {boolean} true if data is not a int 8 array , false otherwise.\n */\nfunction isNotInt8Array ( data ) {\n    return !isInt8Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isUint16Array\n * @desc Export function to validate if a value is a unsigned int 16 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a unsigned int 16 array\n *\n * @param data {*} The data to check against the unsigned int 16 array  type\n * @returns {boolean} true if data is a unsigned int 16 array , false otherwise.\n */\nfunction isUint16Array ( data ) {\n    return ( data instanceof Uint16Array )\n}\n\n/**\n * Check if given data is not a unsigned int 16 array\n *\n * @param data {*} The data to check against the unsigned int 16 array  type\n * @returns {boolean} true if data is not a unsigned int 16 array , false otherwise.\n */\nfunction isNotUint16Array ( data ) {\n    return !isUint16Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isUint32Array\n * @desc Export function to validate if a value is a unsigned int 32 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a unsigned int 32 array\n *\n * @param data {*} The data to check against the unsigned int 32 array  type\n * @returns {boolean} true if data is a unsigned int 32 array , false otherwise.\n */\nfunction isUint32Array ( data ) {\n    return ( data instanceof Uint32Array )\n}\n\n/**\n * Check if given data is not a unsigned int 32 array\n *\n * @param data {*} The data to check against the unsigned int 32 array  type\n * @returns {boolean} true if data is not a unsigned int 32 array , false otherwise.\n */\nfunction isNotUint32Array ( data ) {\n    return !isUint32Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isUint8Array\n * @desc Export function to validate if a value is a unsigned int 8 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a unsigned int 8 array\n *\n * @param data {*} The data to check against the unsigned int 8 array  type\n * @returns {boolean} true if data is a unsigned int 8 array , false otherwise.\n */\nfunction isUint8Array ( data ) {\n    return ( data instanceof Uint8Array )\n}\n\n/**\n * Check if given data is not a unsigned int 8 array\n *\n * @param data {*} The data to check against the unsigned int 8 array  type\n * @returns {boolean} true if data is not a unsigned int 8 array , false otherwise.\n */\nfunction isNotUint8Array ( data ) {\n    return !isUint8Array( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/cores/typed-arrays/isUint8ClampedArray\n * @desc Export function to validate if a value is a unsigned clamped int 8 array buffer\n * @example todo\n *\n */\n\n/**\n * Check if given data is a unsigned clamped int 8 array\n *\n * @param data {*} The data to check against the unsigned clamped int 8 array  type\n * @returns {boolean} true if data is a unsigned clamped int 8 array , false otherwise.\n */\nfunction isUint8ClampedArray ( data ) {\n    return ( data instanceof Uint8ClampedArray )\n}\n\n/**\n * Check if given data is not a unsigned clamped int 8 array\n *\n * @param data {*} The data to check against the unsigned clamped int 8 array  type\n * @returns {boolean} true if data is not a unsigned clamped int 8 array , false otherwise.\n */\nfunction isNotUint8ClampedArray ( data ) {\n    return !isUint8ClampedArray( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/block-devices/isBlockDevicePath\n * @description Export function to validate if a value is a block device path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a block device path\n *\n * @param path {string|Buffer|URL} The data to check against the block device path type\n * @returns {boolean} true if path is a block device path, false otherwise\n */\nfunction isBlockDevicePath ( path ) {\n    return fs.statSync( path ).isBlockDevice()\n}\n\n/**\n * Check if given path is not a block device path\n *\n * @param path {string|Buffer|URL} The data to check against the block device path type\n * @returns {boolean} true if path is not a block device path, false otherwise\n */\nfunction isNotBlockDevicePath ( path ) {\n    return !isBlockDevicePath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/paths/isValidPath\n * @description Export function to validate if a value is a valid path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid file path\n *\n * @param data {*} The data to check against the path type\n * @returns {boolean} true if data is a valid path, false otherwise\n */\nfunction isValidPath ( data ) {\n    return fs.existsSync( data )\n}\n\n/**\n * Check if given data is not a valid file path\n *\n * @param data {*} The data to check against the path type\n * @returns {boolean} true if data is a valid path, false otherwise\n */\nfunction isInvalidPath ( data ) {\n    return !isValidPath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/block-devices/isValidBlockDevicePath\n * @description Export function to validate if a value is a valid block device path.\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid block device path\n *\n * @param data {*} The data to check against the block device path type\n * @returns {boolean} true if data is a valid block device path, false otherwise\n */\nfunction isValidBlockDevicePath ( data ) {\n    return ( isValidPath( data ) && isBlockDevicePath( data ) )\n}\n\n/**\n * Check if given data is an invalid block device path\n *\n * @param data {*} The data to check against the block device path type\n * @returns {boolean} true if data is an invalid block device path, false otherwise\n */\nfunction isInvalidBlockDevicePath ( data ) {\n    return !isValidBlockDevicePath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/character-devices/isCharacterDevicePath\n * @description Export function to validate if a value is a character device path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a character device path\n *\n * @param path {string|Buffer|URL} The data to check against the character device path type\n * @returns {boolean} true if path is a character device path, false otherwise\n */\nfunction isCharacterDevicePath ( path ) {\n    return fs.statSync( path ).isCharacterDevice()\n}\n\n/**\n * Check if given path is not a character device path\n *\n * @param path {string|Buffer|URL} The data to check against the character device path type\n * @returns {boolean} true if path is not a character device path, false otherwise\n */\nfunction isNotCharacterDevicePath ( path ) {\n    return !isCharacterDevicePath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/character-devices/isValidCharacterDevicePath\n * @description Export function to validate if a value is a valid character device path\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid character device path\n *\n * @param data {*} The data to check against the character device path type\n * @returns {boolean} true if data is a valid character device path, false otherwise\n */\nfunction isValidCharacterDevicePath ( data ) {\n    return ( isValidPath( data ) && isCharacterDevicePath( data ) )\n}\n\n/**\n * Check if given data is an invalid character device path\n *\n * @param data {*} The data to check against the character device path type\n * @returns {boolean} true if data is an invalid character device path, false otherwise\n */\nfunction isInvalidCharacterDevicePath ( data ) {\n    return !isValidCharacterDevicePath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/directories/isDirectoryPath\n * @description Export function to validate if a value is a directories path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a directory path\n *\n * @param path {string|Buffer|URL} The data to check against the directory path type\n * @returns {boolean} true if path is a directory path, false otherwise\n */\nfunction isDirectoryPath ( path ) {\n    return fs.statSync( path ).isDirectory()\n}\n\n/**\n * Check if given path is a not directory path\n *\n * @param path {string|Buffer|URL} The data to check against the directory path type\n * @returns {boolean} true if path is a not directory path, false otherwise\n */\nfunction isNotDirectoryPath ( path ) {\n    return !isDirectoryPath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/directories/isEmptyDirectory\n * @description Export function to validate if a value is a empty directories\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given directory path is an empty directory\n *\n * @param directoryPath {string|Buffer|URL} The directory path to check the emptiness\n * @returns {boolean} true if directory is empty, false otherwise\n */\nfunction isEmptyDirectory ( directoryPath ) {\n    return ( fs.readdirSync( directoryPath ).length === 0 )\n}\n\n/**\n * Check if given directory path is not an empty directory\n *\n * @param directoryPath {string|Buffer|URL} The directory path to check the emptiness\n * @returns {boolean} true if directory is not empty, false otherwise\n */\nfunction isNotEmptyDirectory ( directoryPath ) {\n    return !isEmptyDirectory( directoryPath )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/directories/isValidDirectoryPath\n * @description Export function to validate if a value is a valid directory path\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid directory path\n *\n * @param data {*} The data to check against the directory path type\n * @returns {boolean} true if data is a valid directory path, false otherwise\n */\nfunction isValidDirectoryPath ( data ) {\n    return ( isValidPath( data ) && isDirectoryPath( data ) )\n}\n\n/**\n * Check if given data is an invalid directory path\n *\n * @param data {*} The data to check against the directory path type\n * @returns {boolean} true if data is an invalid directory path, false otherwise\n */\nfunction isInvalidDirectoryPath ( data ) {\n    return !isValidDirectoryPath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/fifo-pipes/isFIFOPath\n * @description Export function to validate if a value is a fifo pipes path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a fifo path\n *\n * @param path {string|Buffer|URL} The data to check against the fifo path type\n * @returns {boolean} true if path is a fifo path, false otherwise\n */\nfunction isFIFOPath ( path ) {\n    return fs.statSync( path ).isFIFO()\n}\n\n/**\n * Check if given path is not a fifo path\n *\n * @param path {string|Buffer|URL} The data to check against the fifo path type\n * @returns {boolean} true if path is not a fifo path, false otherwise\n */\nfunction isNotFIFOPath ( path ) {\n    return !isFIFOPath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/fifo-pipes/isValidFIFOPath\n * @description Export function to validate if a value is a valid fifo pipes path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid fifo path\n *\n * @param data {*} The data to check against the fifo path type\n * @returns {boolean} true if data is a valid fifo path, false otherwise\n */\nfunction isValidFIFOPath ( data ) {\n    return ( isValidPath( data ) && isFIFOPath( data ) )\n}\n\n/**\n * Check if given data is an invalid fifo path\n *\n * @param data {*} The data to check against the fifo path type\n * @returns {boolean} true if data is an invalid fifo path, false otherwise\n */\nfunction isInvalidFIFOPath ( data ) {\n    return !isValidFIFOPath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/files/isEmptyFile\n * @description Export function to validate if a value is an empty file\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given file path is an empty file more or less a threshold in bytes.\n *\n * @param filePath {string|Buffer|URL} The directory path to check the emptiness\n * @param threshold {number} An amount of byte below which it consider the file as empty ( 0 as default ).\n * @returns {boolean} true if file is empty, false otherwise\n */\nfunction isEmptyFile ( filePath, threshold = 0 ) {\n    return ( fs.statSync( filePath ).size <= threshold )\n}\n\n/**\n * Check if given file path is not an empty file more or less a threshold in bytes.\n *\n * @param filePath {string|Buffer|URL} The directory path to check the emptiness\n * @param threshold {number} An amount of byte above which it consider the file as not empty ( 0 as default ).\n * @returns {boolean} true if file is not empty, false otherwise\n */\nfunction isNotEmptyFile ( filePath, threshold = 0 ) {\n    return ( fs.statSync( filePath ).size > threshold )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/files/isFilePath\n * @description Export function to validate if a value is a file path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a file path\n *\n * @param path {string|Buffer|URL} The data to check against the file path type\n * @returns {boolean} true if path is a file path, false otherwise\n */\nfunction isFilePath ( path ) {\n    return fs.statSync( path ).isFile()\n}\n\n/**\n * Check if given path is not a file path\n *\n * @param path {string|Buffer|URL} The data to check against the file path type\n * @returns {boolean} true if path is not a file path, false otherwise\n */\nfunction isNotFilePath ( path ) {\n    return !isFilePath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/files/isValidFilePath\n * @description Export function to validate if a value is a valid file path\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid file path\n *\n * @param data {*} The data to check against the file path type\n * @returns {boolean} true if data is a valid file path, false otherwise\n */\nfunction isValidFilePath ( data ) {\n    return ( isValidPath( data ) && isFilePath( data ) )\n}\n\n/**\n * Check if given data is an invalid file path\n *\n * @param data {*} The data to check against the file path type\n * @returns {boolean} true if data is an invalid file path, false otherwise\n */\nfunction isInvalidFilePath ( data ) {\n    return !isValidFilePath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/sockets/isSocketPath\n * @description Export function to validate if a value is a socket path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a socket path\n *\n * @param path {string|Buffer|URL} The data to check against the socket path type\n * @returns {boolean} true if path is a socket path, false otherwise\n */\nfunction isSocketPath ( path ) {\n    return fs.statSync( path ).isSocket()\n}\n\n/**\n * Check if given path is not a socket path\n *\n * @param path {string|Buffer|URL} The data to check against the socket path type\n * @returns {boolean} true if path is not a socket path, false otherwise\n */\nfunction isNotSocketPath ( path ) {\n    return !isSocketPath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/sockets/isValidSocketPath\n * @description Export function to validate if a value is a valid socket path\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid socket path\n *\n * @param data {*} The data to check against the socket path type\n * @returns {boolean} true if data is a valid socket path, false otherwise\n */\nfunction isValidSocketPath ( data ) {\n    return ( isValidPath( data ) && isSocketPath( data ) )\n}\n\n/**\n * Check if given data is an invalid socket path\n *\n * @param data {*} The data to check against the socket path type\n * @returns {boolean} true if data is an invalid socket path, false otherwise\n */\nfunction isInvalidSocketPath ( data ) {\n    return !isValidSocketPath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/symbolic-links/isSocketPath\n * @description Export function to validate if a value is a symbolic links path\n *\n * @requires {@link module: [fs]{@link https://nodejs.org/api/fs.html}}\n *\n * @example todo\n *\n */\n\n/**\n * Check if given path is a symbolic link path\n *\n * @param path {string|Buffer|URL} The data to check against the symbolic link path type\n * @returns {boolean} true if path is a symbolic link path, false otherwise\n */\nfunction isSymbolicLinkPath ( path ) {\n    return fs.statSync( path ).isSymbolicLink()\n}\n\n/**\n * Check if given path is not a symbolic link path\n *\n * @param path {string|Buffer|URL} The data to check against the symbolic link path type\n * @returns {boolean} true if path is not a symbolic link path, false otherwise\n */\nfunction isNotSymbolicLinkPath ( path ) {\n    return !isSymbolicLinkPath( path )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/file-system/symbolic-links/isSocketPath\n * @description Export function to validate if a value is a valid symbolic links path\n * @example todo\n *\n */\n\n/**\n * Check if given data is a valid symbolic link path\n *\n * @param data {*} The data to check against the symbolic link path type\n * @returns {boolean} true if data is a valid symbolic link path, false otherwise\n */\nfunction isValidSymbolicLinkPath ( data ) {\n    return ( isValidPath( data ) && isSymbolicLinkPath( data ) )\n}\n\n/**\n * Check if given data is an invalid symbolic link path\n *\n * @param data {*} The data to check against the symbolic link path type\n * @returns {boolean} true if data is an invalid symbolic link path, false otherwise\n */\nfunction isInvalidSymbolicLinkPath ( data ) {\n    return !isValidSymbolicLinkPath( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/physics/constants\n * @desc Export constants about temperatures\n *\n */\n\n/**\n * @const\n * @type {number}\n * @default 0.00000000045\n * @desc This value corresponding to the absolute zero kelvin value\n */\nconst ABSOLUTE_ZERO_KELVIN = 0.00000000045;\n\n/**\n * @const\n * @type {number}\n * @default -273.14999999955\n * @desc This value corresponding to the absolute zero celsius value\n */\nconst ABSOLUTE_ZERO_CELSIUS = -273.14999999955;\n\n/**\n * @const\n * @type {number}\n * @default -459.67\n * @desc This value corresponding to the absolute zero fahrenheit value\n */\nconst ABSOLUTE_ZERO_FAHRENHEIT = -459.67;\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/physics/temperatues\n * @desc Export function to validate if a value is a temperature\n * @example todo\n *\n */\n\n/**\n *\n * @param data\n * @return {boolean|*|boolean}\n */\nfunction isCelsius ( data ) {\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_CELSIUS )\n}\n\n///\n\n/**\n *\n * @param data\n * @return {boolean}\n */\nfunction isNotCelsius ( data ) {\n    return !isCelsius( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/physics/temperatues\n * @desc Export function to validate if a value is a temperature\n * @example todo\n *\n */\n\n/**\n *\n * @param data\n * @return {boolean|*|boolean}\n */\nfunction isFahrenheit ( data ) {\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_FAHRENHEIT )\n}\n\n///\n\n/**\n *\n * @param data\n * @return {boolean}\n */\nfunction isNotFahrenheit ( data ) {\n    return !isFahrenheit( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/physics/temperatues\n * @desc Export function to validate if a value is a temperature\n * @example todo\n *\n */\n\n/**\n *\n * @param data\n * @return {boolean|*|boolean}\n */\nfunction isKelvin ( data ) {\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_KELVIN )\n}\n\n///\n\n/**\n *\n * @param data\n * @return {boolean}\n */\nfunction isNotKelvin ( data ) {\n    return !isKelvin( data )\n}\n\n/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @module sources/physics/temperatues\n * @desc Export function to validate if a value is a temperature\n * @example todo\n *\n */\n\n/**\n *\n * @param data {*}\n * @return {boolean}\n */\nfunction isTemperature ( data ) {\n    return ( isKelvin( data ) || isCelsius( data ) || isFahrenheit( data ) )\n}\n\n///\n\n/**\n *\n * @param data {*}\n * @return {boolean}\n */\nfunction isNotTemperature ( data ) {\n    return ( isNotKelvin( data ) && isNotCelsius( data ) && isNotFahrenheit( data ) )\n}\n\nexport { ABSOLUTE_ZERO_CELSIUS, ABSOLUTE_ZERO_FAHRENHEIT, ABSOLUTE_ZERO_KELVIN, validatorInstance as Validator, isArray, isArrayBuffer, isArrayOfArray, isArrayOfMultiElement, isArrayOfNull, isArrayOfObject, isArrayOfSingleElement, isArrayOfString, isArrayOfUndefined, isBigInt64Array, isBigUint64Array, isBlankString, isBlockDevicePath, isBoolean, isCelsius, isCharacterDevicePath, isDefined, isDirectoryPath, isEmpty, isEmptyArray, isEmptyDirectory, isEmptyFile, isEmptyObject, isEmptyString, isFIFOPath, isFahrenheit, isFalse, isFilePath, isFinite, isFloat, isFloat32Array, isFloat64Array, isFunction, isInfinite, isInfiniteNegative, isInfinitePositive, isInt16Array, isInt32Array, isInt8Array, isInteger, isInvalidBlockDevicePath, isInvalidCharacterDevicePath, isInvalidDirectoryPath, isInvalidFIFOPath, isInvalidFilePath, isInvalidPath, isInvalidSocketPath, isInvalidSymbolicLinkPath, isKelvin, isMaxNegative, isMaxPositive, isMaxSafeInteger, isMinNegative, isMinPositive, isMinSafeInteger, isNaN, isNotArray, isNotArrayBuffer, isNotArrayOfArray, isNotArrayOfNull, isNotArrayOfObject, isNotArrayOfString, isNotArrayOfUndefined, isNotBigInt64Array, isNotBigUint64Array, isNotBlankString, isNotBlockDevicePath, isNotBoolean, isNotCelsius, isNotCharacterDevicePath, isNotDefined, isNotDirectoryPath, isNotEmpty, isNotEmptyArray, isNotEmptyDirectory, isNotEmptyFile, isNotEmptyObject, isNotEmptyString, isNotFIFOPath, isNotFahrenheit, isNotFilePath, isNotFloat32Array, isNotFloat64Array, isNotFunction, isNotInt16Array, isNotInt32Array, isNotInt8Array, isNotKelvin, isNotNull, isNotNumber, isNotObject, isNotSocketPath, isNotString, isNotSymbol, isNotSymbolicLinkPath, isNotTemperature, isNotUint16Array, isNotUint32Array, isNotUint8Array, isNotUint8ClampedArray, isNotUndefined, isNull, isNumber, isNumberNegative, isNumberPositive, isObject, isSocketPath, isString, isSymbol, isSymbolicLinkPath, isTemperature, isTrue, isUint16Array, isUint32Array, isUint8Array, isUint8ClampedArray, isUndefined, isValidBlockDevicePath, isValidCharacterDevicePath, isValidDirectoryPath, isValidFIFOPath, isValidFilePath, isValidPath, isValidSocketPath, isValidSymbolicLinkPath, isZero, isZeroNegative, isZeroPositive };\n//# sourceMappingURL=itee-validators.esm.js.map\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/cores/objects\r\n * @description Export the utilities methods about objects\r\n */\r\n\r\nimport {\r\n    isNotDefined,\r\n    isObject\r\n} from 'itee-validators'\r\n\r\nexport function uniq ( a ) {\r\n\r\n    const seen = {}\r\n    return a.filter( item => Object.prototype.hasOwnProperty.call( seen, item ) ? false : ( seen[ item ] = true ) )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param target\r\n * @param source\r\n * @return {*}\r\n */\r\nexport function extend ( target, source ) {\r\n\r\n    let output = undefined\r\n\r\n    if ( isObject( target ) && isNotDefined( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n    } else if ( isNotDefined( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, source )\r\n\r\n    } else if ( isObject( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n        const keys = Object.keys( source )\r\n\r\n        for ( let i = 0, n = keys.length ; i < n ; ++i ) {\r\n\r\n            let key = keys[ i ]\r\n\r\n            if ( isObject( source[ key ] ) ) {\r\n\r\n                if ( key in target ) {\r\n\r\n                    output[ key ] = extend( target[ key ], source[ key ] )\r\n\r\n                } else {\r\n\r\n                    Object.assign( output, { [ key ]: source[ key ] } )\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                Object.assign( output, { [ key ]: source[ key ] } )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        output = null\r\n\r\n    }\r\n\r\n    return output\r\n\r\n}\r\n\r\n/**\r\n * Remove old inheritance stuff due to es6 class !\r\n */\r\nexport function serializeObject () {\r\n\r\n    //    var object = {}\r\n    //    var a = this.serializeArray()\r\n    //\r\n    //    $.each( a, function () {\r\n    //        if ( object[ this.name ] !== undefined ) {\r\n    //            if ( !object[ this.name ].push ) {\r\n    //                object[ this.name ] = [ object[ this.name ] ]\r\n    //            }\r\n    //            object[ this.name ].push( this.value || '' )\r\n    //        } else {\r\n    //            object[ this.name ] = this.value || ''\r\n    //        }\r\n    //    } )\r\n    //\r\n    //    return object\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param ChildClass\r\n * @param ParentClassOrObject\r\n * @return {*}\r\n */\r\nexport function extendObject ( ChildClass, ParentClassOrObject ) {\r\n\r\n    if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Function ) {\r\n\r\n        // Normal Inheritance\r\n        ChildClass.prototype = new ParentClassOrObject()\r\n        ChildClass.prototype.parent = ParentClassOrObject.prototype\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Object ) {\r\n\r\n        // Pure Virtual Inheritance\r\n        ChildClass.prototype = ParentClassOrObject\r\n        ChildClass.prototype.parent = ParentClassOrObject\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Object ) {\r\n\r\n        //Object Concatenation Inheritance\r\n        for ( let attribute in ParentClassOrObject ) {\r\n\r\n            if ( Object.prototype.hasOwnProperty.call( ChildClass, attribute ) ) { // We are sure that obj[key] belongs to the object and was not inherited.\r\n\r\n                if ( ParentClassOrObject[ attribute ].constructor === Object || ParentClassOrObject[ attribute ].constructor === Array ) {\r\n\r\n                    ChildClass[ attribute ] = extendObject( ChildClass[ attribute ], ParentClassOrObject[ attribute ] )\r\n\r\n                } else {\r\n\r\n                    ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else if ( ChildClass.constructor === Array && ParentClassOrObject.constructor === Array ) {\r\n\r\n        ChildClass = ChildClass.concat( ParentClassOrObject )\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Array ||\r\n        ChildClass.constructor === Array && ParentClassOrObject.constructor === Object ) {\r\n\r\n        throw new Error( 'Cannot perform extend of object with an array' )\r\n\r\n    } else {\r\n\r\n        throw new Error( 'Cannot perform extend given parameters...' )\r\n\r\n    }\r\n\r\n    return ChildClass\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param particles\r\n * @param path\r\n * @param interval\r\n */\r\nexport function createInterval ( particles, path, interval ) {\r\n\r\n    var globalOffset = 0\r\n\r\n    setInterval( function () {\r\n\r\n        var moveOffset             = 0.1\r\n        var DELTA_BETWEEN_PARTICLE = 1 // meter\r\n\r\n        if ( globalOffset >= DELTA_BETWEEN_PARTICLE ) {\r\n            globalOffset = 0\r\n        } else if ( globalOffset + moveOffset > DELTA_BETWEEN_PARTICLE ) { // Avoid final gap jump before new \"loop\"\r\n            globalOffset = DELTA_BETWEEN_PARTICLE\r\n        } else {\r\n            globalOffset += moveOffset\r\n        }\r\n\r\n        var pathLength       = path.getLength()\r\n        var localOffset      = globalOffset\r\n        var normalizedOffset = undefined\r\n        var particle         = undefined\r\n        var newPosition      = undefined\r\n\r\n        for ( var i = 0, numberOfParticles = particles.children.length ; i < numberOfParticles ; i++ ) {\r\n\r\n            particle = particles.children[ i ]\r\n            normalizedOffset = localOffset / pathLength\r\n\r\n            // End of path ( last particle could go to void, but got an error with getPointAt)\r\n            if ( normalizedOffset > 1 ) {\r\n                normalizedOffset = 0\r\n            }\r\n\r\n            newPosition = path.getPointAt( normalizedOffset )\r\n            newPosition.y += 0.1\r\n\r\n            particle.position.copy( newPosition )\r\n\r\n            localOffset += DELTA_BETWEEN_PARTICLE\r\n\r\n        }\r\n\r\n    }, interval )\r\n\r\n}\r\n\r\nexport function toEnum ( enumValues ) {\r\n\r\n    return Object.freeze( Object.defineProperty( enumValues, 'toString', {\r\n        configurable: false,\r\n        enumerable:   false,\r\n        writable:     false,\r\n        value:        function _toString () {\r\n\r\n            const keys = Object.keys( this )\r\n            let result = ''\r\n            for ( let index = 0, numberOfValues = keys.length ; index < numberOfValues ; index++ ) {\r\n                result += `${keys[ index ]}, `\r\n            }\r\n            result = result.slice( 0, -2 )\r\n            return result\r\n\r\n        }\r\n    } ) )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/cores/strings\r\n * @description Export the utilities methods about strings\r\n *\r\n */\r\n\r\n/**\r\n * Set the first char to upper case like a classname\r\n * @param word\r\n * @returns {string}\r\n */\r\nexport function classNameify ( word ) {\r\n    return word.charAt( 0 ).toUpperCase() + word.slice( 1 )\r\n}\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n */\r\nexport let diacriticsMap = ( () => {\r\n\r\n    /*\r\n     Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     you may not use this file except in compliance with the License.\r\n     You may obtain a copy of the License at\r\n\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n     Unless required by applicable law or agreed to in writing, software\r\n     distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     See the License for the specific language governing permissions and\r\n     limitations under the License.\r\n     */\r\n\r\n    const defaultDiacriticsRemovalMap = [\r\n        {\r\n            'base':    'A',\r\n            'letters': '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'\r\n        },\r\n        {\r\n            'base':    'AA',\r\n            'letters': '\\uA732'\r\n        },\r\n        {\r\n            'base':    'AE',\r\n            'letters': '\\u00C6\\u01FC\\u01E2'\r\n        },\r\n        {\r\n            'base':    'AO',\r\n            'letters': '\\uA734'\r\n        },\r\n        {\r\n            'base':    'AU',\r\n            'letters': '\\uA736'\r\n        },\r\n        {\r\n            'base':    'AV',\r\n            'letters': '\\uA738\\uA73A'\r\n        },\r\n        {\r\n            'base':    'AY',\r\n            'letters': '\\uA73C'\r\n        },\r\n        {\r\n            'base':    'B',\r\n            'letters': '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'\r\n        },\r\n        {\r\n            'base':    'C',\r\n            'letters': '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'\r\n        },\r\n        {\r\n            'base':    'D',\r\n            'letters': '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779\\u00D0'\r\n        },\r\n        {\r\n            'base':    'DZ',\r\n            'letters': '\\u01F1\\u01C4'\r\n        },\r\n        {\r\n            'base':    'Dz',\r\n            'letters': '\\u01F2\\u01C5'\r\n        },\r\n        {\r\n            'base':    'E',\r\n            'letters': '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'\r\n        },\r\n        {\r\n            'base':    'F',\r\n            'letters': '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'\r\n        },\r\n        {\r\n            'base':    'G',\r\n            'letters': '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'\r\n        },\r\n        {\r\n            'base':    'H',\r\n            'letters': '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'\r\n        },\r\n        {\r\n            'base':    'I',\r\n            'letters': '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'\r\n        },\r\n        {\r\n            'base':    'J',\r\n            'letters': '\\u004A\\u24BF\\uFF2A\\u0134\\u0248'\r\n        },\r\n        {\r\n            'base':    'K',\r\n            'letters': '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'\r\n        },\r\n        {\r\n            'base':    'L',\r\n            'letters': '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'\r\n        },\r\n        {\r\n            'base':    'LJ',\r\n            'letters': '\\u01C7'\r\n        },\r\n        {\r\n            'base':    'Lj',\r\n            'letters': '\\u01C8'\r\n        },\r\n        {\r\n            'base':    'M',\r\n            'letters': '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'\r\n        },\r\n        {\r\n            'base':    'N',\r\n            'letters': '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'\r\n        },\r\n        {\r\n            'base':    'NJ',\r\n            'letters': '\\u01CA'\r\n        },\r\n        {\r\n            'base':    'Nj',\r\n            'letters': '\\u01CB'\r\n        },\r\n        {\r\n            'base':    'O',\r\n            'letters': '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'\r\n        },\r\n        {\r\n            'base':    'OI',\r\n            'letters': '\\u01A2'\r\n        },\r\n        {\r\n            'base':    'OO',\r\n            'letters': '\\uA74E'\r\n        },\r\n        {\r\n            'base':    'OU',\r\n            'letters': '\\u0222'\r\n        },\r\n        {\r\n            'base':    'OE',\r\n            'letters': '\\u008C\\u0152'\r\n        },\r\n        {\r\n            'base':    'oe',\r\n            'letters': '\\u009C\\u0153'\r\n        },\r\n        {\r\n            'base':    'P',\r\n            'letters': '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'\r\n        },\r\n        {\r\n            'base':    'Q',\r\n            'letters': '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'\r\n        },\r\n        {\r\n            'base':    'R',\r\n            'letters': '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'\r\n        },\r\n        {\r\n            'base':    'S',\r\n            'letters': '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'\r\n        },\r\n        {\r\n            'base':    'T',\r\n            'letters': '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'\r\n        },\r\n        {\r\n            'base':    'TZ',\r\n            'letters': '\\uA728'\r\n        },\r\n        {\r\n            'base':    'U',\r\n            'letters': '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'\r\n        },\r\n        {\r\n            'base':    'V',\r\n            'letters': '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'\r\n        },\r\n        {\r\n            'base':    'VY',\r\n            'letters': '\\uA760'\r\n        },\r\n        {\r\n            'base':    'W',\r\n            'letters': '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'\r\n        },\r\n        {\r\n            'base':    'X',\r\n            'letters': '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'\r\n        },\r\n        {\r\n            'base':    'Y',\r\n            'letters': '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'\r\n        },\r\n        {\r\n            'base':    'Z',\r\n            'letters': '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'\r\n        },\r\n        {\r\n            'base':    'a',\r\n            'letters': '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'\r\n        },\r\n        {\r\n            'base':    'aa',\r\n            'letters': '\\uA733'\r\n        },\r\n        {\r\n            'base':    'ae',\r\n            'letters': '\\u00E6\\u01FD\\u01E3'\r\n        },\r\n        {\r\n            'base':    'ao',\r\n            'letters': '\\uA735'\r\n        },\r\n        {\r\n            'base':    'au',\r\n            'letters': '\\uA737'\r\n        },\r\n        {\r\n            'base':    'av',\r\n            'letters': '\\uA739\\uA73B'\r\n        },\r\n        {\r\n            'base':    'ay',\r\n            'letters': '\\uA73D'\r\n        },\r\n        {\r\n            'base':    'b',\r\n            'letters': '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'\r\n        },\r\n        {\r\n            'base':    'c',\r\n            'letters': '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'\r\n        },\r\n        {\r\n            'base':    'd',\r\n            'letters': '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'\r\n        },\r\n        {\r\n            'base':    'dz',\r\n            'letters': '\\u01F3\\u01C6'\r\n        },\r\n        {\r\n            'base':    'e',\r\n            'letters': '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'\r\n        },\r\n        {\r\n            'base':    'f',\r\n            'letters': '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'\r\n        },\r\n        {\r\n            'base':    'g',\r\n            'letters': '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'\r\n        },\r\n        {\r\n            'base':    'h',\r\n            'letters': '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'\r\n        },\r\n        {\r\n            'base':    'hv',\r\n            'letters': '\\u0195'\r\n        },\r\n        {\r\n            'base':    'i',\r\n            'letters': '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'\r\n        },\r\n        {\r\n            'base':    'j',\r\n            'letters': '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'\r\n        },\r\n        {\r\n            'base':    'k',\r\n            'letters': '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'\r\n        },\r\n        {\r\n            'base':    'l',\r\n            'letters': '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'\r\n        },\r\n        {\r\n            'base':    'lj',\r\n            'letters': '\\u01C9'\r\n        },\r\n        {\r\n            'base':    'm',\r\n            'letters': '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'\r\n        },\r\n        {\r\n            'base':    'n',\r\n            'letters': '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'\r\n        },\r\n        {\r\n            'base':    'nj',\r\n            'letters': '\\u01CC'\r\n        },\r\n        {\r\n            'base':    'o',\r\n            'letters': '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'\r\n        },\r\n        {\r\n            'base':    'oi',\r\n            'letters': '\\u01A3'\r\n        },\r\n        {\r\n            'base':    'ou',\r\n            'letters': '\\u0223'\r\n        },\r\n        {\r\n            'base':    'oo',\r\n            'letters': '\\uA74F'\r\n        },\r\n        {\r\n            'base':    'p',\r\n            'letters': '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'\r\n        },\r\n        {\r\n            'base':    'q',\r\n            'letters': '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'\r\n        },\r\n        {\r\n            'base':    'r',\r\n            'letters': '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'\r\n        },\r\n        {\r\n            'base':    's',\r\n            'letters': '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'\r\n        },\r\n        {\r\n            'base':    't',\r\n            'letters': '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'\r\n        },\r\n        {\r\n            'base':    'tz',\r\n            'letters': '\\uA729'\r\n        },\r\n        {\r\n            'base':    'u',\r\n            'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'\r\n        },\r\n        {\r\n            'base':    'v',\r\n            'letters': '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'\r\n        },\r\n        {\r\n            'base':    'vy',\r\n            'letters': '\\uA761'\r\n        },\r\n        {\r\n            'base':    'w',\r\n            'letters': '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'\r\n        },\r\n        {\r\n            'base':    'x',\r\n            'letters': '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'\r\n        },\r\n        {\r\n            'base':    'y',\r\n            'letters': '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'\r\n        },\r\n        {\r\n            'base':    'z',\r\n            'letters': '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'\r\n        }\r\n    ]\r\n\r\n    let map = {}\r\n\r\n    for ( let i = 0 ; i < defaultDiacriticsRemovalMap.length ; i++ ) {\r\n\r\n        const letters = defaultDiacriticsRemovalMap [ i ].letters\r\n\r\n        for ( let j = 0 ; j < letters.length ; j++ ) {\r\n\r\n            map[ letters[ j ] ] = defaultDiacriticsRemovalMap[ i ].base\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return map\r\n\r\n} )()\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n *\r\n * @param string\r\n */\r\nexport function removeDiacritics ( string ) {\r\n\r\n    // eslint-disable-next-line\r\n    return string.replace( /[^\\u0000-\\u007E]/g, function ( a ) {\r\n        return diacriticsMap[ a ] || a\r\n    } )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/file-system/files\r\n * @description This is the files main export entry point.\r\n * It expose all exports of the files validators.\r\n *\r\n */\r\n\r\nimport fs                from 'fs'\r\nimport path              from 'path'\r\nimport { isArray, isInvalidPath }       from 'itee-validators'\r\n\r\nfunction getPathsUnder ( directoryPath ) {\r\n    return fs.readdirSync( directoryPath )\r\n}\r\n\r\n/**\r\n * Allow to search all files under filePaths in a recursive way\r\n *\r\n * @param {Array.<string>|string} filePaths - The files paths where search files\r\n * @returns {Array} - The paths of finded files\r\n * @private\r\n */\r\nfunction getFilesPathsUnder ( paths ) {\r\n\r\n    const _paths = ( isArray( paths ) ) ? paths : [ paths ]\r\n    let files    = []\r\n\r\n    for ( let pathIndex = 0, numberOfPaths = _paths.length ; pathIndex < numberOfPaths ; pathIndex++ ) {\r\n\r\n        const localPath = _paths[ pathIndex ]\r\n\r\n        if ( isInvalidPath( localPath ) ) {\r\n            console.error( `The path \"${localPath}\" is not valid !` )\r\n            continue\r\n        }\r\n\r\n        const stats = fs.statSync( localPath )\r\n        if ( stats.isFile() ) {\r\n\r\n            files.push( localPath )\r\n\r\n        } else if ( stats.isDirectory() ) {\r\n\r\n            const subPaths      = getPathsUnder( localPath )\r\n            const subFilesPaths = subPaths.forEach( ( name ) => { getFilesPathsUnder( path.resolve( localPath, name ) ) } )\r\n            Array.prototype.push.apply( files, subFilesPaths )\r\n\r\n        } else {\r\n\r\n            // Ignoring block device, character device, symbolic link, fifo, and socket\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return files\r\n\r\n}\r\n\r\nexport { getFilesPathsUnder }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/geomathics/trigonometries\r\n */\r\n\r\nexport const PI   = Math.PI\r\nexport const PI_2 = Math.PI / 2\r\nexport const PI_4 = Math.PI / 4\r\n\r\nexport const DEG_TO_RAD = ( PI / 180 )\r\nexport const RAD_TO_DEG = ( 180 / PI )\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function degreesToRadians ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function degreesFromRadians ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function radiansToDegrees ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function radiansFromDegrees ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n// PROJECTION 2D/3D\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getYaw ( vector ) {\r\n    return -Math.atan2( vector.x, vector.z )\r\n}\r\n\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getPitch ( vector ) {\r\n    return Math.asin( vector.y )\r\n}\r\n\r\n/**\r\n *\r\n * @param vectorDir\r\n * @return {{yaw: number, pitch: number}}\r\n */\r\nexport function convertWebGLRotationToTopogicalYawPitch ( vectorDir ) {\r\n\r\n    function getYaw ( vector ) {\r\n        return Math.atan2( vector.y, vector.x )\r\n    }\r\n\r\n    function getPitch ( vector ) {\r\n        return Math.asin( vector.z )\r\n    }\r\n\r\n    const topoVectorDir = vectorDir //convertWebglVectorToTopologicVector( vectorDir )\r\n\r\n    return {\r\n        yaw:   -( radiansToDegrees( getYaw( topoVectorDir ) ) - 90 ),\r\n        pitch: radiansToDegrees( getPitch( topoVectorDir ) )\r\n    }\r\n\r\n}\r\n\r\n///**\r\n// * TRIGONOMETRIC CIRCLE CONCEPT WITH INTEGRATED TIMER\r\n// *\r\n// * Provide position on any given referential (starting position)\r\n// * this position is updated every tick on a trigonometric circle of rayon (radius)\r\n// * and give new position in px about this point in current referential.\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCircle ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.options = $.extend( {}, TTrigonometricCircle.DEFAULT_SETTINGS, settings );\r\n//\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCircle, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCircle.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _   = this;\r\n//        _.angle = (increment ? _.angle + increment : _.angle + 1);\r\n//        if ( _.angle >= 360 ) {\r\n//            _.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.angle ) ) * _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.angle ) ) * _.radius;\r\n//    }\r\n//\r\n//} )\r\n//\r\n///////////\r\n//\r\n///**\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCone ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.model = $.extend( {}, TTrigonometricCone.DEFAULT_SETTINGS, settings );\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCone, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        height:      10,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCone.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _         = this;\r\n//        _.model.angle = (increment ? _.model.angle + increment : _.model.angle + 1);\r\n//        if ( _.model.angle >= 360 ) {\r\n//            _.model.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getCosinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ) );\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getSinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ));\r\n//    }\r\n//\r\n//} )\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module sources/physics/temperatures\r\n * @description Export the utilities methods about temperatures\r\n * @requires {@link module:sources/cores/numbers}\r\n */\r\n\r\nimport {\r\n    isNotEmpty,\r\n    isNotTemperature,\r\n    isNumber\r\n} from 'itee-validators'\r\n\r\nexport const FAHRENHEIT_CELSIUS_COEFFICIENT = 1.8\r\nexport const FAHRENHEIT_CELSIUS_CONSTANTE   = 32.0\r\nexport const KELVIN_CELSIUS_CONSTANTE       = 273.14999999955\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToKelvin ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( celsius + KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToFahrenheit ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( celsius * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToCelsius ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToKelvin ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( ( fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT ) + KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToCelsius ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( kelvin - KELVIN_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToFahrenheit ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2 )\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ( ( kelvin - KELVIN_CELSIUS_CONSTANTE ) * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE ).toFixed( _precisionPointAt )\r\n\r\n}\r\n"],"names":[],"mappings":"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"}