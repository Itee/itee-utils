{"version":3,"file":"itee-utils.cjs.js","sources":["../sources/cores/arrays.js","../sources/cores/booleans.js","../sources/cores/functions.js","../sources/cores/numbers.js","../node_modules/itee-validators/builds/itee-validators.esm.js","../sources/cores/objects.js","../sources/cores/strings.js","../sources/cores/symbols.js","../sources/cores/voids.js","../sources/cores/_cores.js","../sources/fs/files.js","../sources/fs/_fs.js","../sources/geomathics/trigonometries.js","../sources/geomathics/_geomathics.js","../sources/physics/temperatures.js","../sources/physics/_physics.js","../sources/testings/_testings.js","../sources/itee-utils.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/arrays\r\n * @description Export the utilities methods about Arrays\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/booleans\r\n * @description Export the utilities methods about booleans\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/functions\r\n * @description Export the utilities methods about functions\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/numbers\r\n * @description Export the utilities methods about numbers\r\n *\r\n */\r\n\r\n/**\r\n * Returns a random number between min (inclusive) and max (exclusive)\r\n */\r\nexport function getRandomArbitrary ( min = 0, max = 1 ) {\r\n    return Math.random() * (max - min) + min\r\n}\r\n\r\n/**\r\n * Returns a random integer between min (inclusive) and max (inclusive)\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nexport function getRandomInt ( min = 0, max = 1 ) {\r\n    return (Math.floor( Math.random() * (max - min + 1) ) + min)\r\n}\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/voids\r\n * @desc Export the validation methods about voids notions\r\n */\r\n\r\n/**\r\n * Check if given data is null\r\n *\r\n * @param data {any} The data to check against the nullity\r\n * @returns {boolean} true if data is null, false otherwise.\r\n */\r\nfunction isNull ( data ) {\r\n    return (data === null)\r\n}\r\n\r\n/**\r\n * Check if given data is not null\r\n *\r\n * @param data {any} The data to check against the nullity\r\n * @returns {boolean} true if data is not null, false otherwise.\r\n */\r\nfunction isNotNull ( data ) {\r\n    return !isNull( data )\r\n}\r\n\r\n/**\r\n * Check if given data is undefined\r\n *\r\n * @param data {any} The data to check against the undefiness\r\n * @returns {boolean} true if data is undefined, false otherwise.\r\n */\r\nfunction isUndefined ( data ) {\r\n    return (typeof data === 'undefined')\r\n}\r\n\r\n/**\r\n * Check if given data is defined\r\n *\r\n * @param data {any} The data to check against the undefiness\r\n * @returns {boolean} true if data is defined, false otherwise.\r\n */\r\nfunction isNotUndefined ( data ) {\r\n    return (typeof data !== 'undefined')\r\n}\r\n\r\n/**\r\n * Check if given data is null or undefined\r\n *\r\n * @param data {any} The data to check against the existence\r\n * @returns {boolean} true if data is null or undefined, false otherwise.\r\n */\r\nfunction isNullOrUndefined ( data ) {\r\n    return (isNull( data ) || isUndefined( data ))\r\n}\r\n\r\n/**\r\n * Check if given data is not null and not undefined\r\n *\r\n * @param data {any} The data to check against the existence\r\n * @returns {boolean} true if data is not null and not undefined, false otherwise.\r\n */\r\nfunction isDefined ( data ) {\r\n    return (isNotNull( data ) && isNotUndefined( data ))\r\n}\r\n\r\n/**\r\n * Check emptiness of given data\r\n *\r\n * See: https://stackoverflow.com/questions/4346186/how-to-determine-if-a-function-is-empty\r\n *\r\n * @param data {any} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as empty, false otherwise.\r\n */\r\nfunction isEmpty ( data ) {\r\n\r\n    // null and undefined are consider as \"empty\"\r\n    if ( data === null ) {\r\n        return true;\r\n    }\r\n    if ( data === undefined ) {\r\n        return true;\r\n    }\r\n\r\n    // Assume if it has a length property with a non-zero value\r\n    // that that property is correct.\r\n    if ( data.length > 0 ) {\r\n        return false;\r\n    }\r\n    if ( data.length === 0 ) {\r\n        return true;\r\n    }\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    for ( let key in data ) {\r\n        if ( Object.prototype.hasOwnProperty.call( data, key ) ) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Check fullness of given data\r\n *\r\n * @param data {any} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as not empty, false otherwise.\r\n */\r\nfunction isNotEmpty ( data ) {\r\n    return !isEmpty( data );\r\n}\r\n\r\n// Todo: to remove\r\n\r\n/**\r\n * Check if given data is null or undefined\r\n *\r\n * @alias isNullOrUndefined\r\n * @param data {any} The data to check against the existence\r\n * @returns {boolean} true if data is null or undefined, false otherwise.\r\n */\r\nfunction no ( data ) {\r\n    return ( (data === null) || (typeof data === 'undefined') )\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/strings\r\n * @desc Export the validation methods about strings\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a string\r\n *\r\n * @param data {any} The data to check against the string type\r\n * @returns {boolean} true if data is a string, false otherwise.\r\n */\r\nfunction isString ( data ) {\r\n    return (typeof data === 'string')\r\n}\r\n\r\n/**\r\n * Check if given data is not a string\r\n *\r\n * @param data {any} The data to check against the string type\r\n * @returns {boolean} true if data is not a string, false otherwise.\r\n */\r\nfunction isNotString ( data ) {\r\n    return (typeof data !== 'string')\r\n}\r\n\r\n/**\r\n * Check if given data is an empty string\r\n *\r\n * @param data {any} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is an empty string, false otherwise.\r\n */\r\nfunction isEmptyString ( data ) {\r\n\r\n    console.assert( isString( data ), 'Expect a string !' );\r\n\r\n    return (data.length === 0)\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty string\r\n *\r\n * @param data {any} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is not an empty string, false otherwise.\r\n */\r\nfunction isNotEmptyString ( data ) {\r\n\r\n    if ( isNotString( data ) ) {\r\n        throw new TypeError( 'Expect a string !' )\r\n    }\r\n\r\n    return (data.length > 0)\r\n\r\n}\r\n\r\n/**\r\n * Check if the given data is a blank string\r\n *\r\n * @param data {any} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is a blank string, false otherwise.\r\n */\r\nfunction isBlankString ( data ) {\r\n\r\n    if ( isEmptyString( data ) ) {\r\n        throw new TypeError( 'Expect a non empty string !' )\r\n    }\r\n\r\n    return ( !/\\S/.test( data ) )\r\n}\r\n\r\n/**\r\n * Check if the given data is not a blank string\r\n *\r\n * @param data {any} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is not a blank string, false otherwise.\r\n */\r\nfunction isNotBlankString ( data ) {\r\n    return ( isNotEmptyString( data ) && /\\S/.test( data ) )\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/objects\r\n * @desc Export the validation methods about objects\r\n * @requires {@link module:sources/cores/voids/isNull}\r\n * @requires {@link module:sources/cores/voids/isEmpty}\r\n */\r\n\r\n/**\r\n * Check if given data is an object\r\n *\r\n * @param data {any} The data to check against the object type\r\n * @returns {boolean} true if data is object, false otherwise\r\n */\r\nfunction isObject ( data ) {\r\n    return ( isNotNull( data ) && (typeof data === 'object') && !Array.isArray( data ) )\r\n}\r\n\r\n/**\r\n * Check if given data is not an object\r\n *\r\n * @param data {any} The data to check against the object type\r\n * @returns {boolean} true if data is not an object, false otherwise\r\n */\r\nfunction isNotObject ( data ) {\r\n    return !isObject( data )\r\n}\r\n\r\n/**\r\n * Check if given data is an empty object\r\n *\r\n * @param data {any} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is an empty object, false otherwise\r\n */\r\nfunction isEmptyObject ( data ) {\r\n    return ( isObject( data ) && isEmpty( data ) )\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty object\r\n *\r\n * @param data {any} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is not an empty object, false otherwise\r\n */\r\nfunction isNotEmptyObject ( data ) {\r\n    return ( isObject( data ) && isNotEmpty( data ) )\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/arrays\r\n * @desc Export the validation methods about Arrays\r\n * @requires {@link module:sources/cores/voids}\r\n * @requires {@link module:sources/cores/strings}\r\n * @requires {@link module:sources/cores/objects}\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array\r\n *\r\n * @param data {any} The data to check against the array type\r\n * @returns {boolean} true if data is array, false otherwise\r\n */\r\nfunction isArray ( data ) {\r\n    return Array.isArray( data )\r\n}\r\n\r\n/**\r\n * Check if given data is not an array\r\n *\r\n * @param data {any} The data to check against the array type\r\n * @returns {boolean} true if data is not array, false otherwise\r\n */\r\nfunction isNotArray ( data ) {\r\n    return !isArray( data )\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are null\r\n *\r\n * @param data {any} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are null, false otherwise\r\n */\r\nfunction isArrayOfNull ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isNotNull( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not null\r\n *\r\n * @param data {any} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are not null, false otherwise\r\n */\r\nfunction isNotArrayOfNull ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isNull( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is an empty array\r\n *\r\n * @param data {any} The data to check against the empty array\r\n * @returns {boolean} true if data is an empty array, false otherwise\r\n */\r\nfunction isEmptyArray ( data ) {\r\n    return ( isArray( data ) && isEmpty( data ) )\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array\r\n *\r\n * @param data {any} The data to check against the empty array\r\n * @returns {boolean} true if data is not an empty array, false otherwise\r\n */\r\nfunction isNotEmptyArray ( data ) {\r\n    return ( isArray( data ) && isNotEmpty( data ) )\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are undefined\r\n *\r\n * @param data {any} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are undefined, false otherwise\r\n */\r\nfunction isArrayOfUndefined ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isDefined( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are defined\r\n *\r\n * @param data {any} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are defined, false otherwise\r\n */\r\nfunction isNotArrayOfUndefined ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isUndefined( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is an array of array\r\n *\r\n * @param data {any} The data to check against the array of array type\r\n * @returns {boolean} true if data is an array of array, false otherwise\r\n */\r\nfunction isArrayOfArray ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isNotArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an array of array\r\n *\r\n * @param data {any} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an array of array, false otherwise\r\n */\r\nfunction isNotArrayOfArray ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are string\r\n *\r\n * @param data {any} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are string, false otherwise\r\n */\r\nfunction isArrayOfString ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isNotString( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not string\r\n *\r\n * @param data {any} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are not string, false otherwise\r\n */\r\nfunction isNotArrayOfString ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isString( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is an array with a single value\r\n *\r\n * @param data {any} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with a single value, false otherwise\r\n */\r\nfunction isArrayOfSingleElement ( data ) {\r\n\r\n    return ( isArray( data ) && data.length === 1 )\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is an array with multiples values\r\n *\r\n * @param data {any} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with multiples values, false otherwise\r\n */\r\nfunction isArrayOfMultiElement ( data ) {\r\n\r\n    return ( isArray( data ) && data.length > 1 )\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is an array where all values are of object type\r\n *\r\n * @param data {any} The data to check against the array of object type\r\n * @returns {boolean} true if data is an array where all values are of object type, false otherwise\r\n */\r\nfunction isArrayOfObject ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isNotObject( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * Check if given data is not an array where all values are of object type\r\n *\r\n * @param data {any} The data to check against the array of object type\r\n * @returns {boolean} true if data is not an array where all values are of object type, false otherwise\r\n */\r\nfunction isNotArrayOfObject ( data ) {\r\n\r\n    if ( isEmptyArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( isObject( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/booleans\r\n * @desc Export the validation methods about booleans\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a boolean\r\n *\r\n * @param data {any} The data to check against the booleaness\r\n * @returns {boolean} true if data is a boolean, false otherwise.\r\n */\r\nfunction isBoolean ( data ) {\r\n    return (typeof data === 'boolean')\r\n}\r\n\r\n/**\r\n * Check if given data is not a boolean\r\n *\r\n * @param data {any} The data to check against the booleaness\r\n * @returns {boolean} true if data is not a boolean, false otherwise.\r\n */\r\nfunction isNotBoolean ( data ) {\r\n    return (typeof data !== 'boolean')\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/functions\r\n * @desc Export the validation methods about functions\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a function\r\n *\r\n * @param data {any} The data to check against the functionality\r\n * @returns {boolean} true if data is a function, false otherwise.\r\n */\r\nfunction isFunction ( data ) {\r\n    return (typeof data === \"function\")\r\n}\r\n\r\n/**\r\n * Check if given data is not a function\r\n *\r\n * @param data {any} The data to check against the functionality\r\n * @returns {boolean} true if data is not a function, false otherwise.\r\n */\r\nfunction isNotFunction ( data ) {\r\n    return (typeof data !== \"function\")\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/numbers\r\n * @desc Export the validation methods about numbers\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a number\r\n *\r\n * @param data {any} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a number, false otherwise.\r\n */\r\nfunction isNumber ( data ) {\r\n    return (typeof data === 'number' && !Number.isNaN( data ) )\r\n}\r\n\r\nfunction isNumber_1 ( data ) {\r\n    return (Number( data ) === data)\r\n}\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {any} The data to check against the number type\r\n * @returns {boolean} true if data is not of type number or not a number, false otherwise.\r\n */\r\nfunction isNotNumber ( data ) {\r\n    return (typeof data !== 'number' || Number.isNaN( data ) )\r\n}\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {any} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is not a number, false otherwise.\r\n */\r\nfunction isNaN ( data ) {\r\n    return Number.isNaN( data )\r\n}\r\n\r\n/**\r\n * Check if the data is a positive number\r\n *\r\n * @param data {any} The data to check against the positivity\r\n * @returns {boolean} true if data is a positive number, false otherwise.\r\n */\r\nfunction isNumberPositive ( data ) {\r\n    return (isNumber( data ) && data > 0)\r\n}\r\n\r\n/**\r\n * Check if the data is a negative number\r\n *\r\n * @param data {any} The data to check against the negativity\r\n * @returns {boolean} true if data is a negative number, false otherwise.\r\n */\r\nfunction isNumberNegative ( data ) {\r\n    return (isNumber( data ) && data < 0)\r\n}\r\n\r\n/**\r\n * Check if the given data is numerical\r\n *\r\n * @param data {any} The data to check against the numerical type\r\n * @returns {boolean} true if data is numeric, false otherwise\r\n */\r\nfunction isNumeric ( data ) {\r\n    return ( typeof data === 'number' )\r\n}\r\n\r\n/**\r\n * Check if the given data is not numerical\r\n *\r\n * @param data {any} The data to check against the numerical type\r\n * @returns {boolean} true if data is not numeric, false otherwise\r\n */\r\nfunction isNotNumeric ( data ) {\r\n    return ( typeof data !== 'number' )\r\n}\r\n\r\n/**\r\n * Check if the given data is an integer number\r\n *\r\n * @param data {any} The data to check against the integer state\r\n * @returns {boolean} true if data is an integer, false otherwise\r\n */\r\nfunction isInteger ( data ) {\r\n    return (data === 0 && (1 / data) === Number.POSITIVE_INFINITY)\r\n}\r\n\r\nfunction isInteger_1 ( data ) {\r\n    return data % 1 === 0\r\n}\r\n\r\nfunction isInteger_2 ( n ) {\r\n    return n === +n && n === (n | 0);\r\n}\r\n\r\nfunction isInteger_3 ( nVal ) {\r\n    return typeof nVal === \"number\" && isFinite( nVal ) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor( nVal ) === nVal;\r\n}\r\n\r\n/**\r\n * Check if given data is a floating point number\r\n *\r\n * @param data {any} The data to check against the floating point\r\n * @returns {boolean} true if data is a float, false otherwise\r\n */\r\nfunction isFloat ( data ) {\r\n    return data % 1 !== 0\r\n}\r\n\r\nfunction isFloat_1 ( n ) {\r\n    return n === +n && n !== (n | 0)\r\n}\r\n\r\nfunction isFloat_2 ( x ) {\r\n    return !!(x % 1)\r\n}\r\n\r\n/**\r\n * Check if the given data is zero\r\n *\r\n * @param data {any} The data to check against the zero value\r\n * @returns {boolean} true if data is zero, false otherwise\r\n */\r\nfunction isZero ( data ) {\r\n    return (data === 0)\r\n}\r\n\r\n/**\r\n * Check if the given data is a positive zero\r\n *\r\n * @param data {any} The data to check against the positive zero value\r\n * @returns {boolean} true if data is a positive zero, false otherwise\r\n */\r\nfunction isZeroPositive ( data ) {\r\n    return (data === 0 && (1 / data) === Number.POSITIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * Check if the given data is a negative zero\r\n *\r\n * @param data {any} The data to check against the negative zero value\r\n * @returns {boolean} true if data is a negative zero, false otherwise\r\n */\r\nfunction isZeroNegative ( data ) {\r\n    return (data === 0 && (1 / data) === Number.NEGATIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum safe integer number\r\n *\r\n * @param data {any} The data to check against the minimum safe integer state\r\n * @returns {boolean} true if data is a minimum safe integer, false otherwise\r\n */\r\nfunction isMinSafeInteger ( data ) {\r\n    return (data === Number.MIN_SAFE_INTEGER)\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum positive number\r\n *\r\n * @param data {any} The data to check against the positive minimum state\r\n * @returns {boolean} true if data is positive minimum, false otherwise\r\n */\r\nfunction isMinPositive ( data ) {\r\n    return (data === Number.MIN_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum negative number\r\n *\r\n * @param data {any} The data to check against the minimum infinite state\r\n * @returns {boolean} true if data is negative minimum, false otherwise\r\n */\r\nfunction isMinNegative ( data ) {\r\n    return (data === -Number.MIN_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a maximum safe integer number\r\n *\r\n * @param data {any} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a maximum safe integer, false otherwise\r\n */\r\nfunction isMaxSafeInteger ( data ) {\r\n    return (data === Number.MAX_SAFE_INTEGER)\r\n}\r\n\r\n/**\r\n * Check if the given data is a maximum positive number\r\n *\r\n * @param data {any} The data to check against the positive maximum state\r\n * @returns {boolean} true if data is positive maximum, false otherwise\r\n */\r\nfunction isMaxPositive ( data ) {\r\n    return (data === Number.MAX_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a maximum negative number\r\n *\r\n * @param data {any} The data to check against the maximum infinite state\r\n * @returns {boolean} true if data is negative maximum, false otherwise\r\n */\r\nfunction isMaxNegative ( data ) {\r\n    return (data === -Number.MAX_VALUE)\r\n}\r\n\r\n/**\r\n * Check if the given data is a finite number\r\n *\r\n * @param data {any} The data to check against the finite state\r\n * @returns {boolean} true if data is finite, false otherwise\r\n */\r\nfunction isFinite ( data ) {\r\n    return Number.isFinite( data )\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite number\r\n *\r\n * @param data {any} The data to check against the infinite state\r\n * @returns {boolean} true if data is infinite, false otherwise\r\n */\r\nfunction isInfinite ( data ) {\r\n    return !Number.isFinite( data )\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite negative number\r\n *\r\n * @param data {any} The data to check against the negative infinite state\r\n * @returns {boolean} true if data is negative infinite, false otherwise\r\n */\r\nfunction isInfiniteNegative ( data ) {\r\n    return (data === Number.NEGATIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite positive number\r\n *\r\n * @param data {any} The data to check against the positive infinite state\r\n * @returns {boolean} true if data is positive infinite, false otherwise\r\n */\r\nfunction isInfinitePositive ( data ) {\r\n    return (data === Number.POSITIVE_INFINITY)\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/symbols\r\n * @desc Export the validation methods about symbols\r\n */\r\n\r\n/**\r\n * Check if given data is a symbol\r\n *\r\n * @param data {any} The data to check against the symbol type\r\n * @returns {boolean} true if data is a symbol, false otherwise.\r\n */\r\nfunction isSymbol ( data ) {\r\n    return (typeof data === 'symbol')\r\n}\r\n\r\n/**\r\n * Check if given data is not a symbol\r\n *\r\n * @param data {any} The data to check against the symbol type\r\n * @returns {boolean} true if data is not a symbol, false otherwise.\r\n */\r\nfunction isNotSymbol ( data ) {\r\n    return (typeof data !== 'symbol')\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/cores\r\n * @desc This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/maths/maths\r\n * @desc This is the maths export entry point.\r\n * It expose all exports of the ... sub-folder.\r\n *\r\n */\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/temperatures\r\n * @desc Export the validation methods about temperatures\r\n * @requires {@link module:sources/cores/numbers}\r\n */\r\n\r\n// Todo: itee-physics\r\nconst ABSOLUTE_ZERO_KELVIN     = 0.00000000045;\r\nconst ABSOLUTE_ZERO_CELSIUS    = -273.14999999955;\r\nconst ABSOLUTE_ZERO_FAHRENHEIT = -459.67;\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isKelvin ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_KELVIN)\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotKelvin ( data ) {\r\n    return !isKelvin( data )\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isCelsius ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_CELSIUS)\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotCelsius ( data ) {\r\n    return !isCelsius( data )\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isFahrenheit ( data ) {\r\n    return (isNumber( data ) && data >= ABSOLUTE_ZERO_FAHRENHEIT)\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotFahrenheit ( data ) {\r\n    return !isFahrenheit( data )\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nfunction isTemperature ( data ) {\r\n    return ( isKelvin( data ) || isCelsius( data ) || isFahrenheit( data ) )\r\n}\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nfunction isNotTemperature ( data ) {\r\n    return ( isNotKelvin( data ) && isNotCelsius( data ) && isNotFahrenheit( data ) )\r\n}\r\n\r\n/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/physics\r\n * @desc This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n\r\n/**\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n * _/\\\\\\\\\\\\\\\\\\\\\\________________________________________________________/\\\\\\________/\\\\\\_________________/\\\\\\\\\\\\__________________/\\\\\\_______________________________________________________________\r\n * _\\/////\\\\\\///________________________________________________________\\/\\\\\\_______\\/\\\\\\________________\\////\\\\\\_________________\\/\\\\\\______________________________________________________________\r\n * ______\\/\\\\\\_________/\\\\\\______________________________________________\\//\\\\\\______/\\\\\\____________________\\/\\\\\\_____/\\\\\\________\\/\\\\\\_____________________/\\\\\\____________________________________\r\n * _______\\/\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\_____________\\//\\\\\\____/\\\\\\____/\\\\\\\\\\\\\\\\\\_______\\/\\\\\\____\\///_________\\/\\\\\\___/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\_____/\\\\/\\\\\\\\\\\\\\___\r\n * ________\\/\\\\\\_____\\////\\\\\\////____/\\\\\\/////\\\\\\___/\\\\\\/////\\\\\\_____________\\//\\\\\\__/\\\\\\____\\////////\\\\\\______\\/\\\\\\_____/\\\\\\___/\\\\\\\\\\\\\\\\\\__\\////////\\\\\\___\\////\\\\\\////____/\\\\\\///\\\\\\__\\/\\\\\\/////\\\\\\_\r\n * _________\\/\\\\\\________\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\_______________\\//\\\\\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\____\\/\\\\\\__/\\\\\\////\\\\\\____/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\_______/\\\\\\__\\//\\\\\\_\\/\\\\\\___\\///_\r\n * __________\\/\\\\\\________\\/\\\\\\_/\\\\__\\//\\\\///////___\\//\\\\///////_________________\\//\\\\\\\\\\_______/\\\\\\/////\\\\\\_____\\/\\\\\\____\\/\\\\\\_\\/\\\\\\__\\/\\\\\\___/\\\\\\/////\\\\\\_____\\/\\\\\\_/\\\\__\\//\\\\\\__/\\\\\\__\\/\\\\\\_______\r\n * ________/\\\\\\\\\\\\\\\\\\\\\\____\\//\\\\\\\\\\____\\//\\\\\\\\\\\\\\\\\\\\__\\//\\\\\\\\\\\\\\\\\\\\________________\\//\\\\\\_______\\//\\\\\\\\\\\\\\\\/\\\\__/\\\\\\\\\\\\\\\\\\_\\/\\\\\\_\\//\\\\\\\\\\\\\\/\\\\_\\//\\\\\\\\\\\\\\\\/\\\\____\\//\\\\\\\\\\____\\///\\\\\\\\\\/___\\/\\\\\\______\r\n * ________\\///////////______\\/////______\\//////////____\\//////////__________________\\///_________\\////////\\//__\\/////////__\\///___\\///////\\//___\\////////\\//______\\/////_______\\/////_____\\///______\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n *\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/main\r\n * @desc This is the main entry point to bundle the itee validators package.\r\n * It expose all exports of the cores, maths and physics sub-folder.\r\n *\r\n */\r\n\r\nexport { isArray, isNotArray, isArrayOfNull, isNotArrayOfNull, isEmptyArray, isNotEmptyArray, isArrayOfUndefined, isNotArrayOfUndefined, isArrayOfArray, isNotArrayOfArray, isArrayOfString, isNotArrayOfString, isArrayOfSingleElement, isArrayOfMultiElement, isArrayOfObject, isNotArrayOfObject, isBoolean, isNotBoolean, isFunction, isNotFunction, isNumber, isNumber_1, isNotNumber, isNaN, isNumberPositive, isNumberNegative, isNumeric, isNotNumeric, isInteger, isInteger_1, isInteger_2, isInteger_3, isFloat, isFloat_1, isFloat_2, isZero, isZeroPositive, isZeroNegative, isMinSafeInteger, isMinPositive, isMinNegative, isMaxSafeInteger, isMaxPositive, isMaxNegative, isFinite, isInfinite, isInfiniteNegative, isInfinitePositive, isObject, isNotObject, isEmptyObject, isNotEmptyObject, isString, isNotString, isEmptyString, isNotEmptyString, isBlankString, isNotBlankString, isSymbol, isNotSymbol, isNull, isNotNull, isUndefined, isNotUndefined, isNullOrUndefined, isDefined, isEmpty, isNotEmpty, no, ABSOLUTE_ZERO_KELVIN, ABSOLUTE_ZERO_CELSIUS, ABSOLUTE_ZERO_FAHRENHEIT, isKelvin, isNotKelvin, isCelsius, isNotCelsius, isFahrenheit, isNotFahrenheit, isTemperature, isNotTemperature };\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/objects\r\n * @description Export the utilities methods about objects\r\n */\r\n\r\nimport {\r\n    isNull,\r\n    isUndefined,\r\n    isNullOrUndefined,\r\n    isObject\r\n} from 'itee-validators'\r\n\r\nexport function uniq ( a ) {\r\n    var seen = {};\r\n    return a.filter( function ( item ) {\r\n        return seen.hasOwnProperty( item ) ? false : (seen[ item ] = true);\r\n    } );\r\n}\r\n\r\n/**\r\n *\r\n * @param target\r\n * @param source\r\n * @return {*}\r\n */\r\nexport function extend ( target, source ) {\r\n\r\n    let output = undefined\r\n\r\n    if ( isObject( target ) && isNullOrUndefined( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n    } else if ( isNullOrUndefined( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, source )\r\n\r\n    } else if ( isObject( target ) && isObject( source ) ) {\r\n\r\n        output = Object.assign( {}, target )\r\n\r\n        const keys = Object.keys( source )\r\n\r\n        for ( let i = 0, n = keys.length ; i < n ; ++i ) {\r\n\r\n            let key = keys[ i ]\r\n\r\n            if ( isObject( source[ key ] ) ) {\r\n\r\n                if ( key in target ) {\r\n\r\n                    output[ key ] = extend( target[ key ], source[ key ] )\r\n\r\n                } else {\r\n\r\n                    Object.assign( output, { [key]: source[ key ] } )\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                Object.assign( output, { [key]: source[ key ] } )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        output = null\r\n\r\n    }\r\n\r\n    return output;\r\n\r\n}\r\n\r\n/**\r\n * Remove old inheritance stuff due to es6 class !\r\n */\r\nexport function serializeObject () {\r\n\r\n    //    var object = {}\r\n    //    var a = this.serializeArray()\r\n    //\r\n    //    $.each( a, function () {\r\n    //        if ( object[ this.name ] !== undefined ) {\r\n    //            if ( !object[ this.name ].push ) {\r\n    //                object[ this.name ] = [ object[ this.name ] ]\r\n    //            }\r\n    //            object[ this.name ].push( this.value || '' )\r\n    //        } else {\r\n    //            object[ this.name ] = this.value || ''\r\n    //        }\r\n    //    } )\r\n    //\r\n    //    return object\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param ChildClass\r\n * @param ParentClassOrObject\r\n * @return {*}\r\n */\r\nexport function extendObject ( ChildClass, ParentClassOrObject ) {\r\n\r\n    if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Function ) {\r\n\r\n        // Normal Inheritance\r\n        ChildClass.prototype             = new ParentClassOrObject()\r\n        ChildClass.prototype.parent      = ParentClassOrObject.prototype\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Function && ParentClassOrObject.constructor === Object ) {\r\n\r\n        // Pure Virtual Inheritance\r\n        ChildClass.prototype             = ParentClassOrObject\r\n        ChildClass.prototype.parent      = ParentClassOrObject\r\n        ChildClass.prototype.constructor = ChildClass\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Object ) {\r\n\r\n        //Object Concatenation Inheritance\r\n        for ( let attribute in ParentClassOrObject ) {\r\n\r\n            if ( ChildClass.hasOwnProperty( attribute ) ) { // We are sure that obj[key] belongs to the object and was not inherited.\r\n\r\n                if ( ParentClassOrObject[ attribute ].constructor === Object || ParentClassOrObject[ attribute ].constructor === Array ) {\r\n\r\n                    ChildClass[ attribute ] = extendObject( ChildClass[ attribute ], ParentClassOrObject[ attribute ] )\r\n\r\n                } else {\r\n\r\n                    ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                ChildClass[ attribute ] = ParentClassOrObject[ attribute ]\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else if ( ChildClass.constructor === Array && ParentClassOrObject.constructor === Array ) {\r\n\r\n        ChildClass = ChildClass.concat( ParentClassOrObject )\r\n\r\n    } else if ( ChildClass.constructor === Object && ParentClassOrObject.constructor === Array ||\r\n        ChildClass.constructor === Array && ParentClassOrObject.constructor === Object ) {\r\n\r\n        throw new Error( \"Cannot perform extend of object with an array\" )\r\n\r\n    } else {\r\n\r\n        throw new Error( \"Cannot perform extend given parameters...\" )\r\n\r\n    }\r\n\r\n    return ChildClass\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param particles\r\n * @param path\r\n * @param interval\r\n */\r\nexport function createInterval ( particles, path, interval ) {\r\n\r\n    var globalOffset = 0;\r\n\r\n    setInterval( function () {\r\n\r\n        var moveOffset             = 0.1\r\n        var DELTA_BETWEEN_PARTICLE = 1 // meter\r\n\r\n        if ( globalOffset >= DELTA_BETWEEN_PARTICLE ) {\r\n            globalOffset = 0\r\n        }\r\n        else if ( globalOffset + moveOffset > DELTA_BETWEEN_PARTICLE ) { // Avoid final gap jump before new \"loop\"\r\n            globalOffset = DELTA_BETWEEN_PARTICLE\r\n        }\r\n        else {\r\n            globalOffset += moveOffset\r\n        }\r\n\r\n        var pathLength       = path.getLength()\r\n        var localOffset      = globalOffset\r\n        var normalizedOffset = undefined\r\n        var particle         = undefined\r\n        var newPosition      = undefined\r\n\r\n        for ( var i = 0, numberOfParticles = particles.children.length ; i < numberOfParticles ; i++ ) {\r\n\r\n            particle         = particles.children[ i ]\r\n            normalizedOffset = localOffset / pathLength\r\n\r\n            // End of path ( last particle could go to void, but got an error with getPointAt)\r\n            if ( normalizedOffset > 1 ) {\r\n                normalizedOffset = 0\r\n            }\r\n\r\n            newPosition = path.getPointAt( normalizedOffset )\r\n            newPosition.y += 0.1\r\n\r\n            particle.position.copy( newPosition )\r\n\r\n            localOffset += DELTA_BETWEEN_PARTICLE\r\n\r\n        }\r\n\r\n    }, interval );\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/strings\r\n * @description Export the utilities methods about strings\r\n *\r\n */\r\n\r\n\r\n/**\r\n * Set the first char to upper case like a classname\r\n * @param word\r\n * @returns {string}\r\n */\r\nexport function classNameify ( word ) {\r\n    return word.charAt( 0 ).toUpperCase() + word.slice( 1 )\r\n}\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n */\r\nexport let diacriticsMap = (() => {\r\n\r\n    /*\r\n     Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     you may not use this file except in compliance with the License.\r\n     You may obtain a copy of the License at\r\n\r\n     http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n     Unless required by applicable law or agreed to in writing, software\r\n     distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     See the License for the specific language governing permissions and\r\n     limitations under the License.\r\n     */\r\n\r\n    const defaultDiacriticsRemovalMap = [\r\n        {\r\n            'base':    'A',\r\n            'letters': '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'\r\n        },\r\n        {\r\n            'base':    'AA',\r\n            'letters': '\\uA732'\r\n        },\r\n        {\r\n            'base':    'AE',\r\n            'letters': '\\u00C6\\u01FC\\u01E2'\r\n        },\r\n        {\r\n            'base':    'AO',\r\n            'letters': '\\uA734'\r\n        },\r\n        {\r\n            'base':    'AU',\r\n            'letters': '\\uA736'\r\n        },\r\n        {\r\n            'base':    'AV',\r\n            'letters': '\\uA738\\uA73A'\r\n        },\r\n        {\r\n            'base':    'AY',\r\n            'letters': '\\uA73C'\r\n        },\r\n        {\r\n            'base':    'B',\r\n            'letters': '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'\r\n        },\r\n        {\r\n            'base':    'C',\r\n            'letters': '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'\r\n        },\r\n        {\r\n            'base':    'D',\r\n            'letters': '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779\\u00D0'\r\n        },\r\n        {\r\n            'base':    'DZ',\r\n            'letters': '\\u01F1\\u01C4'\r\n        },\r\n        {\r\n            'base':    'Dz',\r\n            'letters': '\\u01F2\\u01C5'\r\n        },\r\n        {\r\n            'base':    'E',\r\n            'letters': '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'\r\n        },\r\n        {\r\n            'base':    'F',\r\n            'letters': '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'\r\n        },\r\n        {\r\n            'base':    'G',\r\n            'letters': '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'\r\n        },\r\n        {\r\n            'base':    'H',\r\n            'letters': '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'\r\n        },\r\n        {\r\n            'base':    'I',\r\n            'letters': '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'\r\n        },\r\n        {\r\n            'base':    'J',\r\n            'letters': '\\u004A\\u24BF\\uFF2A\\u0134\\u0248'\r\n        },\r\n        {\r\n            'base':    'K',\r\n            'letters': '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'\r\n        },\r\n        {\r\n            'base':    'L',\r\n            'letters': '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'\r\n        },\r\n        {\r\n            'base':    'LJ',\r\n            'letters': '\\u01C7'\r\n        },\r\n        {\r\n            'base':    'Lj',\r\n            'letters': '\\u01C8'\r\n        },\r\n        {\r\n            'base':    'M',\r\n            'letters': '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'\r\n        },\r\n        {\r\n            'base':    'N',\r\n            'letters': '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'\r\n        },\r\n        {\r\n            'base':    'NJ',\r\n            'letters': '\\u01CA'\r\n        },\r\n        {\r\n            'base':    'Nj',\r\n            'letters': '\\u01CB'\r\n        },\r\n        {\r\n            'base':    'O',\r\n            'letters': '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'\r\n        },\r\n        {\r\n            'base':    'OI',\r\n            'letters': '\\u01A2'\r\n        },\r\n        {\r\n            'base':    'OO',\r\n            'letters': '\\uA74E'\r\n        },\r\n        {\r\n            'base':    'OU',\r\n            'letters': '\\u0222'\r\n        },\r\n        {\r\n            'base':    'OE',\r\n            'letters': '\\u008C\\u0152'\r\n        },\r\n        {\r\n            'base':    'oe',\r\n            'letters': '\\u009C\\u0153'\r\n        },\r\n        {\r\n            'base':    'P',\r\n            'letters': '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'\r\n        },\r\n        {\r\n            'base':    'Q',\r\n            'letters': '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'\r\n        },\r\n        {\r\n            'base':    'R',\r\n            'letters': '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'\r\n        },\r\n        {\r\n            'base':    'S',\r\n            'letters': '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'\r\n        },\r\n        {\r\n            'base':    'T',\r\n            'letters': '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'\r\n        },\r\n        {\r\n            'base':    'TZ',\r\n            'letters': '\\uA728'\r\n        },\r\n        {\r\n            'base':    'U',\r\n            'letters': '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'\r\n        },\r\n        {\r\n            'base':    'V',\r\n            'letters': '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'\r\n        },\r\n        {\r\n            'base':    'VY',\r\n            'letters': '\\uA760'\r\n        },\r\n        {\r\n            'base':    'W',\r\n            'letters': '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'\r\n        },\r\n        {\r\n            'base':    'X',\r\n            'letters': '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'\r\n        },\r\n        {\r\n            'base':    'Y',\r\n            'letters': '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'\r\n        },\r\n        {\r\n            'base':    'Z',\r\n            'letters': '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'\r\n        },\r\n        {\r\n            'base':    'a',\r\n            'letters': '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'\r\n        },\r\n        {\r\n            'base':    'aa',\r\n            'letters': '\\uA733'\r\n        },\r\n        {\r\n            'base':    'ae',\r\n            'letters': '\\u00E6\\u01FD\\u01E3'\r\n        },\r\n        {\r\n            'base':    'ao',\r\n            'letters': '\\uA735'\r\n        },\r\n        {\r\n            'base':    'au',\r\n            'letters': '\\uA737'\r\n        },\r\n        {\r\n            'base':    'av',\r\n            'letters': '\\uA739\\uA73B'\r\n        },\r\n        {\r\n            'base':    'ay',\r\n            'letters': '\\uA73D'\r\n        },\r\n        {\r\n            'base':    'b',\r\n            'letters': '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'\r\n        },\r\n        {\r\n            'base':    'c',\r\n            'letters': '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'\r\n        },\r\n        {\r\n            'base':    'd',\r\n            'letters': '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'\r\n        },\r\n        {\r\n            'base':    'dz',\r\n            'letters': '\\u01F3\\u01C6'\r\n        },\r\n        {\r\n            'base':    'e',\r\n            'letters': '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'\r\n        },\r\n        {\r\n            'base':    'f',\r\n            'letters': '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'\r\n        },\r\n        {\r\n            'base':    'g',\r\n            'letters': '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'\r\n        },\r\n        {\r\n            'base':    'h',\r\n            'letters': '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'\r\n        },\r\n        {\r\n            'base':    'hv',\r\n            'letters': '\\u0195'\r\n        },\r\n        {\r\n            'base':    'i',\r\n            'letters': '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'\r\n        },\r\n        {\r\n            'base':    'j',\r\n            'letters': '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'\r\n        },\r\n        {\r\n            'base':    'k',\r\n            'letters': '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'\r\n        },\r\n        {\r\n            'base':    'l',\r\n            'letters': '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'\r\n        },\r\n        {\r\n            'base':    'lj',\r\n            'letters': '\\u01C9'\r\n        },\r\n        {\r\n            'base':    'm',\r\n            'letters': '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'\r\n        },\r\n        {\r\n            'base':    'n',\r\n            'letters': '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'\r\n        },\r\n        {\r\n            'base':    'nj',\r\n            'letters': '\\u01CC'\r\n        },\r\n        {\r\n            'base':    'o',\r\n            'letters': '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'\r\n        },\r\n        {\r\n            'base':    'oi',\r\n            'letters': '\\u01A3'\r\n        },\r\n        {\r\n            'base':    'ou',\r\n            'letters': '\\u0223'\r\n        },\r\n        {\r\n            'base':    'oo',\r\n            'letters': '\\uA74F'\r\n        },\r\n        {\r\n            'base':    'p',\r\n            'letters': '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'\r\n        },\r\n        {\r\n            'base':    'q',\r\n            'letters': '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'\r\n        },\r\n        {\r\n            'base':    'r',\r\n            'letters': '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'\r\n        },\r\n        {\r\n            'base':    's',\r\n            'letters': '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'\r\n        },\r\n        {\r\n            'base':    't',\r\n            'letters': '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'\r\n        },\r\n        {\r\n            'base':    'tz',\r\n            'letters': '\\uA729'\r\n        },\r\n        {\r\n            'base':    'u',\r\n            'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'\r\n        },\r\n        {\r\n            'base':    'v',\r\n            'letters': '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'\r\n        },\r\n        {\r\n            'base':    'vy',\r\n            'letters': '\\uA761'\r\n        },\r\n        {\r\n            'base':    'w',\r\n            'letters': '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'\r\n        },\r\n        {\r\n            'base':    'x',\r\n            'letters': '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'\r\n        },\r\n        {\r\n            'base':    'y',\r\n            'letters': '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'\r\n        },\r\n        {\r\n            'base':    'z',\r\n            'letters': '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'\r\n        }\r\n    ]\r\n\r\n    let map = {}\r\n\r\n    for ( let i = 0 ; i < defaultDiacriticsRemovalMap.length ; i++ ) {\r\n\r\n        const letters = defaultDiacriticsRemovalMap [ i ].letters\r\n\r\n        for ( let j = 0 ; j < letters.length ; j++ ) {\r\n\r\n            map[ letters[ j ] ] = defaultDiacriticsRemovalMap[ i ].base\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return map\r\n\r\n})()\r\n\r\n/**\r\n * @static\r\n * @public\r\n * @memberOf TApplication\r\n *\r\n * @param string\r\n */\r\nexport function removeDiacritics ( string ) {\r\n\r\n    // eslint-disable-next-line\r\n    return string.replace( /[^\\u0000-\\u007E]/g, function ( a ) {\r\n        return diacriticsMap[ a ] || a;\r\n    } );\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/symbols\r\n * @description Export the utilities methods about symbols\r\n */\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/voids\r\n * @description Export the utilities methods about voids notions\r\n */\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './arrays'\r\nexport * from './booleans'\r\nexport * from './functions'\r\nexport * from './numbers'\r\nexport * from './objects'\r\nexport * from './strings'\r\nexport * from './symbols'\r\nexport * from './voids'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport fs from 'fs'\r\nimport path from 'path'\r\n\r\n/**\r\n * Just an override of 'fs.existsSync' with more explicit name\r\n *\r\n * @param filePath the path to check\r\n * @private\r\n */\r\nfunction fileExistForPath ( filePath ) {\r\n\r\n    return fs.existsSync( filePath )\r\n\r\n}\r\n\r\n/**\r\n * Check the file size against a limit ( 0 as default ).\r\n * @param filePath\r\n * @param limit\r\n * @return {boolean} - True if below the limit or zero, false otherwise\r\n * @private\r\n */\r\nfunction fileIsEmpty ( filePath, limit ) {\r\n    'use strict'\r\n\r\n    const _limit   = limit || 0\r\n    const fileSize = fs.statSync( filePath ).size\r\n\r\n    return ( fileSize < _limit )\r\n\r\n}\r\n\r\n/**\r\n * Allow to search all files under filePaths in a recursive way\r\n *\r\n * @param {Array.<string>|string} filePaths - The files paths where search files\r\n * @returns {Array} - The paths of finded files\r\n * @private\r\n */\r\nfunction getFilesPathsUnder ( filePaths ) {\r\n\r\n    let files = []\r\n\r\n    if ( Array.isArray( filePaths ) ) {\r\n\r\n        let filePath = undefined\r\n        for ( let pathIndex = 0, numberOfPaths = filePaths.length ; pathIndex < numberOfPaths ; pathIndex++ ) {\r\n\r\n            filePath = filePaths[ pathIndex ]\r\n            checkStateOf( filePath )\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        checkStateOf( filePaths )\r\n\r\n    }\r\n\r\n    return files\r\n\r\n    function getFilesPathsUnderFolder ( folder ) {\r\n\r\n        fs.readdirSync( folder ).forEach( ( name ) => {\r\n\r\n            const filePath = path.resolve( folder, name )\r\n            checkStateOf( filePath )\r\n\r\n        } )\r\n\r\n    }\r\n\r\n    function checkStateOf ( filePath ) {\r\n\r\n        if ( !fs.existsSync( filePath ) ) {\r\n            console.error( 'SchemaRegister: Invalid file path \"' + filePath + '\"' )\r\n            return\r\n        }\r\n\r\n        const stats = fs.statSync( filePath )\r\n        if ( stats.isFile() ) {\r\n\r\n            files.push( filePath )\r\n\r\n        } else if ( stats.isDirectory() ) {\r\n\r\n            Array.prototype.push.apply( files, getFilesPathsUnderFolder( filePath ) )\r\n\r\n        } else {\r\n\r\n            console.error( \"Invalid stat object !\" )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { fileExistForPath, fileIsEmpty, getFilesPathsUnder }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/cores/cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './files'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/geomathics/trigonometries\r\n */\r\n\r\nexport const PI   = Math.PI\r\nexport const PI_2 = Math.PI / 2\r\nexport const PI_4 = Math.PI / 4\r\n\r\nexport const DEG_TO_RAD = (PI / 180)\r\nexport const RAD_TO_DEG = (180 / PI)\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function degreesToRadians ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function degreesFromRadians ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param radians\r\n * @return {number}\r\n */\r\nexport function radiansToDegrees ( radians ) {\r\n    return radians * RAD_TO_DEG\r\n}\r\n\r\n/**\r\n *\r\n * @param degrees\r\n * @return {number}\r\n */\r\nexport function radiansFromDegrees ( degrees ) {\r\n    return degrees * DEG_TO_RAD\r\n}\r\n\r\n// PROJECTION 2D/3D\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getYaw ( vector ) {\r\n    return -Math.atan2( vector.x, vector.z )\r\n}\r\n\r\n/**\r\n *\r\n * @param vector\r\n * @return {number}\r\n */\r\nexport function getPitch ( vector ) {\r\n    return Math.asin( vector.y )\r\n}\r\n\r\n/**\r\n *\r\n * @param vectorDir\r\n * @return {{yaw: number, pitch: number}}\r\n */\r\nexport function convertWebGLRotationToTopogicalYawPitch ( vectorDir ) {\r\n\r\n    function getYaw ( vector ) {\r\n        return Math.atan2( vector.y, vector.x )\r\n    }\r\n\r\n    function getPitch ( vector ) {\r\n        return Math.asin( vector.z )\r\n    }\r\n\r\n    const topoVectorDir = vectorDir //convertWebglVectorToTopologicVector( vectorDir )\r\n\r\n    return {\r\n        yaw:   -( radiansToDegrees( getYaw( topoVectorDir ) ) - 90 ),\r\n        pitch: radiansToDegrees( getPitch( topoVectorDir ) )\r\n    }\r\n\r\n}\r\n\r\n///**\r\n// * TRIGONOMETRIC CIRCLE CONCEPT WITH INTEGRATED TIMER\r\n// *\r\n// * Provide position on any given referential (starting position)\r\n// * this position is updated every tick on a trigonometric circle of rayon (radius)\r\n// * and give new position in px about this point in current referential.\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCircle ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.options = $.extend( {}, TTrigonometricCircle.DEFAULT_SETTINGS, settings );\r\n//\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCircle, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCircle.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _   = this;\r\n//        _.angle = (increment ? _.angle + increment : _.angle + 1);\r\n//        if ( _.angle >= 360 ) {\r\n//            _.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.angle ) ) * _.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.angle ) ) * _.radius;\r\n//    }\r\n//\r\n//} )\r\n//\r\n///////////\r\n//\r\n///**\r\n// *\r\n// * @param settings\r\n// * @constructor\r\n// */\r\n//function TTrigonometricCone ( settings ) {\r\n//\r\n//    var _ = this;\r\n//\r\n//    _.model = $.extend( {}, TTrigonometricCone.DEFAULT_SETTINGS, settings );\r\n//}\r\n//\r\n//Object.assign( TTrigonometricCone, {\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    DEFAULT_SETTINGS: {\r\n//        angle:       0,\r\n//        height:      10,\r\n//        radius:      10\r\n//    }\r\n//\r\n//} )\r\n//\r\n//Object.assign( TTrigonometricCone.prototype, {\r\n//\r\n//    /**\r\n//     *\r\n//     * @param increment\r\n//     */\r\n//    increment ( increment ) {\r\n//        var _         = this;\r\n//        _.model.angle = (increment ? _.model.angle + increment : _.model.angle + 1);\r\n//        if ( _.model.angle >= 360 ) {\r\n//            _.model.angle = 0;\r\n//        }\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     */\r\n//    getRadius () {\r\n//        var _ = this;\r\n//        return _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getCosinus () {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @return {number}\r\n//     */\r\n//    getSinus () {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * _.model.radius;\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getCosinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.cos( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ) );\r\n//    },\r\n//\r\n//    /**\r\n//     *\r\n//     * @param height\r\n//     * @return {number}\r\n//     */\r\n//    getSinusForHeight ( height ) {\r\n//        var _ = this;\r\n//        return Math.sin( degreesToRadians( _.model.angle ) ) * ((_.model.radius / _.model.height) * Math.abs( height ));\r\n//    }\r\n//\r\n//} )\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/geometries/_geomathries\r\n * @description This is the geometries/mathematique export entry point.\r\n * It expose all exports of the geometries sub-files.\r\n */\r\n\r\nexport * from './trigonometries'\r\n\r\n/**\r\n * Returns a random integer between min (inclusive) and max (inclusive)\r\n * Using Math.round() will give you a non-uniform distribution!\r\n *\r\n * @param min - The minimum (inclusive) range value for random number\r\n * @param max - The maximum (inclusive) range value for random number\r\n * @returns {Number} - A random number between man and max\r\n * @private\r\n */\r\nfunction randomInt( min, max ) {\r\n    return Math.floor( Math.random() * (max - min + 1) ) + min\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/temperatures\r\n * @description Export the utilities methods about temperatures\r\n * @requires {@link module:sources/cores/numbers}\r\n */\r\n\r\nimport {\r\n    isNotEmpty,\r\n    isNumber,\r\n    isNotTemperature\r\n} from 'itee-validators'\r\n\r\nexport const FAHRENHEIT_CELSIUS_COEFFICIENT = 1.8\r\nexport const FAHRENHEIT_CELSIUS_CONSTANTE   = 32.0\r\nexport const KELVIN_CELSIUS_CONSTANTE       = 273.14999999955\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToKelvin ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return (celsius + KELVIN_CELSIUS_CONSTANTE).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param celsius\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function celsiusToFahrenheit ( celsius, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( celsius ) ) { throw new Error( 'Require first operand as an temperature in celsius !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return (celsius * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToCelsius ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ((fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param fahrenheit\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function fahrenheitToKelvin ( fahrenheit, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( fahrenheit ) ) { throw new Error( 'Require first operand as an temperature in fahrenheit !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return (((fahrenheit - FAHRENHEIT_CELSIUS_CONSTANTE ) / FAHRENHEIT_CELSIUS_COEFFICIENT) + KELVIN_CELSIUS_CONSTANTE).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToCelsius ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return (kelvin - KELVIN_CELSIUS_CONSTANTE).toFixed( _precisionPointAt )\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param kelvin\r\n * @param precisionPointAt\r\n * @return {string}\r\n */\r\nexport function kelvinToFahrenheit ( kelvin, precisionPointAt ) {\r\n\r\n    //Check if required parameter is valid\r\n    if ( isNotTemperature( kelvin ) ) { throw new Error( 'Require first operand as an temperature in kelvin !' ) }\r\n\r\n    //Check optional parameter precisionPointAt and set it to 2 by default\r\n    const _precisionPointAt = ( isNotEmpty( precisionPointAt ) && isNumber( precisionPointAt ) ? precisionPointAt : 2)\r\n\r\n    // Sets the decimal point for the temperature conversion equation\r\n    return ((kelvin - KELVIN_CELSIUS_CONSTANTE) * FAHRENHEIT_CELSIUS_COEFFICIENT + FAHRENHEIT_CELSIUS_CONSTANTE).toFixed( _precisionPointAt )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n\r\nexport * from './temperatures'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/physics/physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @module sources/itee-util\r\n * @description The main entry point for Itee-Utils, it contains all exports of the library\r\n */\r\n\r\nexport * from './cores/_cores'\r\nexport * from './fs/_fs'\r\nexport * from './geomathics/_geomathics'\r\nexport * from './physics/_physics'\r\nexport * from './testings/_testings'\r\n"],"names":["path"],"mappings":"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"}